import type { RouteRequestBody, RouteResponse } from '@seamapi/types/connect';
import type { SetNonNullable } from 'type-fest';
import { type Client } from '../../../../lib/seam/connect/client.js';
import { type SeamHttpFromPublishableKeyOptions, type SeamHttpOptions, type SeamHttpOptionsWithApiKey, type SeamHttpOptionsWithClient, type SeamHttpOptionsWithClientSessionToken, type SeamHttpOptionsWithConsoleSessionToken, type SeamHttpOptionsWithPersonalAccessToken, type SeamHttpRequestOptions } from '../../../../lib/seam/connect/options.js';
import { SeamHttpRequest } from '../../../../lib/seam/connect/seam-http-request.js';
export declare class SeamHttpThermostatsClimateSettingSchedules {
    client: Client;
    readonly defaults: Required<SeamHttpRequestOptions>;
    constructor(apiKeyOrOptions?: string | SeamHttpOptions);
    static fromClient(client: SeamHttpOptionsWithClient['client'], options?: Omit<SeamHttpOptionsWithClient, 'client'>): SeamHttpThermostatsClimateSettingSchedules;
    static fromApiKey(apiKey: SeamHttpOptionsWithApiKey['apiKey'], options?: Omit<SeamHttpOptionsWithApiKey, 'apiKey'>): SeamHttpThermostatsClimateSettingSchedules;
    static fromClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken'], options?: Omit<SeamHttpOptionsWithClientSessionToken, 'clientSessionToken'>): SeamHttpThermostatsClimateSettingSchedules;
    static fromPublishableKey(publishableKey: string, userIdentifierKey: string, options?: SeamHttpFromPublishableKeyOptions): Promise<SeamHttpThermostatsClimateSettingSchedules>;
    static fromConsoleSessionToken(consoleSessionToken: SeamHttpOptionsWithConsoleSessionToken['consoleSessionToken'], workspaceId: SeamHttpOptionsWithConsoleSessionToken['workspaceId'], options?: Omit<SeamHttpOptionsWithConsoleSessionToken, 'consoleSessionToken' | 'workspaceId'>): SeamHttpThermostatsClimateSettingSchedules;
    static fromPersonalAccessToken(personalAccessToken: SeamHttpOptionsWithPersonalAccessToken['personalAccessToken'], workspaceId: SeamHttpOptionsWithPersonalAccessToken['workspaceId'], options?: Omit<SeamHttpOptionsWithPersonalAccessToken, 'personalAccessToken' | 'workspaceId'>): SeamHttpThermostatsClimateSettingSchedules;
    updateClientSessionToken(clientSessionToken: SeamHttpOptionsWithClientSessionToken['clientSessionToken']): Promise<void>;
    create(body?: ThermostatsClimateSettingSchedulesCreateBody): SeamHttpRequest<ThermostatsClimateSettingSchedulesCreateResponse, 'climate_setting_schedule'>;
    delete(body?: ThermostatsClimateSettingSchedulesDeleteBody): SeamHttpRequest<void, undefined>;
    get(body?: ThermostatsClimateSettingSchedulesGetParams): SeamHttpRequest<ThermostatsClimateSettingSchedulesGetResponse, 'climate_setting_schedule'>;
    list(body?: ThermostatsClimateSettingSchedulesListParams): SeamHttpRequest<ThermostatsClimateSettingSchedulesListResponse, 'climate_setting_schedules'>;
    update(body?: ThermostatsClimateSettingSchedulesUpdateBody): SeamHttpRequest<void, undefined>;
}
export type ThermostatsClimateSettingSchedulesCreateBody = RouteRequestBody<'/thermostats/climate_setting_schedules/create'>;
export type ThermostatsClimateSettingSchedulesCreateResponse = SetNonNullable<Required<RouteResponse<'/thermostats/climate_setting_schedules/create'>>>;
export type ThermostatsClimateSettingSchedulesCreateOptions = never;
export type ThermostatsClimateSettingSchedulesDeleteBody = RouteRequestBody<'/thermostats/climate_setting_schedules/delete'>;
export type ThermostatsClimateSettingSchedulesDeleteResponse = SetNonNullable<Required<RouteResponse<'/thermostats/climate_setting_schedules/delete'>>>;
export type ThermostatsClimateSettingSchedulesDeleteOptions = never;
export type ThermostatsClimateSettingSchedulesGetParams = RouteRequestBody<'/thermostats/climate_setting_schedules/get'>;
export type ThermostatsClimateSettingSchedulesGetResponse = SetNonNullable<Required<RouteResponse<'/thermostats/climate_setting_schedules/get'>>>;
export type ThermostatsClimateSettingSchedulesGetOptions = never;
export type ThermostatsClimateSettingSchedulesListParams = RouteRequestBody<'/thermostats/climate_setting_schedules/list'>;
export type ThermostatsClimateSettingSchedulesListResponse = SetNonNullable<Required<RouteResponse<'/thermostats/climate_setting_schedules/list'>>>;
export type ThermostatsClimateSettingSchedulesListOptions = never;
export type ThermostatsClimateSettingSchedulesUpdateBody = RouteRequestBody<'/thermostats/climate_setting_schedules/update'>;
export type ThermostatsClimateSettingSchedulesUpdateResponse = SetNonNullable<Required<RouteResponse<'/thermostats/climate_setting_schedules/update'>>>;
export type ThermostatsClimateSettingSchedulesUpdateOptions = never;

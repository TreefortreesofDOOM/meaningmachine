import { z } from 'zod';

declare const connect_webview: z.ZodObject<{
    connect_webview_id: z.ZodString;
    connected_account_id: z.ZodOptional<z.ZodString>;
    url: z.ZodString;
    workspace_id: z.ZodString;
    device_selection_mode: z.ZodEnum<["none", "single", "multiple"]>;
    accepted_providers: z.ZodArray<z.ZodString, "many">;
    accepted_devices: z.ZodArray<z.ZodString, "many">;
    any_provider_allowed: z.ZodBoolean;
    any_device_allowed: z.ZodBoolean;
    created_at: z.ZodString;
    login_successful: z.ZodBoolean;
    status: z.ZodEnum<["pending", "failed", "authorized"]>;
    custom_redirect_url: z.ZodNullable<z.ZodString>;
    custom_redirect_failure_url: z.ZodNullable<z.ZodString>;
    custom_metadata: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>;
    automatically_manage_new_devices: z.ZodBoolean;
    wait_for_device_creation: z.ZodBoolean;
    authorized_at: z.ZodNullable<z.ZodString>;
    selected_provider: z.ZodNullable<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    created_at: string;
    status: "pending" | "failed" | "authorized";
    workspace_id: string;
    connect_webview_id: string;
    url: string;
    device_selection_mode: "none" | "single" | "multiple";
    accepted_providers: string[];
    accepted_devices: string[];
    any_provider_allowed: boolean;
    any_device_allowed: boolean;
    login_successful: boolean;
    custom_redirect_url: string | null;
    custom_redirect_failure_url: string | null;
    custom_metadata: Record<string, string | boolean>;
    automatically_manage_new_devices: boolean;
    wait_for_device_creation: boolean;
    authorized_at: string | null;
    selected_provider: string | null;
    connected_account_id?: string | undefined;
}, {
    created_at: string;
    status: "pending" | "failed" | "authorized";
    workspace_id: string;
    connect_webview_id: string;
    url: string;
    device_selection_mode: "none" | "single" | "multiple";
    accepted_providers: string[];
    accepted_devices: string[];
    any_provider_allowed: boolean;
    any_device_allowed: boolean;
    login_successful: boolean;
    custom_redirect_url: string | null;
    custom_redirect_failure_url: string | null;
    custom_metadata: Record<string, string | boolean>;
    automatically_manage_new_devices: boolean;
    wait_for_device_creation: boolean;
    authorized_at: string | null;
    selected_provider: string | null;
    connected_account_id?: string | undefined;
}>;
type ConnectWebview = z.infer<typeof connect_webview>;

declare const custom_metadata: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>;
type CustomMetadata = z.output<typeof custom_metadata>;

declare const schemas_connect_webview: typeof connect_webview;
declare const schemas_custom_metadata: typeof custom_metadata;
declare namespace schemas {
  export { schemas_connect_webview as connect_webview, schemas_custom_metadata as custom_metadata };
}

declare const _default: {
    components: {
        schemas: {
            access_code: {
                properties: {
                    access_code_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    code: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    common_code_key: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    ends_at: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    errors: {
                        description: string;
                        nullable: boolean;
                    };
                    is_backup: {
                        description: string;
                        type: string;
                    };
                    is_backup_access_code_available: {
                        description: string;
                        type: string;
                    };
                    is_external_modification_allowed: {
                        description: string;
                        type: string;
                    };
                    is_managed: {
                        description: string;
                        enum: boolean[];
                        type: string;
                    };
                    is_offline_access_code: {
                        description: string;
                        type: string;
                    };
                    is_one_time_use: {
                        description: string;
                        type: string;
                    };
                    is_scheduled_on_device: {
                        description: string;
                        type: string;
                    };
                    is_waiting_for_code_assignment: {
                        description: string;
                        type: string;
                    };
                    name: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    pulled_backup_access_code_id: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    starts_at: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    status: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    type: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    warnings: {
                        description: string;
                        nullable: boolean;
                    };
                };
                required: string[];
                type: string;
            };
            acs_access_group: {
                properties: {
                    access_group_type: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    access_group_type_display_name: {
                        description: string;
                        type: string;
                    };
                    acs_access_group_id: {
                        format: string;
                        type: string;
                    };
                    acs_system_id: {
                        format: string;
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    external_type: {
                        enum: string[];
                        type: string;
                    };
                    external_type_display_name: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            acs_system: {
                properties: {
                    acs_system_id: {
                        format: string;
                        type: string;
                    };
                    can_automate_enrollment: {
                        type: string;
                    };
                    connected_account_ids: {
                        items: {
                            type: string;
                        };
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    external_type: {
                        enum: string[];
                        type: string;
                    };
                    external_type_display_name: {
                        type: string;
                    };
                    image_alt_text: {
                        type: string;
                    };
                    image_url: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    system_type: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    system_type_display_name: {
                        description: string;
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            acs_user: {
                properties: {
                    access_schedule: {
                        properties: {
                            ends_at: {
                                format: string;
                                type: string;
                            };
                            starts_at: {
                                format: string;
                                type: string;
                            };
                        };
                        required: string[];
                        type: string;
                    };
                    acs_system_id: {
                        format: string;
                        type: string;
                    };
                    acs_user_id: {
                        format: string;
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    display_name: {
                        type: string;
                    };
                    email: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    email_address: {
                        format: string;
                        type: string;
                    };
                    external_type: {
                        enum: string[];
                        type: string;
                    };
                    external_type_display_name: {
                        type: string;
                    };
                    full_name: {
                        type: string;
                    };
                    hid_acs_system_id: {
                        format: string;
                        type: string;
                    };
                    is_suspended: {
                        type: string;
                    };
                    phone_number: {
                        nullable: boolean;
                        type: string;
                    };
                    user_identity_email_address: {
                        type: string;
                    };
                    user_identity_id: {
                        type: string;
                    };
                    user_identity_phone_number: {
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            action_attempt: {
                discriminator: {
                    propertyName: string;
                };
                oneOf: ({
                    properties: {
                        action_attempt_id: {
                            format: string;
                            type: string;
                        };
                        action_type: {
                            type: string;
                        };
                        error: {
                            format: string;
                            nullable: boolean;
                            type: string;
                            properties?: never;
                            required?: never;
                        };
                        result: {
                            nullable: boolean;
                            format?: never;
                            type?: never;
                        };
                        status: {
                            enum: string[];
                            type: string;
                        };
                    };
                    required: string[];
                    type: string;
                } | {
                    properties: {
                        action_attempt_id: {
                            format: string;
                            type: string;
                        };
                        action_type: {
                            type: string;
                        };
                        error: {
                            format: string;
                            nullable: boolean;
                            type: string;
                            properties?: never;
                            required?: never;
                        };
                        result: {
                            format: string;
                            nullable: boolean;
                            type: string;
                        };
                        status: {
                            enum: string[];
                            type: string;
                        };
                    };
                    required: string[];
                    type: string;
                } | {
                    properties: {
                        action_attempt_id: {
                            format: string;
                            type: string;
                        };
                        action_type: {
                            type: string;
                        };
                        error: {
                            properties: {
                                message: {
                                    type: string;
                                };
                                type: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                            format?: never;
                            nullable?: never;
                        };
                        result: {
                            format: string;
                            nullable: boolean;
                            type: string;
                        };
                        status: {
                            enum: string[];
                            type: string;
                        };
                    };
                    required: string[];
                    type: string;
                })[];
            };
            client_session: {
                properties: {
                    client_session_id: {
                        format: string;
                        type: string;
                    };
                    connect_webview_ids: {
                        items: {
                            format: string;
                            type: string;
                        };
                        type: string;
                    };
                    connected_account_ids: {
                        items: {
                            format: string;
                            type: string;
                        };
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    device_count: {
                        type: string;
                    };
                    token: {
                        type: string;
                    };
                    user_identifier_key: {
                        nullable: boolean;
                        type: string;
                    };
                    user_identity_ids: {
                        items: {
                            format: string;
                            type: string;
                        };
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            climate_setting_schedule: {
                properties: {
                    automatic_cooling_enabled: {
                        type: string;
                    };
                    automatic_heating_enabled: {
                        type: string;
                    };
                    climate_setting_schedule_id: {
                        format: string;
                        type: string;
                    };
                    cooling_set_point_celsius: {
                        type: string;
                    };
                    cooling_set_point_fahrenheit: {
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    device_id: {
                        format: string;
                        type: string;
                    };
                    errors: {
                        description: string;
                        nullable: boolean;
                    };
                    heating_set_point_celsius: {
                        type: string;
                    };
                    heating_set_point_fahrenheit: {
                        type: string;
                    };
                    hvac_mode_setting: {
                        enum: string[];
                        type: string;
                    };
                    manual_override_allowed: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    schedule_ends_at: {
                        type: string;
                    };
                    schedule_starts_at: {
                        type: string;
                    };
                    schedule_type: {
                        enum: string[];
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            connect_webview: {
                properties: {
                    accepted_devices: {
                        items: {
                            type: string;
                        };
                        type: string;
                    };
                    accepted_providers: {
                        items: {
                            type: string;
                        };
                        type: string;
                    };
                    any_device_allowed: {
                        type: string;
                    };
                    any_provider_allowed: {
                        type: string;
                    };
                    authorized_at: {
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    automatically_manage_new_devices: {
                        type: string;
                    };
                    connect_webview_id: {
                        format: string;
                        type: string;
                    };
                    connected_account_id: {
                        format: string;
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    custom_metadata: {
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                        type: string;
                    };
                    custom_redirect_failure_url: {
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    custom_redirect_url: {
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    device_selection_mode: {
                        enum: string[];
                        type: string;
                    };
                    login_successful: {
                        type: string;
                    };
                    selected_provider: {
                        nullable: boolean;
                        type: string;
                    };
                    status: {
                        enum: string[];
                        type: string;
                    };
                    url: {
                        format: string;
                        type: string;
                    };
                    wait_for_device_creation: {
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            connected_account: {
                properties: {
                    account_type: {
                        type: string;
                    };
                    account_type_display_name: {
                        type: string;
                    };
                    automatically_manage_new_devices: {
                        type: string;
                    };
                    connected_account_id: {
                        format: string;
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    custom_metadata: {
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                        type: string;
                    };
                    errors: {
                        nullable: boolean;
                    };
                    user_identifier: {
                        properties: {
                            api_url: {
                                type: string;
                            };
                            email: {
                                type: string;
                            };
                            exclusive: {
                                type: string;
                            };
                            phone: {
                                type: string;
                            };
                            username: {
                                type: string;
                            };
                        };
                        type: string;
                    };
                    warnings: {
                        nullable: boolean;
                    };
                };
                required: string[];
                type: string;
            };
            device: {
                properties: {
                    can_program_online_access_codes: {
                        type: string;
                    };
                    can_remotely_lock: {
                        type: string;
                    };
                    can_remotely_unlock: {
                        type: string;
                    };
                    can_simulate_removal: {
                        type: string;
                    };
                    capabilities_supported: {
                        description: string;
                        items: {
                            enum: string[];
                            type: string;
                        };
                        type: string;
                    };
                    connected_account_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    custom_metadata: {
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_type: {
                        description: string;
                        oneOf: {
                            enum: string[];
                            type: string;
                        }[];
                    };
                    display_name: {
                        description: string;
                        type: string;
                    };
                    errors: {
                        description: string;
                        items: {
                            properties: {
                                error_code: {
                                    type: string;
                                };
                                message: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    is_managed: {
                        description: string;
                        enum: boolean[];
                        type: string;
                    };
                    location: {
                        description: string;
                        nullable: boolean;
                        properties: {
                            location_name: {
                                description: string;
                                type: string;
                            };
                            timezone: {
                                description: string;
                                type: string;
                            };
                        };
                        type: string;
                    };
                    nickname: {
                        description: string;
                        type: string;
                    };
                    properties: {
                        allOf: ({
                            allOf: ({
                                allOf: ({
                                    properties: {
                                        accessory_keypad: {
                                            description: string;
                                            properties: {
                                                battery: {
                                                    description: string;
                                                    properties: {
                                                        level: {
                                                            maximum: number;
                                                            minimum: number;
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                    type: string;
                                                };
                                                is_connected: {
                                                    description: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        appearance: {
                                            properties: {
                                                name: {
                                                    description: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        battery: {
                                            description: string;
                                            properties: {
                                                level: {
                                                    maximum: number;
                                                    minimum: number;
                                                    type: string;
                                                };
                                                status: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        battery_level: {
                                            description: string;
                                            maximum: number;
                                            minimum: number;
                                            type: string;
                                        };
                                        has_direct_power: {
                                            description: string;
                                            type: string;
                                        };
                                        image_alt_text: {
                                            description: string;
                                            type: string;
                                        };
                                        image_url: {
                                            description: string;
                                            format: string;
                                            type: string;
                                        };
                                        manufacturer: {
                                            description: string;
                                            type: string;
                                        };
                                        model: {
                                            properties: {
                                                accessory_keypad_supported: {
                                                    description: string;
                                                    type: string;
                                                };
                                                can_connect_accessory_keypad: {
                                                    description: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    description: string;
                                                    type: string;
                                                };
                                                has_built_in_keypad: {
                                                    description: string;
                                                    type: string;
                                                };
                                                manufacturer_display_name: {
                                                    description: string;
                                                    type: string;
                                                };
                                                offline_access_codes_supported: {
                                                    description: string;
                                                    type: string;
                                                };
                                                online_access_codes_supported: {
                                                    description: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        name: {
                                            description: string;
                                            type: string;
                                        };
                                        offline_access_codes_enabled: {
                                            description: string;
                                            type: string;
                                        };
                                        online: {
                                            description: string;
                                            type: string;
                                        };
                                        online_access_codes_enabled: {
                                            description: string;
                                            type: string;
                                        };
                                        serial_number: {
                                            description: string;
                                            type: string;
                                        };
                                        supports_accessory_keypad: {
                                            description: string;
                                            type: string;
                                        };
                                        supports_offline_access_codes: {
                                            description: string;
                                            type: string;
                                        };
                                        assa_abloy_credential_service_metadata?: never;
                                    };
                                    required: string[];
                                    type: string;
                                } | {
                                    properties: {
                                        assa_abloy_credential_service_metadata: {
                                            properties: {
                                                endpoints: {
                                                    items: {
                                                        properties: {
                                                            endpoint_id: {
                                                                type: string;
                                                            };
                                                            is_active: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                has_active_endpoint: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        accessory_keypad?: never;
                                        appearance?: never;
                                        battery?: never;
                                        battery_level?: never;
                                        has_direct_power?: never;
                                        image_alt_text?: never;
                                        image_url?: never;
                                        manufacturer?: never;
                                        model?: never;
                                        name?: never;
                                        offline_access_codes_enabled?: never;
                                        online?: never;
                                        online_access_codes_enabled?: never;
                                        serial_number?: never;
                                        supports_accessory_keypad?: never;
                                        supports_offline_access_codes?: never;
                                    };
                                    type: string;
                                    required?: never;
                                })[];
                                properties?: never;
                                type?: never;
                            } | {
                                properties: {
                                    august_metadata: {
                                        properties: {
                                            has_keypad: {
                                                type: string;
                                            };
                                            house_id: {
                                                type: string;
                                            };
                                            house_name: {
                                                type: string;
                                            };
                                            keypad_battery_level: {
                                                type: string;
                                            };
                                            lock_id: {
                                                type: string;
                                            };
                                            lock_name: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    avigilon_alta_metadata: {
                                        properties: {
                                            entry_name: {
                                                type: string;
                                            };
                                            org_name: {
                                                type: string;
                                            };
                                            site_id: {
                                                type: string;
                                            };
                                            site_name: {
                                                type: string;
                                            };
                                            zone_id: {
                                                type: string;
                                            };
                                            zone_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    brivo_metadata: {
                                        properties: {
                                            device_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    controlbyweb_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            relay_name: {
                                                nullable: boolean;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    dormakaba_oracode_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            door_id: {
                                                type: string;
                                            };
                                            door_name: {
                                                type: string;
                                            };
                                            iana_timezone: {
                                                type: string;
                                            };
                                            predefined_time_slots: {
                                                items: {
                                                    properties: {
                                                        check_in_time: {
                                                            type: string;
                                                        };
                                                        check_out_time: {
                                                            type: string;
                                                        };
                                                        dormakaba_oracode_user_level_id: {
                                                            format: string;
                                                            type: string;
                                                        };
                                                        ext_dormakaba_oracode_user_level_prefix: {
                                                            type: string;
                                                        };
                                                        is_24_hour: {
                                                            type: string;
                                                        };
                                                        is_biweekly_mode: {
                                                            type: string;
                                                        };
                                                        is_master: {
                                                            type: string;
                                                        };
                                                        is_one_shot: {
                                                            type: string;
                                                        };
                                                        name: {
                                                            type: string;
                                                        };
                                                        prefix: {
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                    type: string;
                                                };
                                                type: string;
                                            };
                                            site_id: {
                                                type: string;
                                            };
                                            site_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    ecobee_metadata: {
                                        properties: {
                                            device_name: {
                                                type: string;
                                            };
                                            ecobee_device_id: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    four_suites_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            reclose_delay_in_seconds: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    genie_metadata: {
                                        properties: {
                                            device_name: {
                                                type: string;
                                            };
                                            door_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    honeywell_resideo_metadata: {
                                        properties: {
                                            device_name: {
                                                type: string;
                                            };
                                            honeywell_resideo_device_id: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    hubitat_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_label: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    igloo_metadata: {
                                        properties: {
                                            bridge_id: {
                                                type: string;
                                            };
                                            device_id: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    igloohome_metadata: {
                                        properties: {
                                            bridge_id: {
                                                type: string;
                                            };
                                            bridge_name: {
                                                type: string;
                                            };
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    kwikset_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            model_number: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    lockly_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    minut_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            latest_sensor_values: {
                                                properties: {
                                                    accelerometer_z: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    humidity: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    pressure: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    sound: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    temperature: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    nest_metadata: {
                                        properties: {
                                            custom_name: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            nest_device_id: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    noiseaware_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_model: {
                                                enum: string[];
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            noise_level_decibel: {
                                                type: string;
                                            };
                                            noise_level_nrs: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    nuki_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            keypad_2_paired: {
                                                type: string;
                                            };
                                            keypad_battery_critical: {
                                                type: string;
                                            };
                                            keypad_paired: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    salto_metadata: {
                                        properties: {
                                            battery_level: {
                                                type: string;
                                            };
                                            customer_reference: {
                                                type: string;
                                            };
                                            lock_id: {
                                                type: string;
                                            };
                                            lock_type: {
                                                type: string;
                                            };
                                            locked_state: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    schlage_metadata: {
                                        properties: {
                                            access_code_length: {
                                                nullable: boolean;
                                                type: string;
                                            };
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    seam_bridge_metadata: {
                                        properties: {
                                            device_num: {
                                                type: string;
                                            };
                                            name: {
                                                type: string;
                                            };
                                            unlock_method: {
                                                enum: string[];
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    smartthings_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            location_id: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    tedee_metadata: {
                                        properties: {
                                            bridge_id: {
                                                type: string;
                                            };
                                            bridge_name: {
                                                type: string;
                                            };
                                            device_id: {
                                                type: string;
                                            };
                                            device_model: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            keypad_id: {
                                                type: string;
                                            };
                                            serial_number: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    ttlock_metadata: {
                                        properties: {
                                            lock_alias: {
                                                type: string;
                                            };
                                            lock_id: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    two_n_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    wyze_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_info_model: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            product_model: {
                                                type: string;
                                            };
                                            product_name: {
                                                type: string;
                                            };
                                            product_type: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                };
                                type: string;
                                allOf?: never;
                            })[];
                        } | {
                            allOf: ({
                                properties: {
                                    _experimental_supported_code_from_access_codes_lengths: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    code_constraints: {
                                        items: {
                                            oneOf: ({
                                                properties: {
                                                    constraint_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    max_length?: never;
                                                    min_length?: never;
                                                };
                                                required: string[];
                                                type: string;
                                            } | {
                                                properties: {
                                                    constraint_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    max_length: {
                                                        type: string;
                                                    };
                                                    min_length: {
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            })[];
                                        };
                                        type: string;
                                    };
                                    door_open: {
                                        type: string;
                                    };
                                    has_native_entry_events: {
                                        type: string;
                                    };
                                    keypad_battery: {
                                        properties: {
                                            level: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    locked: {
                                        type: string;
                                    };
                                    max_active_codes_supported: {
                                        type: string;
                                    };
                                    supported_code_lengths: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    supports_backup_access_code_pool: {
                                        type: string;
                                    };
                                };
                                type: string;
                                oneOf?: never;
                            } | {
                                oneOf: ({
                                    properties: {
                                        active_climate_setting_schedule: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                climate_setting_schedule_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                device_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                errors: {
                                                    description: string;
                                                    nullable: boolean;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                                name: {
                                                    type: string;
                                                };
                                                schedule_ends_at: {
                                                    type: string;
                                                };
                                                schedule_starts_at: {
                                                    type: string;
                                                };
                                                schedule_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        available_hvac_mode_settings: {
                                            items: {
                                                enum: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        can_enable_automatic_cooling: {
                                            type: string;
                                        };
                                        can_enable_automatic_heating: {
                                            type: string;
                                        };
                                        current_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        default_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        fan_mode_setting: {
                                            enum: string[];
                                            type: string;
                                        };
                                        is_climate_setting_schedule_active: {
                                            type: string;
                                        };
                                        is_cooling: {
                                            type: string;
                                        };
                                        is_cooling_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_fan_running: {
                                            type: string;
                                        };
                                        is_heating: {
                                            type: string;
                                        };
                                        is_heating_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_temporary_manual_override_active: {
                                            type: string;
                                        };
                                        max_cooling_set_point_celsius: {
                                            type: string;
                                        };
                                        max_cooling_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        max_heating_set_point_celsius: {
                                            type: string;
                                        };
                                        max_heating_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        min_cooling_set_point_celsius: {
                                            type: string;
                                        };
                                        min_cooling_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        min_heating_cooling_delta_celsius: {
                                            type: string;
                                        };
                                        min_heating_cooling_delta_fahrenheit: {
                                            type: string;
                                        };
                                        min_heating_set_point_celsius: {
                                            type: string;
                                        };
                                        min_heating_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        relative_humidity: {
                                            maximum: number;
                                            minimum: number;
                                            type: string;
                                        };
                                        temperature_celsius: {
                                            type: string;
                                        };
                                        temperature_fahrenheit: {
                                            type: string;
                                        };
                                    };
                                    type: string;
                                } | {
                                    properties: {
                                        active_climate_setting_schedule: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                climate_setting_schedule_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                device_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                errors: {
                                                    description: string;
                                                    nullable: boolean;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                                name: {
                                                    type: string;
                                                };
                                                schedule_ends_at: {
                                                    type: string;
                                                };
                                                schedule_starts_at: {
                                                    type: string;
                                                };
                                                schedule_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        available_hvac_mode_settings: {
                                            items: {
                                                enum: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        can_enable_automatic_cooling: {
                                            type: string;
                                        };
                                        can_enable_automatic_heating: {
                                            type: string;
                                        };
                                        current_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        default_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        fan_mode_setting: {
                                            enum: string[];
                                            type: string;
                                        };
                                        is_climate_setting_schedule_active: {
                                            type: string;
                                        };
                                        is_cooling: {
                                            type: string;
                                        };
                                        is_cooling_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_fan_running: {
                                            type: string;
                                        };
                                        is_heating: {
                                            type: string;
                                        };
                                        is_heating_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_temporary_manual_override_active: {
                                            type: string;
                                        };
                                        max_heating_set_point_celsius: {
                                            type: string;
                                        };
                                        max_heating_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        min_heating_set_point_celsius: {
                                            type: string;
                                        };
                                        min_heating_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        relative_humidity: {
                                            maximum: number;
                                            minimum: number;
                                            type: string;
                                        };
                                        temperature_celsius: {
                                            type: string;
                                        };
                                        temperature_fahrenheit: {
                                            type: string;
                                        };
                                        max_cooling_set_point_celsius?: never;
                                        max_cooling_set_point_fahrenheit?: never;
                                        min_cooling_set_point_celsius?: never;
                                        min_cooling_set_point_fahrenheit?: never;
                                        min_heating_cooling_delta_celsius?: never;
                                        min_heating_cooling_delta_fahrenheit?: never;
                                    };
                                    type: string;
                                } | {
                                    properties: {
                                        active_climate_setting_schedule: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                climate_setting_schedule_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                device_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                errors: {
                                                    description: string;
                                                    nullable: boolean;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                                name: {
                                                    type: string;
                                                };
                                                schedule_ends_at: {
                                                    type: string;
                                                };
                                                schedule_starts_at: {
                                                    type: string;
                                                };
                                                schedule_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        available_hvac_mode_settings: {
                                            items: {
                                                enum: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        can_enable_automatic_cooling: {
                                            type: string;
                                        };
                                        can_enable_automatic_heating: {
                                            type: string;
                                        };
                                        current_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        default_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        fan_mode_setting: {
                                            enum: string[];
                                            type: string;
                                        };
                                        is_climate_setting_schedule_active: {
                                            type: string;
                                        };
                                        is_cooling: {
                                            type: string;
                                        };
                                        is_cooling_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_fan_running: {
                                            type: string;
                                        };
                                        is_heating: {
                                            type: string;
                                        };
                                        is_heating_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_temporary_manual_override_active: {
                                            type: string;
                                        };
                                        max_cooling_set_point_celsius: {
                                            type: string;
                                        };
                                        max_cooling_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        min_cooling_set_point_celsius: {
                                            type: string;
                                        };
                                        min_cooling_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        relative_humidity: {
                                            maximum: number;
                                            minimum: number;
                                            type: string;
                                        };
                                        temperature_celsius: {
                                            type: string;
                                        };
                                        temperature_fahrenheit: {
                                            type: string;
                                        };
                                        max_heating_set_point_celsius?: never;
                                        max_heating_set_point_fahrenheit?: never;
                                        min_heating_cooling_delta_celsius?: never;
                                        min_heating_cooling_delta_fahrenheit?: never;
                                        min_heating_set_point_celsius?: never;
                                        min_heating_set_point_fahrenheit?: never;
                                    };
                                    type: string;
                                })[];
                                properties?: never;
                                type?: never;
                            })[];
                        })[];
                        description: string;
                    };
                    warnings: {
                        description: string;
                        items: {
                            properties: {
                                message: {
                                    type: string;
                                };
                                warning_code: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    workspace_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            device_provider: {
                properties: {
                    device_provider_name: {
                        enum: string[];
                        type: string;
                    };
                    display_name: {
                        type: string;
                    };
                    image_url: {
                        type: string;
                    };
                    provider_categories: {
                        items: {
                            enum: string[];
                            type: string;
                        };
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            enrollment_automation: {
                properties: {
                    created_at: {
                        format: string;
                        type: string;
                    };
                    credential_manager_acs_system_id: {
                        format: string;
                        type: string;
                    };
                    enrollment_automation_id: {
                        format: string;
                        type: string;
                    };
                    user_identity_id: {
                        format: string;
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            event: {
                properties: {
                    created_at: {
                        format: string;
                        type: string;
                    };
                    device_id: {
                        format: string;
                        type: string;
                    };
                    event_id: {
                        format: string;
                        type: string;
                    };
                    event_type: {
                        type: string;
                    };
                    occurred_at: {
                        format: string;
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            noise_threshold: {
                properties: {
                    device_id: {
                        format: string;
                        type: string;
                    };
                    ends_daily_at: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    noise_threshold_decibels: {
                        type: string;
                    };
                    noise_threshold_id: {
                        format: string;
                        type: string;
                    };
                    noise_threshold_nrs: {
                        type: string;
                    };
                    starts_daily_at: {
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            phone: {
                properties: {
                    can_program_online_access_codes: {
                        type: string;
                    };
                    can_remotely_lock: {
                        type: string;
                    };
                    can_remotely_unlock: {
                        type: string;
                    };
                    can_simulate_removal: {
                        type: string;
                    };
                    capabilities_supported: {
                        description: string;
                        items: {
                            enum: string[];
                            type: string;
                        };
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    custom_metadata: {
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_type: {
                        enum: string[];
                        type: string;
                    };
                    display_name: {
                        description: string;
                        type: string;
                    };
                    errors: {
                        description: string;
                        items: {
                            properties: {
                                error_code: {
                                    type: string;
                                };
                                message: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    is_managed: {
                        description: string;
                        enum: boolean[];
                        type: string;
                    };
                    location: {
                        description: string;
                        nullable: boolean;
                        properties: {
                            location_name: {
                                description: string;
                                type: string;
                            };
                            timezone: {
                                description: string;
                                type: string;
                            };
                        };
                        type: string;
                    };
                    nickname: {
                        description: string;
                        type: string;
                    };
                    properties: {
                        properties: {
                            assa_abloy_credential_service_metadata: {
                                properties: {
                                    endpoints: {
                                        items: {
                                            properties: {
                                                endpoint_id: {
                                                    type: string;
                                                };
                                                is_active: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    has_active_endpoint: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                        type: string;
                    };
                    warnings: {
                        description: string;
                        items: {
                            properties: {
                                message: {
                                    type: string;
                                };
                                warning_code: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    workspace_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            service_health: {
                properties: {
                    description: {
                        type: string;
                    };
                    service: {
                        type: string;
                    };
                    status: {
                        enum: string[];
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            unmanaged_access_code: {
                properties: {
                    access_code_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    code: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    ends_at: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    errors: {
                        description: string;
                        nullable: boolean;
                    };
                    is_managed: {
                        enum: boolean[];
                        type: string;
                    };
                    name: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    starts_at: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    status: {
                        enum: string[];
                        type: string;
                    };
                    type: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    warnings: {
                        description: string;
                        nullable: boolean;
                    };
                };
                required: string[];
                type: string;
            };
            unmanaged_device: {
                properties: {
                    can_program_online_access_codes: {
                        type: string;
                    };
                    can_remotely_lock: {
                        type: string;
                    };
                    can_remotely_unlock: {
                        type: string;
                    };
                    can_simulate_removal: {
                        type: string;
                    };
                    capabilities_supported: {
                        description: string;
                        items: {
                            enum: string[];
                            type: string;
                        };
                        type: string;
                    };
                    connected_account_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_type: {
                        description: string;
                        oneOf: {
                            enum: string[];
                            type: string;
                        }[];
                    };
                    errors: {
                        description: string;
                        items: {
                            properties: {
                                error_code: {
                                    type: string;
                                };
                                message: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    is_managed: {
                        enum: boolean[];
                        type: string;
                    };
                    properties: {
                        properties: {
                            accessory_keypad: {
                                description: string;
                                properties: {
                                    battery: {
                                        description: string;
                                        properties: {
                                            level: {
                                                maximum: number;
                                                minimum: number;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    is_connected: {
                                        description: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                            battery: {
                                description: string;
                                properties: {
                                    level: {
                                        maximum: number;
                                        minimum: number;
                                        type: string;
                                    };
                                    status: {
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                            battery_level: {
                                description: string;
                                maximum: number;
                                minimum: number;
                                type: string;
                            };
                            image_alt_text: {
                                description: string;
                                type: string;
                            };
                            image_url: {
                                description: string;
                                format: string;
                                type: string;
                            };
                            manufacturer: {
                                description: string;
                                type: string;
                            };
                            model: {
                                properties: {
                                    accessory_keypad_supported: {
                                        description: string;
                                        type: string;
                                    };
                                    can_connect_accessory_keypad: {
                                        description: string;
                                        type: string;
                                    };
                                    display_name: {
                                        description: string;
                                        type: string;
                                    };
                                    has_built_in_keypad: {
                                        description: string;
                                        type: string;
                                    };
                                    manufacturer_display_name: {
                                        description: string;
                                        type: string;
                                    };
                                    offline_access_codes_supported: {
                                        description: string;
                                        type: string;
                                    };
                                    online_access_codes_supported: {
                                        description: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                            name: {
                                description: string;
                                type: string;
                            };
                            offline_access_codes_enabled: {
                                description: string;
                                type: string;
                            };
                            online: {
                                description: string;
                                type: string;
                            };
                            online_access_codes_enabled: {
                                description: string;
                                type: string;
                            };
                        };
                        required: string[];
                        type: string;
                    };
                    warnings: {
                        description: string;
                        items: {
                            properties: {
                                message: {
                                    type: string;
                                };
                                warning_code: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    workspace_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            webhook: {
                properties: {
                    event_types: {
                        items: {
                            type: string;
                        };
                        type: string;
                    };
                    secret: {
                        type: string;
                    };
                    url: {
                        type: string;
                    };
                    webhook_id: {
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            workspace: {
                properties: {
                    connect_partner_name: {
                        nullable: boolean;
                        type: string;
                    };
                    is_sandbox: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
        };
        securitySchemes: {
            access_token: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            api_key: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            client_session: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            client_session_token: {
                in: string;
                name: string;
                type: string;
            };
            console_session: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            pat_with_workspace: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            pat_without_workspace: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            seam_client_session_token: {
                in: string;
                name: string;
                type: string;
            };
            seam_workspace: {
                in: string;
                name: string;
                type: string;
            };
            user_session: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            user_session_without_workspace: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
        };
    };
    info: {
        title: string;
        version: string;
    };
    openapi: string;
    paths: {
        '/access_codes/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    common_code_key: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_code: {
                                            $ref: string;
                                        };
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/create_multiple': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    behavior_when_code_cannot_be_shared: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    preferred_code_length: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_codes: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    behavior_when_code_cannot_be_shared: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    preferred_code_length: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_codes: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/access_codes/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/generate_code': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        generated_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    code: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    access_token?: never;
                    user_session?: never;
                    client_session?: never;
                } | {
                    access_token: never[];
                    api_key?: never;
                    user_session?: never;
                    client_session?: never;
                } | {
                    user_session: never[];
                    api_key?: never;
                    access_token?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    access_token?: never;
                    user_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_codes: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/pull_backup_access_code': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        backup_access_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/simulate/create_unmanaged_access_code': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/unmanaged/convert_to_managed': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    force: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    force: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/access_codes/unmanaged/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/unmanaged/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    code: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/unmanaged/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_codes: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/unmanaged/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    force: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    force: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/access_codes/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                    type: {
                                        enum: string[];
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                    type: {
                                        enum: string[];
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                    type: {
                                        enum: string[];
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/acs/access_groups/add_user': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/acs/access_groups/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_access_group: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/access_groups/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_access_groups: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/access_groups/list_users': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_users: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/access_groups/remove_user': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credential_pools/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential_pools: {
                                            items: {
                                                properties: {
                                                    acs_credential_pool_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        minLength: number;
                                                        type: string;
                                                    };
                                                    external_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    external_type_display_name: {
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credential_provisioning_automations/launch': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_pool_id: {
                                        format: string;
                                        type: string;
                                    };
                                    create_credential_manager_user: {
                                        type: string;
                                    };
                                    credential_manager_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    credential_manager_acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential_provisioning_automation: {
                                            properties: {
                                                acs_credential_provisioning_automation_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                credential_manager_acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                user_identity_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/assign': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_method: {
                                        enum: string[];
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allowed_acs_entrance_ids: {
                                        default: never[];
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    code: {
                                        pattern: string;
                                        type: string;
                                    };
                                    credential_manager_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        format: string;
                                        type: string;
                                    };
                                    is_multi_phone_sync_credential: {
                                        default: boolean;
                                        type: string;
                                    };
                                    starts_at: {
                                        format: string;
                                        type: string;
                                    };
                                    visionline_metadata: {
                                        properties: {
                                            assa_abloy_credential_service_mobile_endpoint_id: {
                                                format: string;
                                                type: string;
                                            };
                                            card_format: {
                                                enum: string[];
                                                type: string;
                                            };
                                            is_override_key: {
                                                type: string;
                                            };
                                            joiner_acs_credential_ids: {
                                                items: {
                                                    format: string;
                                                    type: string;
                                                };
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                allOf: ({
                                    oneOf: ({
                                        properties: {
                                            acs_user_id: {
                                                format: string;
                                                type: string;
                                            };
                                            acs_system_id?: never;
                                            user_identity_id?: never;
                                        };
                                        required: string[];
                                        type: string;
                                    } | {
                                        properties: {
                                            acs_system_id: {
                                                format: string;
                                                type: string;
                                            };
                                            acs_user_id?: never;
                                            user_identity_id?: never;
                                        };
                                        required: string[];
                                        type: string;
                                    } | {
                                        properties: {
                                            acs_system_id: {
                                                format: string;
                                                type: string;
                                            };
                                            acs_user_id: {
                                                format: string;
                                                type: string;
                                            };
                                            user_identity_id?: never;
                                        };
                                        required: string[];
                                        type: string;
                                    } | {
                                        properties: {
                                            user_identity_id: {
                                                format: string;
                                                type: string;
                                            };
                                            acs_user_id?: never;
                                            acs_system_id?: never;
                                        };
                                        required: string[];
                                        type: string;
                                    })[];
                                    properties?: never;
                                    type?: never;
                                } | {
                                    properties: {
                                        is_multi_phone_sync_credential: {
                                            type: string;
                                        };
                                    };
                                    type: string;
                                    oneOf?: never;
                                })[];
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credentials: {
                                            items: {
                                                properties: {
                                                    access_method: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    acs_credential_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_credential_pool_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_user_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    code: {
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        minLength: number;
                                                        type: string;
                                                    };
                                                    ends_at: {
                                                        type: string;
                                                    };
                                                    errors: {
                                                        items: {
                                                            properties: {
                                                                error_code: {
                                                                    type: string;
                                                                };
                                                                message: {
                                                                    type: string;
                                                                };
                                                            };
                                                            required: string[];
                                                            type: string;
                                                        };
                                                        type: string;
                                                    };
                                                    external_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    external_type_display_name: {
                                                        type: string;
                                                    };
                                                    is_multi_phone_sync_credential: {
                                                        type: string;
                                                    };
                                                    parent_acs_credential_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    starts_at: {
                                                        type: string;
                                                    };
                                                    visionline_metadata: {
                                                        properties: {
                                                            common_acs_entrance_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                            guest_acs_entrance_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                            joiner_acs_credential_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                        };
                                                        type: string;
                                                    };
                                                    warnings: {
                                                        items: {
                                                            properties: {
                                                                message: {
                                                                    type: string;
                                                                };
                                                                warning_code: {
                                                                    type: string;
                                                                };
                                                            };
                                                            required: string[];
                                                            type: string;
                                                        };
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/unassign': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        type: string;
                                    };
                                    code: {
                                        pattern: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        type: string;
                                    };
                                    code: {
                                        pattern: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/entrances/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_entrance_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_entrance: {
                                            properties: {
                                                acs_entrance_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    type: string;
                                                };
                                                latch_metadata: {
                                                    nullable: boolean;
                                                    properties: {
                                                        accessibility_type: {
                                                            type: string;
                                                        };
                                                        is_connected: {
                                                            type: string;
                                                        };
                                                        name: {
                                                            type: string;
                                                        };
                                                        type: {
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    nullable: boolean;
                                                    properties: {
                                                        door_category: {
                                                            enum: string[];
                                                            type: string;
                                                        };
                                                        door_name: {
                                                            type: string;
                                                        };
                                                        profiles: {
                                                            items: {
                                                                properties: {
                                                                    visionline_door_profile_id: {
                                                                        type: string;
                                                                    };
                                                                    visionline_door_profile_type: {
                                                                        enum: string[];
                                                                        type: string;
                                                                    };
                                                                };
                                                                required: string[];
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    access_token?: never;
                    user_session?: never;
                    client_session?: never;
                } | {
                    access_token: never[];
                    api_key?: never;
                    user_session?: never;
                    client_session?: never;
                } | {
                    user_session: never[];
                    api_key?: never;
                    access_token?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    access_token?: never;
                    user_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/entrances/grant_access': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_entrance_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/entrances/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_entrances: {
                                            items: {
                                                properties: {
                                                    acs_entrance_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        type: string;
                                                    };
                                                    latch_metadata: {
                                                        nullable: boolean;
                                                        properties: {
                                                            accessibility_type: {
                                                                type: string;
                                                            };
                                                            is_connected: {
                                                                type: string;
                                                            };
                                                            name: {
                                                                type: string;
                                                            };
                                                            type: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    visionline_metadata: {
                                                        nullable: boolean;
                                                        properties: {
                                                            door_category: {
                                                                enum: string[];
                                                                type: string;
                                                            };
                                                            door_name: {
                                                                type: string;
                                                            };
                                                            profiles: {
                                                                items: {
                                                                    properties: {
                                                                        visionline_door_profile_id: {
                                                                            type: string;
                                                                        };
                                                                        visionline_door_profile_type: {
                                                                            enum: string[];
                                                                            type: string;
                                                                        };
                                                                    };
                                                                    required: string[];
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/entrances/list_credentials_with_access': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_entrance_id: {
                                        format: string;
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credentials: {
                                            items: {
                                                properties: {
                                                    access_method: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    acs_credential_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_credential_pool_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_user_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    code: {
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        minLength: number;
                                                        type: string;
                                                    };
                                                    ends_at: {
                                                        type: string;
                                                    };
                                                    errors: {
                                                        items: {
                                                            properties: {
                                                                error_code: {
                                                                    type: string;
                                                                };
                                                                message: {
                                                                    type: string;
                                                                };
                                                            };
                                                            required: string[];
                                                            type: string;
                                                        };
                                                        type: string;
                                                    };
                                                    external_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    external_type_display_name: {
                                                        type: string;
                                                    };
                                                    is_multi_phone_sync_credential: {
                                                        type: string;
                                                    };
                                                    parent_acs_credential_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    starts_at: {
                                                        type: string;
                                                    };
                                                    visionline_metadata: {
                                                        properties: {
                                                            common_acs_entrance_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                            guest_acs_entrance_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                            joiner_acs_credential_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                        };
                                                        type: string;
                                                    };
                                                    warnings: {
                                                        items: {
                                                            properties: {
                                                                message: {
                                                                    type: string;
                                                                };
                                                                warning_code: {
                                                                    type: string;
                                                                };
                                                            };
                                                            required: string[];
                                                            type: string;
                                                        };
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/systems/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_system: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/systems/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connected_account_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_systems: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/add_to_access_group': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/acs/users/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_schedule: {
                                        properties: {
                                            ends_at: {
                                                format: string;
                                                type: string;
                                            };
                                            starts_at: {
                                                format: string;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    acs_access_group_ids: {
                                        default: never[];
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    email: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    email_address: {
                                        format: string;
                                        type: string;
                                    };
                                    full_name: {
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_user: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_user: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_email_address: {
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_users: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/list_accessible_entrances': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_entrances: {
                                            items: {
                                                properties: {
                                                    acs_entrance_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        type: string;
                                                    };
                                                    latch_metadata: {
                                                        nullable: boolean;
                                                        properties: {
                                                            accessibility_type: {
                                                                type: string;
                                                            };
                                                            is_connected: {
                                                                type: string;
                                                            };
                                                            name: {
                                                                type: string;
                                                            };
                                                            type: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    visionline_metadata: {
                                                        nullable: boolean;
                                                        properties: {
                                                            door_category: {
                                                                enum: string[];
                                                                type: string;
                                                            };
                                                            door_name: {
                                                                type: string;
                                                            };
                                                            profiles: {
                                                                items: {
                                                                    properties: {
                                                                        visionline_door_profile_id: {
                                                                            type: string;
                                                                        };
                                                                        visionline_door_profile_type: {
                                                                            enum: string[];
                                                                            type: string;
                                                                        };
                                                                    };
                                                                    required: string[];
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/remove_from_access_group': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/revoke_access_to_all_entrances': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/suspend': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/unsuspend': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_schedule: {
                                        properties: {
                                            ends_at: {
                                                format: string;
                                                type: string;
                                            };
                                            starts_at: {
                                                format: string;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    email: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    email_address: {
                                        format: string;
                                        type: string;
                                    };
                                    full_name: {
                                        type: string;
                                    };
                                    hid_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_schedule: {
                                        properties: {
                                            ends_at: {
                                                format: string;
                                                type: string;
                                            };
                                            starts_at: {
                                                format: string;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    email: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    email_address: {
                                        format: string;
                                        type: string;
                                    };
                                    full_name: {
                                        type: string;
                                    };
                                    hid_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/action_attempts/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    action_attempt_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/action_attempts/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    action_attempt_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempts: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/client_sessions/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    expires_at: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        minLength: number;
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    expires_at: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        minLength: number;
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/client_sessions/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/client_sessions/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/client_sessions/get_or_create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    expires_at: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        minLength: number;
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    expires_at: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        minLength: number;
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/client_sessions/grant_access': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        type: string;
                                    };
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        type: string;
                                    };
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/client_sessions/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        type: string;
                                    };
                                    connect_webview_id: {
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                    user_identity_id: {
                                        type: string;
                                    };
                                    without_user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_sessions: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/client_sessions/revoke': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/connect_webviews/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    accepted_providers: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    automatically_manage_new_devices: {
                                        type: string;
                                    };
                                    custom_metadata: {
                                        additionalProperties: {
                                            nullable: boolean;
                                            oneOf: ({
                                                maxLength: number;
                                                type: string;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                type: string;
                                                maxLength?: never;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                format: string;
                                                nullable: boolean;
                                                type: string;
                                                maxLength?: never;
                                            })[];
                                        };
                                        type: string;
                                    };
                                    custom_redirect_failure_url: {
                                        type: string;
                                    };
                                    custom_redirect_url: {
                                        type: string;
                                    };
                                    device_selection_mode: {
                                        enum: string[];
                                        type: string;
                                    };
                                    provider_category: {
                                        enum: string[];
                                        type: string;
                                    };
                                    wait_for_device_creation: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connect_webview: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    access_token: never[];
                    seam_workspace: never[];
                    seam_client_session_token?: never;
                    client_session_token?: never;
                } | {
                    seam_client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    client_session_token?: never;
                } | {
                    client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    seam_client_session_token?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connect_webviews/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/connect_webviews/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connect_webview: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connect_webviews/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        description: string;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connect_webviews: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    access_token: never[];
                    seam_workspace: never[];
                    seam_client_session_token?: never;
                    client_session_token?: never;
                } | {
                    seam_client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    client_session_token?: never;
                } | {
                    client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    seam_client_session_token?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connect_webviews/view': {
            get: {
                operationId: string;
                parameters: ({
                    in: string;
                    name: string;
                    required: boolean;
                    schema: {
                        format: string;
                        type: string;
                    };
                } | {
                    in: string;
                    name: string;
                    required: boolean;
                    schema: {
                        type: string;
                        format?: never;
                    };
                })[];
                responses: {
                    200: {
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/connected_accounts/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connected_account_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/connected_accounts/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                oneOf: ({
                                    properties: {
                                        connected_account_id: {
                                            format: string;
                                            type: string;
                                        };
                                        email?: never;
                                    };
                                    required: string[];
                                    type: string;
                                } | {
                                    properties: {
                                        email: {
                                            format: string;
                                            type: string;
                                        };
                                        connected_account_id?: never;
                                    };
                                    required: string[];
                                    type: string;
                                })[];
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connected_account: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connected_accounts/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        description: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connected_accounts: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connected_accounts/update': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatically_manage_new_devices: {
                                        type: string;
                                    };
                                    connected_account_id: {
                                        format: string;
                                        type: string;
                                    };
                                    custom_metadata: {
                                        additionalProperties: {
                                            nullable: boolean;
                                            oneOf: ({
                                                maxLength: number;
                                                type: string;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                type: string;
                                                maxLength?: never;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                format: string;
                                                nullable: boolean;
                                                type: string;
                                                maxLength?: never;
                                            })[];
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connected_account: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/devices/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        device: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    created_before: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_type: {
                                        oneOf: {
                                            enum: string[];
                                            type: string;
                                        }[];
                                    };
                                    device_types: {
                                        items: {
                                            oneOf: {
                                                enum: string[];
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    exclude_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    manufacturer: {
                                        enum: string[];
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        devices: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/list_device_providers': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    provider_category: {
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        device_providers: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/simulate/remove': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/devices/unmanaged/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        device: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    access_token: never[];
                    seam_workspace: never[];
                    seam_client_session_token?: never;
                    client_session_token?: never;
                } | {
                    seam_client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    client_session_token?: never;
                } | {
                    client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    seam_client_session_token?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/unmanaged/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    created_before: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_type: {
                                        oneOf: {
                                            enum: string[];
                                            type: string;
                                        }[];
                                    };
                                    device_types: {
                                        items: {
                                            oneOf: {
                                                enum: string[];
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    exclude_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    manufacturer: {
                                        enum: string[];
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        devices: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/unmanaged/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_managed: {
                                        enum: boolean[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_managed: {
                                        enum: boolean[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/devices/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    custom_metadata: {
                                        additionalProperties: {
                                            nullable: boolean;
                                            oneOf: ({
                                                maxLength: number;
                                                type: string;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                type: string;
                                                maxLength?: never;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                format: string;
                                                nullable: boolean;
                                                type: string;
                                                maxLength?: never;
                                            })[];
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_managed: {
                                        default: boolean;
                                        type: string;
                                    };
                                    name: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    properties: {
                                        properties: {
                                            name: {
                                                nullable: boolean;
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    custom_metadata: {
                                        additionalProperties: {
                                            nullable: boolean;
                                            oneOf: ({
                                                maxLength: number;
                                                type: string;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                type: string;
                                                maxLength?: never;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                format: string;
                                                nullable: boolean;
                                                type: string;
                                                maxLength?: never;
                                            })[];
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_managed: {
                                        default: boolean;
                                        type: string;
                                    };
                                    name: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    properties: {
                                        properties: {
                                            name: {
                                                nullable: boolean;
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/events/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    event_id: {
                                        format: string;
                                        type: string;
                                    };
                                    event_type: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        event: {
                                            $ref: string;
                                        };
                                        message: {
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/events/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    access_code_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    between: {
                                        items: {
                                            oneOf: ({
                                                type: string;
                                                format?: never;
                                            } | {
                                                format: string;
                                                type: string;
                                            })[];
                                        };
                                        maxItems: number;
                                        minItems: number;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        format: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    event_type: {
                                        enum: string[];
                                        type: string;
                                    };
                                    event_types: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    since: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        events: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/health': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        msg: {
                                            enum: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health_statuses: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        msg: {
                                            enum: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health_statuses: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/health/get_health': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        msg: {
                                            enum: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health_statuses: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        msg: {
                                            enum: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health_statuses: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/health/get_service_health': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    service: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/health/service/[service_name]': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    service_name: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/locks/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        device: {
                                            $ref: string;
                                        };
                                        lock: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/locks/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    created_before: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_type: {
                                        oneOf: {
                                            enum: string[];
                                            type: string;
                                        }[];
                                    };
                                    device_types: {
                                        items: {
                                            oneOf: {
                                                enum: string[];
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    exclude_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    manufacturer: {
                                        enum: string[];
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        devices: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        locks: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/locks/lock_door': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/locks/unlock_door': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/networks/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    network_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        network: {
                                            properties: {
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    type: string;
                                                };
                                                network_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/networks/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {};
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        networks: {
                                            items: {
                                                properties: {
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        type: string;
                                                    };
                                                    network_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/noise_sensors/noise_thresholds/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_daily_at: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    noise_threshold_decibels: {
                                        type: string;
                                    };
                                    noise_threshold_nrs: {
                                        type: string;
                                    };
                                    starts_daily_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        noise_threshold: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/noise_sensors/noise_thresholds/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/noise_sensors/noise_thresholds/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        noise_threshold: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/noise_sensors/noise_thresholds/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_programmed: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        noise_thresholds: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/noise_sensors/noise_thresholds/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_daily_at: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    noise_threshold_decibels: {
                                        type: string;
                                    };
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                    noise_threshold_nrs: {
                                        type: string;
                                    };
                                    starts_daily_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_daily_at: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    noise_threshold_decibels: {
                                        type: string;
                                    };
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                    noise_threshold_nrs: {
                                        type: string;
                                    };
                                    starts_daily_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_daily_at: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    noise_threshold_decibels: {
                                        type: string;
                                    };
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                    noise_threshold_nrs: {
                                        type: string;
                                    };
                                    starts_daily_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/noise_sensors/simulate/trigger_noise_threshold': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/phones/deactivate': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/phones/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    owner_user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        phones: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/phones/simulate/create_sandbox_phone': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    assa_abloy_metadata: {
                                        default: {};
                                        properties: {
                                            application_version: {
                                                default: string;
                                                type: string;
                                            };
                                            ble_capability: {
                                                default: boolean;
                                                type: string;
                                            };
                                            hce_capability: {
                                                default: boolean;
                                                type: string;
                                            };
                                            nfc_capability: {
                                                default: boolean;
                                                type: string;
                                            };
                                            seos_applet_version: {
                                                default: string;
                                                type: string;
                                            };
                                            seos_tsm_endpoint_id: {
                                                default: number;
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                    custom_sdk_installation_id: {
                                        type: string;
                                    };
                                    phone_metadata: {
                                        default: {};
                                        properties: {
                                            device_manufacturer: {
                                                default: string;
                                                type: string;
                                            };
                                            device_model: {
                                                default: string;
                                                type: string;
                                            };
                                            operating_system: {
                                                default: string;
                                                enum: string[];
                                                type: string;
                                            };
                                            os_version: {
                                                default: string;
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        phone: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/climate_setting_schedules/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatic_cooling_enabled: {
                                        type: string;
                                    };
                                    automatic_heating_enabled: {
                                        type: string;
                                    };
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    device_id: {
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    hvac_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    manual_override_allowed: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    schedule_ends_at: {
                                        type: string;
                                    };
                                    schedule_starts_at: {
                                        type: string;
                                    };
                                    schedule_type: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/climate_setting_schedules/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/thermostats/climate_setting_schedules/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/climate_setting_schedules/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedules: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/climate_setting_schedules/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatic_cooling_enabled: {
                                        type: string;
                                    };
                                    automatic_heating_enabled: {
                                        type: string;
                                    };
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    hvac_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    manual_override_allowed: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    schedule_ends_at: {
                                        type: string;
                                    };
                                    schedule_starts_at: {
                                        type: string;
                                    };
                                    schedule_type: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatic_cooling_enabled: {
                                        type: string;
                                    };
                                    automatic_heating_enabled: {
                                        type: string;
                                    };
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    hvac_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    manual_override_allowed: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    schedule_ends_at: {
                                        type: string;
                                    };
                                    schedule_starts_at: {
                                        type: string;
                                    };
                                    schedule_type: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatic_cooling_enabled: {
                                        type: string;
                                    };
                                    automatic_heating_enabled: {
                                        type: string;
                                    };
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    hvac_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    manual_override_allowed: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    schedule_ends_at: {
                                        type: string;
                                    };
                                    schedule_starts_at: {
                                        type: string;
                                    };
                                    schedule_type: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/thermostats/cool': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        thermostat: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/heat': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/heat_cool': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    created_before: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_type: {
                                        oneOf: {
                                            enum: string[];
                                            type: string;
                                        }[];
                                    };
                                    device_types: {
                                        items: {
                                            oneOf: {
                                                enum: string[];
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    exclude_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    manufacturer: {
                                        enum: string[];
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        thermostats: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/off': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/set_fan_mode': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    fan_mode: {
                                        enum: string[];
                                        type: string;
                                    };
                                    fan_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    default_climate_setting: {
                                        properties: {
                                            automatic_cooling_enabled: {
                                                type: string;
                                            };
                                            automatic_heating_enabled: {
                                                type: string;
                                            };
                                            cooling_set_point_celsius: {
                                                type: string;
                                            };
                                            cooling_set_point_fahrenheit: {
                                                type: string;
                                            };
                                            heating_set_point_celsius: {
                                                type: string;
                                            };
                                            heating_set_point_fahrenheit: {
                                                type: string;
                                            };
                                            hvac_mode_setting: {
                                                enum: string[];
                                                type: string;
                                            };
                                            manual_override_allowed: {
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    default_climate_setting: {
                                        properties: {
                                            automatic_cooling_enabled: {
                                                type: string;
                                            };
                                            automatic_heating_enabled: {
                                                type: string;
                                            };
                                            cooling_set_point_celsius: {
                                                type: string;
                                            };
                                            cooling_set_point_fahrenheit: {
                                                type: string;
                                            };
                                            heating_set_point_celsius: {
                                                type: string;
                                            };
                                            heating_set_point_fahrenheit: {
                                                type: string;
                                            };
                                            hvac_mode_setting: {
                                                enum: string[];
                                                type: string;
                                            };
                                            manual_override_allowed: {
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/add_acs_user': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/user_identities/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    email_address: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    full_name: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identity_key: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        user_identity: {
                                            properties: {
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                email_address: {
                                                    format: string;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                full_name: {
                                                    minLength: number;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                phone_number: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                user_identity_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                user_identity_key: {
                                                    minLength: number;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/enrollment_automations/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    enrollment_automation_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/enrollment_automations/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    enrollment_automation_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        enrollment_automation: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/enrollment_automations/launch': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_pool_id: {
                                        format: string;
                                        type: string;
                                    };
                                    create_credential_manager_user: {
                                        type: string;
                                    };
                                    credential_manager_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    credential_manager_acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        enrollment_automation: {
                                            properties: {
                                                acs_credential_provisioning_automation_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                credential_manager_acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                enrollment_automation_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                user_identity_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/enrollment_automations/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        enrollment_automations: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                oneOf: ({
                                    properties: {
                                        user_identity_id: {
                                            format: string;
                                            type: string;
                                        };
                                        user_identity_key?: never;
                                    };
                                    required: string[];
                                    type: string;
                                } | {
                                    properties: {
                                        user_identity_key: {
                                            type: string;
                                        };
                                        user_identity_id?: never;
                                    };
                                    required: string[];
                                    type: string;
                                })[];
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        user_identity: {
                                            properties: {
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                email_address: {
                                                    format: string;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                full_name: {
                                                    minLength: number;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                phone_number: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                user_identity_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                user_identity_key: {
                                                    minLength: number;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/grant_access_to_device': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/user_identities/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    credential_manager_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        user_identities: {
                                            items: {
                                                properties: {
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        minLength: number;
                                                        type: string;
                                                    };
                                                    email_address: {
                                                        format: string;
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    full_name: {
                                                        minLength: number;
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    phone_number: {
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    user_identity_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    user_identity_key: {
                                                        minLength: number;
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/user_identities/list_accessible_devices': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        accessible_devices: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/list_acs_systems': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_systems: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/list_acs_users': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_users: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/remove_acs_user': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/revoke_access_to_device': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    email_address: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    full_name: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_key: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    email_address: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    full_name: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_key: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/webhooks/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    event_types: {
                                        default: string[];
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    url: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        webhook: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/webhooks/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    webhook_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/webhooks/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    webhook_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        webhook: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/webhooks/list': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        webhooks: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        webhooks: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/webhooks/update': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    event_types: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    webhook_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    event_types: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    webhook_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/workspaces/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_partner_name: {
                                        description: string;
                                        type: string;
                                    };
                                    is_sandbox: {
                                        default: boolean;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    webview_logo_shape: {
                                        enum: string[];
                                        type: string;
                                    };
                                    webview_primary_button_color: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspace: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: {
                    pat_without_workspace: never[];
                }[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/workspaces/get': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspace: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    user_session?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                } | {
                    user_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    user_session?: never;
                    pat_with_workspace?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    user_session?: never;
                    client_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspace: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    user_session?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                } | {
                    user_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    user_session?: never;
                    pat_with_workspace?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    user_session?: never;
                    client_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/workspaces/list': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspaces: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    pat_without_workspace: never[];
                    pat_with_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    user_session: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    user_session_without_workspace: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspaces: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    pat_without_workspace: never[];
                    pat_with_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    user_session: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    user_session_without_workspace: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/workspaces/reset_sandbox': {
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
    };
    servers: {
        url: string;
    }[];
    tags: {
        description: string;
        name: string;
    }[];
};

interface Routes {
    '/access_codes/create': {
        route: '/access_codes/create';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            name?: string | undefined;
            starts_at?: string | undefined;
            ends_at?: string | undefined;
            code?: string | undefined;
            sync?: boolean;
            attempt_for_offline_device?: boolean;
            common_code_key?: string | undefined;
            prefer_native_scheduling?: boolean | undefined;
            use_backup_access_code_pool?: boolean | undefined;
            allow_external_modification?: boolean | undefined;
            is_external_modification_allowed?: boolean | undefined;
            use_offline_access_code?: boolean | undefined;
            is_offline_access_code?: boolean | undefined;
            is_one_time_use?: boolean | undefined;
            max_time_rounding?: '1hour' | '1day' | '1h' | '1d';
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
            access_code: {
                /** Unique identifier for a group of access codes that share the same code. */
                common_code_key: string | null;
                /** Indicates whether the code is set on the device according to a preconfigured schedule. */
                is_scheduled_on_device?: boolean | undefined;
                /** Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration. */
                type: 'time_bound' | 'ongoing';
                /** Indicates whether the access code is waiting for a code assignment. */
                is_waiting_for_code_assignment?: boolean | undefined;
                /** Unique identifier for the access code. */
                access_code_id: string;
                /** Unique identifier for the device associated with the access code. */
                device_id: string;
                /** Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. */
                name: string | null;
                /** Code used for access. Typically, a numeric or alphanumeric string. */
                code: string | null;
                /** Date and time at which the access code was created. */
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                /** Collection of warnings associated with the access code, structured in a dictionary format. A unique "warning_code" keys each warning. Each warning entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the warning. "created_at" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention. */
                warnings?: any;
                /** Indicates whether Seam manages the access code. */
                is_managed: true;
                /** Date and time at which the time-bound access code becomes active. */
                starts_at?: (string | null) | undefined;
                /** Date and time after which the time-bound access code becomes inactive. */
                ends_at?: (string | null) | undefined;
                /**
                    Current status of the access code within the operational lifecycle. Values are "setting," a transitional phase that indicates that the code is being configured or activated; "set", which indicates that the code is active and operational; "unset," which indicates a deactivated or unused state, either before activation or after deliberate deactivation; "removing," which indicates a transitional period in which the code is being deleted or made inactive; and "unknown," which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.
                   */
                status: 'setting' | 'set' | 'unset' | 'removing' | 'unknown';
                /** Indicates whether a backup access code is available for use if the primary access code is lost or compromised. */
                is_backup_access_code_available: boolean;
                /** Indicates whether the access code is a backup code. */
                is_backup?: boolean | undefined;
                /** Identifier of the pulled backup access code. Used to associate the pulled backup access code with the original access code. */
                pulled_backup_access_code_id?: (string | null) | undefined;
                /** Indicates whether changes to the access code from external sources are permitted. */
                is_external_modification_allowed: boolean;
                /** Indicates whether the access code can only be used once. If "true," the code becomes invalid after the first use. */
                is_one_time_use: boolean;
                /** Indicates whether the access code is intended for use in offline scenarios. If "true," this code can be created on a device without a network connection. */
                is_offline_access_code: boolean;
            };
        };
    };
    '/access_codes/create_multiple': {
        route: '/access_codes/create_multiple';
        method: 'POST' | 'PUT';
        queryParams: {};
        jsonBody: {
            device_ids: string[];
            behavior_when_code_cannot_be_shared?: 'throw' | 'create_random_code';
            preferred_code_length?: number | undefined;
            name?: string | undefined;
            starts_at?: string | undefined;
            ends_at?: string | undefined;
            code?: string | undefined;
            attempt_for_offline_device?: boolean;
            prefer_native_scheduling?: boolean | undefined;
            use_backup_access_code_pool?: boolean | undefined;
            allow_external_modification?: boolean | undefined;
            is_external_modification_allowed?: boolean | undefined;
            use_offline_access_code?: boolean | undefined;
            is_offline_access_code?: boolean | undefined;
            is_one_time_use?: boolean | undefined;
            max_time_rounding?: '1hour' | '1day' | '1h' | '1d';
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            access_codes: Array<{
                /** Unique identifier for a group of access codes that share the same code. */
                common_code_key: string | null;
                /** Indicates whether the code is set on the device according to a preconfigured schedule. */
                is_scheduled_on_device?: boolean | undefined;
                /** Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration. */
                type: 'time_bound' | 'ongoing';
                /** Indicates whether the access code is waiting for a code assignment. */
                is_waiting_for_code_assignment?: boolean | undefined;
                /** Unique identifier for the access code. */
                access_code_id: string;
                /** Unique identifier for the device associated with the access code. */
                device_id: string;
                /** Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. */
                name: string | null;
                /** Code used for access. Typically, a numeric or alphanumeric string. */
                code: string | null;
                /** Date and time at which the access code was created. */
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                /** Collection of warnings associated with the access code, structured in a dictionary format. A unique "warning_code" keys each warning. Each warning entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the warning. "created_at" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention. */
                warnings?: any;
                /** Indicates whether Seam manages the access code. */
                is_managed: true;
                /** Date and time at which the time-bound access code becomes active. */
                starts_at?: (string | null) | undefined;
                /** Date and time after which the time-bound access code becomes inactive. */
                ends_at?: (string | null) | undefined;
                /**
                    Current status of the access code within the operational lifecycle. Values are "setting," a transitional phase that indicates that the code is being configured or activated; "set", which indicates that the code is active and operational; "unset," which indicates a deactivated or unused state, either before activation or after deliberate deactivation; "removing," which indicates a transitional period in which the code is being deleted or made inactive; and "unknown," which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.
                   */
                status: 'setting' | 'set' | 'unset' | 'removing' | 'unknown';
                /** Indicates whether a backup access code is available for use if the primary access code is lost or compromised. */
                is_backup_access_code_available: boolean;
                /** Indicates whether the access code is a backup code. */
                is_backup?: boolean | undefined;
                /** Identifier of the pulled backup access code. Used to associate the pulled backup access code with the original access code. */
                pulled_backup_access_code_id?: (string | null) | undefined;
                /** Indicates whether changes to the access code from external sources are permitted. */
                is_external_modification_allowed: boolean;
                /** Indicates whether the access code can only be used once. If "true," the code becomes invalid after the first use. */
                is_one_time_use: boolean;
                /** Indicates whether the access code is intended for use in offline scenarios. If "true," this code can be created on a device without a network connection. */
                is_offline_access_code: boolean;
            }>;
        };
    };
    '/access_codes/delete': {
        route: '/access_codes/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id?: string | undefined;
            access_code_id: string;
            sync?: boolean;
        };
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/access_codes/generate_code': {
        route: '/access_codes/generate_code';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id: string;
        };
        formData: {};
        jsonResponse: {
            generated_code: {
                device_id: string;
                code: string;
            };
        };
    };
    '/access_codes/get': {
        route: '/access_codes/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id?: string | undefined;
            access_code_id?: string | undefined;
            code?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            access_code: {
                /** Unique identifier for a group of access codes that share the same code. */
                common_code_key: string | null;
                /** Indicates whether the code is set on the device according to a preconfigured schedule. */
                is_scheduled_on_device?: boolean | undefined;
                /** Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration. */
                type: 'time_bound' | 'ongoing';
                /** Indicates whether the access code is waiting for a code assignment. */
                is_waiting_for_code_assignment?: boolean | undefined;
                /** Unique identifier for the access code. */
                access_code_id: string;
                /** Unique identifier for the device associated with the access code. */
                device_id: string;
                /** Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. */
                name: string | null;
                /** Code used for access. Typically, a numeric or alphanumeric string. */
                code: string | null;
                /** Date and time at which the access code was created. */
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                /** Collection of warnings associated with the access code, structured in a dictionary format. A unique "warning_code" keys each warning. Each warning entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the warning. "created_at" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention. */
                warnings?: any;
                /** Indicates whether Seam manages the access code. */
                is_managed: true;
                /** Date and time at which the time-bound access code becomes active. */
                starts_at?: (string | null) | undefined;
                /** Date and time after which the time-bound access code becomes inactive. */
                ends_at?: (string | null) | undefined;
                /**
                    Current status of the access code within the operational lifecycle. Values are "setting," a transitional phase that indicates that the code is being configured or activated; "set", which indicates that the code is active and operational; "unset," which indicates a deactivated or unused state, either before activation or after deliberate deactivation; "removing," which indicates a transitional period in which the code is being deleted or made inactive; and "unknown," which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.
                   */
                status: 'setting' | 'set' | 'unset' | 'removing' | 'unknown';
                /** Indicates whether a backup access code is available for use if the primary access code is lost or compromised. */
                is_backup_access_code_available: boolean;
                /** Indicates whether the access code is a backup code. */
                is_backup?: boolean | undefined;
                /** Identifier of the pulled backup access code. Used to associate the pulled backup access code with the original access code. */
                pulled_backup_access_code_id?: (string | null) | undefined;
                /** Indicates whether changes to the access code from external sources are permitted. */
                is_external_modification_allowed: boolean;
                /** Indicates whether the access code can only be used once. If "true," the code becomes invalid after the first use. */
                is_one_time_use: boolean;
                /** Indicates whether the access code is intended for use in offline scenarios. If "true," this code can be created on a device without a network connection. */
                is_offline_access_code: boolean;
            };
        };
    };
    '/access_codes/list': {
        route: '/access_codes/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id?: string | undefined;
            access_code_ids?: string[] | undefined;
            user_identifier_key?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            access_codes: Array<{
                /** Unique identifier for a group of access codes that share the same code. */
                common_code_key: string | null;
                /** Indicates whether the code is set on the device according to a preconfigured schedule. */
                is_scheduled_on_device?: boolean | undefined;
                /** Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration. */
                type: 'time_bound' | 'ongoing';
                /** Indicates whether the access code is waiting for a code assignment. */
                is_waiting_for_code_assignment?: boolean | undefined;
                /** Unique identifier for the access code. */
                access_code_id: string;
                /** Unique identifier for the device associated with the access code. */
                device_id: string;
                /** Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. */
                name: string | null;
                /** Code used for access. Typically, a numeric or alphanumeric string. */
                code: string | null;
                /** Date and time at which the access code was created. */
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                /** Collection of warnings associated with the access code, structured in a dictionary format. A unique "warning_code" keys each warning. Each warning entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the warning. "created_at" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention. */
                warnings?: any;
                /** Indicates whether Seam manages the access code. */
                is_managed: true;
                /** Date and time at which the time-bound access code becomes active. */
                starts_at?: (string | null) | undefined;
                /** Date and time after which the time-bound access code becomes inactive. */
                ends_at?: (string | null) | undefined;
                /**
                    Current status of the access code within the operational lifecycle. Values are "setting," a transitional phase that indicates that the code is being configured or activated; "set", which indicates that the code is active and operational; "unset," which indicates a deactivated or unused state, either before activation or after deliberate deactivation; "removing," which indicates a transitional period in which the code is being deleted or made inactive; and "unknown," which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.
                   */
                status: 'setting' | 'set' | 'unset' | 'removing' | 'unknown';
                /** Indicates whether a backup access code is available for use if the primary access code is lost or compromised. */
                is_backup_access_code_available: boolean;
                /** Indicates whether the access code is a backup code. */
                is_backup?: boolean | undefined;
                /** Identifier of the pulled backup access code. Used to associate the pulled backup access code with the original access code. */
                pulled_backup_access_code_id?: (string | null) | undefined;
                /** Indicates whether changes to the access code from external sources are permitted. */
                is_external_modification_allowed: boolean;
                /** Indicates whether the access code can only be used once. If "true," the code becomes invalid after the first use. */
                is_one_time_use: boolean;
                /** Indicates whether the access code is intended for use in offline scenarios. If "true," this code can be created on a device without a network connection. */
                is_offline_access_code: boolean;
            }>;
        };
    };
    '/access_codes/pull_backup_access_code': {
        route: '/access_codes/pull_backup_access_code';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            access_code_id: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            backup_access_code: {
                /** Unique identifier for a group of access codes that share the same code. */
                common_code_key: string | null;
                /** Indicates whether the code is set on the device according to a preconfigured schedule. */
                is_scheduled_on_device?: boolean | undefined;
                /** Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration. */
                type: 'time_bound' | 'ongoing';
                /** Indicates whether the access code is waiting for a code assignment. */
                is_waiting_for_code_assignment?: boolean | undefined;
                /** Unique identifier for the access code. */
                access_code_id: string;
                /** Unique identifier for the device associated with the access code. */
                device_id: string;
                /** Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. */
                name: string | null;
                /** Code used for access. Typically, a numeric or alphanumeric string. */
                code: string | null;
                /** Date and time at which the access code was created. */
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                /** Collection of warnings associated with the access code, structured in a dictionary format. A unique "warning_code" keys each warning. Each warning entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the warning. "created_at" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention. */
                warnings?: any;
                /** Indicates whether Seam manages the access code. */
                is_managed: true;
                /** Date and time at which the time-bound access code becomes active. */
                starts_at?: (string | null) | undefined;
                /** Date and time after which the time-bound access code becomes inactive. */
                ends_at?: (string | null) | undefined;
                /**
                    Current status of the access code within the operational lifecycle. Values are "setting," a transitional phase that indicates that the code is being configured or activated; "set", which indicates that the code is active and operational; "unset," which indicates a deactivated or unused state, either before activation or after deliberate deactivation; "removing," which indicates a transitional period in which the code is being deleted or made inactive; and "unknown," which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.
                   */
                status: 'setting' | 'set' | 'unset' | 'removing' | 'unknown';
                /** Indicates whether a backup access code is available for use if the primary access code is lost or compromised. */
                is_backup_access_code_available: boolean;
                /** Indicates whether the access code is a backup code. */
                is_backup?: boolean | undefined;
                /** Identifier of the pulled backup access code. Used to associate the pulled backup access code with the original access code. */
                pulled_backup_access_code_id?: (string | null) | undefined;
                /** Indicates whether changes to the access code from external sources are permitted. */
                is_external_modification_allowed: boolean;
                /** Indicates whether the access code can only be used once. If "true," the code becomes invalid after the first use. */
                is_one_time_use: boolean;
                /** Indicates whether the access code is intended for use in offline scenarios. If "true," this code can be created on a device without a network connection. */
                is_offline_access_code: boolean;
            };
        };
    };
    '/access_codes/simulate/create_unmanaged_access_code': {
        route: '/access_codes/simulate/create_unmanaged_access_code';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            name: string;
            code: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            access_code: {
                /** Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration. */
                type: 'time_bound' | 'ongoing';
                /** Unique identifier for the access code. */
                access_code_id: string;
                /** Unique identifier for the device associated with the access code. */
                device_id: string;
                /** Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. */
                name: string | null;
                /** Code used for access. Typically, a numeric or alphanumeric string. */
                code: string | null;
                /** Date and time at which the access code was created. */
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                /** Collection of warnings associated with the access code, structured in a dictionary format. A unique "warning_code" keys each warning. Each warning entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the warning. "created_at" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention. */
                warnings?: any;
                is_managed: false;
                /** Date and time at which the time-bound access code becomes active. */
                starts_at?: (string | null) | undefined;
                /** Date and time after which the time-bound access code becomes inactive. */
                ends_at?: (string | null) | undefined;
                status: 'set';
            };
        };
    };
    '/access_codes/unmanaged/convert_to_managed': {
        route: '/access_codes/unmanaged/convert_to_managed';
        method: 'POST' | 'PATCH';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            access_code_id: string;
            is_external_modification_allowed?: boolean | undefined;
            allow_external_modification?: boolean | undefined;
            force?: boolean | undefined;
            sync?: boolean;
        };
        formData: {};
        jsonResponse: {};
    };
    '/access_codes/unmanaged/delete': {
        route: '/access_codes/unmanaged/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            access_code_id: string;
            sync?: boolean;
        };
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/access_codes/unmanaged/get': {
        route: '/access_codes/unmanaged/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id?: string | undefined;
            access_code_id?: string | undefined;
            code?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            access_code: {
                /** Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration. */
                type: 'time_bound' | 'ongoing';
                /** Unique identifier for the access code. */
                access_code_id: string;
                /** Unique identifier for the device associated with the access code. */
                device_id: string;
                /** Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. */
                name: string | null;
                /** Code used for access. Typically, a numeric or alphanumeric string. */
                code: string | null;
                /** Date and time at which the access code was created. */
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                /** Collection of warnings associated with the access code, structured in a dictionary format. A unique "warning_code" keys each warning. Each warning entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the warning. "created_at" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention. */
                warnings?: any;
                is_managed: false;
                /** Date and time at which the time-bound access code becomes active. */
                starts_at?: (string | null) | undefined;
                /** Date and time after which the time-bound access code becomes inactive. */
                ends_at?: (string | null) | undefined;
                status: 'set';
            };
        };
    };
    '/access_codes/unmanaged/list': {
        route: '/access_codes/unmanaged/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id: string;
            user_identifier_key?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            access_codes: Array<{
                /** Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration. */
                type: 'time_bound' | 'ongoing';
                /** Unique identifier for the access code. */
                access_code_id: string;
                /** Unique identifier for the device associated with the access code. */
                device_id: string;
                /** Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. */
                name: string | null;
                /** Code used for access. Typically, a numeric or alphanumeric string. */
                code: string | null;
                /** Date and time at which the access code was created. */
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                /** Collection of warnings associated with the access code, structured in a dictionary format. A unique "warning_code" keys each warning. Each warning entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the warning. "created_at" is a date that indicates when the warning was generated. This structure enables detailed tracking and timely response to potential issues that are not critical but that may require attention. */
                warnings?: any;
                is_managed: false;
                /** Date and time at which the time-bound access code becomes active. */
                starts_at?: (string | null) | undefined;
                /** Date and time after which the time-bound access code becomes inactive. */
                ends_at?: (string | null) | undefined;
                status: 'set';
            }>;
        };
    };
    '/access_codes/unmanaged/update': {
        route: '/access_codes/unmanaged/update';
        method: 'PATCH' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            access_code_id: string;
            is_managed: boolean;
            allow_external_modification?: boolean | undefined;
            is_external_modification_allowed?: boolean | undefined;
            force?: boolean | undefined;
        };
        formData: {};
        jsonResponse: {};
    };
    '/access_codes/update': {
        route: '/access_codes/update';
        method: 'POST' | 'PATCH' | 'PUT';
        queryParams: {};
        jsonBody: {
            name?: string | undefined;
            starts_at?: string | undefined;
            ends_at?: string | undefined;
            code?: string | undefined;
            sync?: boolean;
            attempt_for_offline_device?: boolean;
            prefer_native_scheduling?: boolean | undefined;
            use_backup_access_code_pool?: boolean | undefined;
            allow_external_modification?: boolean | undefined;
            is_external_modification_allowed?: boolean | undefined;
            use_offline_access_code?: boolean | undefined;
            is_offline_access_code?: boolean | undefined;
            is_one_time_use?: boolean | undefined;
            max_time_rounding?: ('1hour' | '1day' | '1h' | '1d') | undefined;
            access_code_id: string;
            device_id?: string | undefined;
            type?: ('ongoing' | 'time_bound') | undefined;
            is_managed?: boolean | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/acs/access_groups/add_user': {
        route: '/acs/access_groups/add_user';
        method: 'PUT' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_access_group_id: string;
            acs_user_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/acs/access_groups/get': {
        route: '/acs/access_groups/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_access_group_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_access_group: {
                acs_access_group_id: string;
                acs_system_id: string;
                workspace_id: string;
                name: string;
                /**
                    ---
                    deprecated: use external_type
                    ---
                   */
                access_group_type: 'pti_unit' | 'pti_access_level' | 'salto_access_group' | 'brivo_group';
                /**
                    ---
                    deprecated: use external_type_display_name
                    ---
                     */
                access_group_type_display_name: string;
                external_type: 'pti_unit' | 'pti_access_level' | 'salto_access_group' | 'brivo_group';
                external_type_display_name: string;
                created_at: string;
            };
        };
    };
    '/acs/access_groups/list': {
        route: '/acs/access_groups/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_system_id?: string | undefined;
            acs_user_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            acs_access_groups: Array<{
                acs_access_group_id: string;
                acs_system_id: string;
                workspace_id: string;
                name: string;
                /**
                    ---
                    deprecated: use external_type
                    ---
                   */
                access_group_type: 'pti_unit' | 'pti_access_level' | 'salto_access_group' | 'brivo_group';
                /**
                    ---
                    deprecated: use external_type_display_name
                    ---
                     */
                access_group_type_display_name: string;
                external_type: 'pti_unit' | 'pti_access_level' | 'salto_access_group' | 'brivo_group';
                external_type_display_name: string;
                created_at: string;
            }>;
        };
    };
    '/acs/access_groups/list_users': {
        route: '/acs/access_groups/list_users';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_access_group_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_users: Array<{
                acs_user_id: string;
                acs_system_id: string;
                hid_acs_system_id?: string | undefined;
                workspace_id: string;
                created_at: string;
                display_name: string;
                external_type?: ('pti_user' | 'brivo_user' | 'hid_credential_manager_user' | 'salto_site_user') | undefined;
                external_type_display_name?: string | undefined;
                is_suspended: boolean;
                access_schedule?: {
                    starts_at: string;
                    ends_at: string;
                } | undefined;
                user_identity_id?: string | undefined;
                user_identity_email_address?: string | undefined;
                user_identity_phone_number?: string | undefined;
                full_name?: string | undefined;
                /**
                    ---
                    deprecated: use email_address.
                    ---
                     */
                email?: string | undefined;
                email_address?: string | undefined;
                phone_number?: string | undefined;
            }>;
        };
    };
    '/acs/access_groups/remove_user': {
        route: '/acs/access_groups/remove_user';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_access_group_id: string;
            acs_user_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/acs/credential_pools/list': {
        route: '/acs/credential_pools/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_system_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_credential_pools: Array<{
                acs_credential_pool_id: string;
                acs_system_id: string;
                display_name: string;
                external_type: 'hid_part_number';
                external_type_display_name: string;
                created_at: string;
                workspace_id: string;
            }>;
        };
    };
    '/acs/credential_provisioning_automations/launch': {
        route: '/acs/credential_provisioning_automations/launch';
        method: 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
            credential_manager_acs_system_id: string;
            acs_credential_pool_id?: string | undefined;
            create_credential_manager_user?: boolean | undefined;
            credential_manager_acs_user_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            acs_credential_provisioning_automation: {
                acs_credential_provisioning_automation_id: string;
                credential_manager_acs_system_id: string;
                user_identity_id: string;
                created_at: string;
                workspace_id: string;
            };
        };
    };
    '/acs/credentials/assign': {
        route: '/acs/credentials/assign';
        method: 'PATCH' | 'POST';
        queryParams: {};
        jsonBody: {
            acs_user_id: string;
            acs_credential_id: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            acs_credential: {
                acs_credential_id: string;
                acs_user_id?: string | undefined;
                acs_credential_pool_id?: string | undefined;
                acs_system_id: string;
                parent_acs_credential_id?: string | undefined;
                display_name: string;
                code?: (string | undefined) | null;
                access_method: 'code' | 'card' | 'mobile_key';
                external_type?: ('pti_card' | 'brivo_credential' | 'hid_credential' | 'visionline_card') | undefined;
                external_type_display_name?: string | undefined;
                created_at: string;
                workspace_id: string;
                starts_at?: string | undefined;
                ends_at?: string | undefined;
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                is_multi_phone_sync_credential?: boolean | undefined;
                visionline_metadata?: {
                    joiner_acs_credential_ids?: string[] | undefined;
                    guest_acs_entrance_ids?: string[] | undefined;
                    common_acs_entrance_ids?: string[] | undefined;
                } | undefined;
            };
        };
    };
    '/acs/credentials/create': {
        route: '/acs/credentials/create';
        method: 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            credential_manager_acs_system_id?: string | undefined;
            acs_user_id: string;
            access_method: 'code' | 'card' | 'mobile_key';
            code?: string | undefined;
            is_multi_phone_sync_credential?: boolean;
            allowed_acs_entrance_ids?: string[];
            visionline_metadata?: {
                assa_abloy_credential_service_mobile_endpoint_id?: string | undefined;
                card_format?: ('TLCode' | 'rfid48') | undefined;
                is_override_key?: boolean | undefined;
                joiner_acs_credential_ids?: string[] | undefined;
            } | undefined;
            starts_at?: string | undefined;
            ends_at?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            acs_credential: {
                acs_credential_id: string;
                acs_user_id?: string | undefined;
                acs_credential_pool_id?: string | undefined;
                acs_system_id: string;
                parent_acs_credential_id?: string | undefined;
                display_name: string;
                code?: (string | undefined) | null;
                access_method: 'code' | 'card' | 'mobile_key';
                external_type?: ('pti_card' | 'brivo_credential' | 'hid_credential' | 'visionline_card') | undefined;
                external_type_display_name?: string | undefined;
                created_at: string;
                workspace_id: string;
                starts_at?: string | undefined;
                ends_at?: string | undefined;
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                is_multi_phone_sync_credential?: boolean | undefined;
                visionline_metadata?: {
                    joiner_acs_credential_ids?: string[] | undefined;
                    guest_acs_entrance_ids?: string[] | undefined;
                    common_acs_entrance_ids?: string[] | undefined;
                } | undefined;
            };
        };
    };
    '/acs/credentials/delete': {
        route: '/acs/credentials/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_credential_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/acs/credentials/get': {
        route: '/acs/credentials/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_credential_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_credential: {
                acs_credential_id: string;
                acs_user_id?: string | undefined;
                acs_credential_pool_id?: string | undefined;
                acs_system_id: string;
                parent_acs_credential_id?: string | undefined;
                display_name: string;
                code?: (string | undefined) | null;
                access_method: 'code' | 'card' | 'mobile_key';
                external_type?: ('pti_card' | 'brivo_credential' | 'hid_credential' | 'visionline_card') | undefined;
                external_type_display_name?: string | undefined;
                created_at: string;
                workspace_id: string;
                starts_at?: string | undefined;
                ends_at?: string | undefined;
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                is_multi_phone_sync_credential?: boolean | undefined;
                visionline_metadata?: {
                    joiner_acs_credential_ids?: string[] | undefined;
                    guest_acs_entrance_ids?: string[] | undefined;
                    common_acs_entrance_ids?: string[] | undefined;
                } | undefined;
            };
        };
    };
    '/acs/credentials/list': {
        route: '/acs/credentials/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: ({
            acs_user_id: string;
        } | {
            acs_system_id: string;
        } | {
            acs_user_id: string;
            acs_system_id: string;
        } | {
            user_identity_id: string;
        }) & {
            is_multi_phone_sync_credential?: boolean | undefined;
        };
        formData: {};
        jsonResponse: {
            acs_credentials: Array<{
                acs_credential_id: string;
                acs_user_id?: string | undefined;
                acs_credential_pool_id?: string | undefined;
                acs_system_id: string;
                parent_acs_credential_id?: string | undefined;
                display_name: string;
                code?: (string | undefined) | null;
                access_method: 'code' | 'card' | 'mobile_key';
                external_type?: ('pti_card' | 'brivo_credential' | 'hid_credential' | 'visionline_card') | undefined;
                external_type_display_name?: string | undefined;
                created_at: string;
                workspace_id: string;
                starts_at?: string | undefined;
                ends_at?: string | undefined;
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                is_multi_phone_sync_credential?: boolean | undefined;
                visionline_metadata?: {
                    joiner_acs_credential_ids?: string[] | undefined;
                    guest_acs_entrance_ids?: string[] | undefined;
                    common_acs_entrance_ids?: string[] | undefined;
                } | undefined;
            }>;
        };
    };
    '/acs/credentials/unassign': {
        route: '/acs/credentials/unassign';
        method: 'PATCH' | 'POST';
        queryParams: {};
        jsonBody: {
            acs_user_id: string;
            acs_credential_id: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            acs_credential: {
                acs_credential_id: string;
                acs_user_id?: string | undefined;
                acs_credential_pool_id?: string | undefined;
                acs_system_id: string;
                parent_acs_credential_id?: string | undefined;
                display_name: string;
                code?: (string | undefined) | null;
                access_method: 'code' | 'card' | 'mobile_key';
                external_type?: ('pti_card' | 'brivo_credential' | 'hid_credential' | 'visionline_card') | undefined;
                external_type_display_name?: string | undefined;
                created_at: string;
                workspace_id: string;
                starts_at?: string | undefined;
                ends_at?: string | undefined;
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                is_multi_phone_sync_credential?: boolean | undefined;
                visionline_metadata?: {
                    joiner_acs_credential_ids?: string[] | undefined;
                    guest_acs_entrance_ids?: string[] | undefined;
                    common_acs_entrance_ids?: string[] | undefined;
                } | undefined;
            };
        };
    };
    '/acs/credentials/update': {
        route: '/acs/credentials/update';
        method: 'PATCH' | 'POST';
        queryParams: {};
        jsonBody: {
            acs_credential_id: string;
            code: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            acs_credential: {
                acs_credential_id: string;
                acs_user_id?: string | undefined;
                acs_credential_pool_id?: string | undefined;
                acs_system_id: string;
                parent_acs_credential_id?: string | undefined;
                display_name: string;
                code?: (string | undefined) | null;
                access_method: 'code' | 'card' | 'mobile_key';
                external_type?: ('pti_card' | 'brivo_credential' | 'hid_credential' | 'visionline_card') | undefined;
                external_type_display_name?: string | undefined;
                created_at: string;
                workspace_id: string;
                starts_at?: string | undefined;
                ends_at?: string | undefined;
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                is_multi_phone_sync_credential?: boolean | undefined;
                visionline_metadata?: {
                    joiner_acs_credential_ids?: string[] | undefined;
                    guest_acs_entrance_ids?: string[] | undefined;
                    common_acs_entrance_ids?: string[] | undefined;
                } | undefined;
            };
        };
    };
    '/acs/entrances/get': {
        route: '/acs/entrances/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_entrance_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_entrance: {
                acs_entrance_id: string;
                display_name: string;
                acs_system_id: string;
                created_at: string;
                latch_metadata: {
                    accessibility_type: string;
                    name: string;
                    type: string;
                    is_connected: boolean;
                } | null;
                visionline_metadata: {
                    door_name: string;
                    door_category: 'entrance' | 'guest' | 'elevator reader' | 'common' | 'common (PMS)';
                    profiles?: Array<{
                        visionline_door_profile_id: string;
                        visionline_door_profile_type: 'BLE' | 'commonDoor' | 'touch';
                    }> | undefined;
                } | null;
            };
        };
    };
    '/acs/entrances/grant_access': {
        route: '/acs/entrances/grant_access';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            acs_entrance_id: string;
            acs_user_id: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/acs/entrances/list': {
        route: '/acs/entrances/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_system_id?: string | undefined;
            acs_credential_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            acs_entrances: Array<{
                acs_entrance_id: string;
                display_name: string;
                acs_system_id: string;
                created_at: string;
                latch_metadata: {
                    accessibility_type: string;
                    name: string;
                    type: string;
                    is_connected: boolean;
                } | null;
                visionline_metadata: {
                    door_name: string;
                    door_category: 'entrance' | 'guest' | 'elevator reader' | 'common' | 'common (PMS)';
                    profiles?: Array<{
                        visionline_door_profile_id: string;
                        visionline_door_profile_type: 'BLE' | 'commonDoor' | 'touch';
                    }> | undefined;
                } | null;
            }>;
        };
    };
    '/acs/entrances/list_credentials_with_access': {
        route: '/acs/entrances/list_credentials_with_access';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_entrance_id: string;
            include_if?: Array<'visionline_metadata.is_valid'> | undefined;
        };
        formData: {};
        jsonResponse: {
            acs_credentials: Array<{
                acs_credential_id: string;
                acs_user_id?: string | undefined;
                acs_credential_pool_id?: string | undefined;
                acs_system_id: string;
                parent_acs_credential_id?: string | undefined;
                display_name: string;
                code?: (string | undefined) | null;
                access_method: 'code' | 'card' | 'mobile_key';
                external_type?: ('pti_card' | 'brivo_credential' | 'hid_credential' | 'visionline_card') | undefined;
                external_type_display_name?: string | undefined;
                created_at: string;
                workspace_id: string;
                starts_at?: string | undefined;
                ends_at?: string | undefined;
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                is_multi_phone_sync_credential?: boolean | undefined;
                visionline_metadata?: {
                    joiner_acs_credential_ids?: string[] | undefined;
                    guest_acs_entrance_ids?: string[] | undefined;
                    common_acs_entrance_ids?: string[] | undefined;
                } | undefined;
            }>;
        };
    };
    '/acs/systems/get': {
        route: '/acs/systems/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_system_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_system: {
                acs_system_id: string;
                external_type: 'pti_site' | 'alta_org' | 'salto_site' | 'brivo_account' | 'hid_credential_manager_organization' | 'visionline_system' | 'assa_abloy_credential_service' | 'latch_building';
                external_type_display_name: string;
                /**
                      ---
                      deprecated: use external_type
                      ---
                       */
                system_type: 'pti_site' | 'alta_org' | 'salto_site' | 'brivo_account' | 'hid_credential_manager_organization' | 'visionline_system' | 'assa_abloy_credential_service' | 'latch_building';
                /**
                      ---
                      deprecated: use external_type_display_name
                      ---
                       */
                system_type_display_name: string;
                name: string;
                created_at: string;
                workspace_id: string;
                connected_account_ids: string[];
                image_url: string;
                image_alt_text: string;
                can_automate_enrollment?: boolean | undefined;
            };
        };
    };
    '/acs/systems/list': {
        route: '/acs/systems/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            connected_account_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            acs_systems: Array<{
                acs_system_id: string;
                external_type: 'pti_site' | 'alta_org' | 'salto_site' | 'brivo_account' | 'hid_credential_manager_organization' | 'visionline_system' | 'assa_abloy_credential_service' | 'latch_building';
                external_type_display_name: string;
                /**
                      ---
                      deprecated: use external_type
                      ---
                       */
                system_type: 'pti_site' | 'alta_org' | 'salto_site' | 'brivo_account' | 'hid_credential_manager_organization' | 'visionline_system' | 'assa_abloy_credential_service' | 'latch_building';
                /**
                      ---
                      deprecated: use external_type_display_name
                      ---
                       */
                system_type_display_name: string;
                name: string;
                created_at: string;
                workspace_id: string;
                connected_account_ids: string[];
                image_url: string;
                image_alt_text: string;
                can_automate_enrollment?: boolean | undefined;
            }>;
        };
    };
    '/acs/users/add_to_access_group': {
        route: '/acs/users/add_to_access_group';
        method: 'PUT' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_user_id: string;
            acs_access_group_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/acs/users/create': {
        route: '/acs/users/create';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            acs_system_id: string;
            acs_access_group_ids?: string[];
            user_identity_id?: string | undefined;
            access_schedule?: {
                starts_at: string;
                ends_at: string;
            } | undefined;
            full_name?: string | undefined;
            /**
              ---
              deprecated: use email_address.
              ---
               */
            email?: string | undefined;
            phone_number?: string | undefined;
            email_address?: string | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            acs_user: {
                acs_user_id: string;
                acs_system_id: string;
                hid_acs_system_id?: string | undefined;
                workspace_id: string;
                created_at: string;
                display_name: string;
                external_type?: ('pti_user' | 'brivo_user' | 'hid_credential_manager_user' | 'salto_site_user') | undefined;
                external_type_display_name?: string | undefined;
                is_suspended: boolean;
                access_schedule?: {
                    starts_at: string;
                    ends_at: string;
                } | undefined;
                user_identity_id?: string | undefined;
                user_identity_email_address?: string | undefined;
                user_identity_phone_number?: string | undefined;
                full_name?: string | undefined;
                /**
                    ---
                    deprecated: use email_address.
                    ---
                     */
                email?: string | undefined;
                email_address?: string | undefined;
                phone_number?: string | undefined;
            };
        };
    };
    '/acs/users/delete': {
        route: '/acs/users/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_user_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/acs/users/get': {
        route: '/acs/users/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_user_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_user: {
                acs_user_id: string;
                acs_system_id: string;
                hid_acs_system_id?: string | undefined;
                workspace_id: string;
                created_at: string;
                display_name: string;
                external_type?: ('pti_user' | 'brivo_user' | 'hid_credential_manager_user' | 'salto_site_user') | undefined;
                external_type_display_name?: string | undefined;
                is_suspended: boolean;
                access_schedule?: {
                    starts_at: string;
                    ends_at: string;
                } | undefined;
                user_identity_id?: string | undefined;
                user_identity_email_address?: string | undefined;
                user_identity_phone_number?: string | undefined;
                full_name?: string | undefined;
                /**
                    ---
                    deprecated: use email_address.
                    ---
                     */
                email?: string | undefined;
                email_address?: string | undefined;
                phone_number?: string | undefined;
            };
        };
    };
    '/acs/users/list': {
        route: '/acs/users/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id?: string | undefined;
            user_identity_phone_number?: string | undefined;
            user_identity_email_address?: string | undefined;
            acs_system_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            acs_users: Array<{
                acs_user_id: string;
                acs_system_id: string;
                hid_acs_system_id?: string | undefined;
                workspace_id: string;
                created_at: string;
                display_name: string;
                external_type?: ('pti_user' | 'brivo_user' | 'hid_credential_manager_user' | 'salto_site_user') | undefined;
                external_type_display_name?: string | undefined;
                is_suspended: boolean;
                access_schedule?: {
                    starts_at: string;
                    ends_at: string;
                } | undefined;
                user_identity_id?: string | undefined;
                user_identity_email_address?: string | undefined;
                user_identity_phone_number?: string | undefined;
                full_name?: string | undefined;
                /**
                    ---
                    deprecated: use email_address.
                    ---
                     */
                email?: string | undefined;
                email_address?: string | undefined;
                phone_number?: string | undefined;
            }>;
        };
    };
    '/acs/users/list_accessible_entrances': {
        route: '/acs/users/list_accessible_entrances';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_user_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_entrances: Array<{
                acs_entrance_id: string;
                display_name: string;
                acs_system_id: string;
                created_at: string;
                latch_metadata: {
                    accessibility_type: string;
                    name: string;
                    type: string;
                    is_connected: boolean;
                } | null;
                visionline_metadata: {
                    door_name: string;
                    door_category: 'entrance' | 'guest' | 'elevator reader' | 'common' | 'common (PMS)';
                    profiles?: Array<{
                        visionline_door_profile_id: string;
                        visionline_door_profile_type: 'BLE' | 'commonDoor' | 'touch';
                    }> | undefined;
                } | null;
            }>;
        };
    };
    '/acs/users/remove_from_access_group': {
        route: '/acs/users/remove_from_access_group';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_user_id: string;
            acs_access_group_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/acs/users/revoke_access_to_all_entrances': {
        route: '/acs/users/revoke_access_to_all_entrances';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            acs_user_id: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/acs/users/suspend': {
        route: '/acs/users/suspend';
        method: 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_user_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/acs/users/unsuspend': {
        route: '/acs/users/unsuspend';
        method: 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            acs_user_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/acs/users/update': {
        route: '/acs/users/update';
        method: 'PATCH' | 'POST';
        queryParams: {};
        jsonBody: {
            access_schedule?: {
                starts_at: string;
                ends_at: string;
            } | undefined;
            acs_user_id: string;
            full_name?: string | undefined;
            /**
              ---
              deprecated: use email_address.
              ---
               */
            email?: string | undefined;
            phone_number?: string | undefined;
            email_address?: string | undefined;
            hid_acs_system_id?: string | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/action_attempts/get': {
        route: '/action_attempts/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            action_attempt_id: string;
        };
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/action_attempts/list': {
        route: '/action_attempts/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            action_attempt_ids: string[];
        };
        formData: {};
        jsonResponse: {
            action_attempts: Array<{
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            }>;
        };
    };
    '/client_sessions/create': {
        route: '/client_sessions/create';
        method: 'POST' | 'PUT';
        queryParams: {};
        jsonBody: {
            user_identifier_key?: string | undefined;
            connect_webview_ids?: string[] | undefined;
            connected_account_ids?: string[] | undefined;
            user_identity_ids?: string[] | undefined;
            expires_at?: Date | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            client_session: {
                client_session_id: string;
                user_identifier_key: string | null;
                created_at: string;
                token: string;
                device_count: number;
                connected_account_ids: string[];
                connect_webview_ids: string[];
                user_identity_ids: string[];
                workspace_id: string;
            };
        };
    };
    '/client_sessions/delete': {
        route: '/client_sessions/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            client_session_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/client_sessions/get': {
        route: '/client_sessions/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            client_session_id?: string | undefined;
            user_identifier_key?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            client_session: {
                client_session_id: string;
                user_identifier_key: string | null;
                created_at: string;
                token: string;
                device_count: number;
                connected_account_ids: string[];
                connect_webview_ids: string[];
                user_identity_ids: string[];
                workspace_id: string;
            };
        };
    };
    '/client_sessions/get_or_create': {
        route: '/client_sessions/get_or_create';
        method: 'POST' | 'PUT';
        queryParams: {};
        jsonBody: {
            user_identifier_key?: string | undefined;
            connect_webview_ids?: string[] | undefined;
            connected_account_ids?: string[] | undefined;
            user_identity_ids?: string[] | undefined;
            expires_at?: Date | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            client_session: {
                client_session_id: string;
                user_identifier_key: string | null;
                created_at: string;
                token: string;
                device_count: number;
                connected_account_ids: string[];
                connect_webview_ids: string[];
                user_identity_ids: string[];
                workspace_id: string;
            };
        };
    };
    '/client_sessions/grant_access': {
        route: '/client_sessions/grant_access';
        method: 'PATCH' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            client_session_id?: string | undefined;
            user_identifier_key?: string | undefined;
            connected_account_ids?: string[] | undefined;
            connect_webview_ids?: string[] | undefined;
            user_identity_ids?: string[] | undefined;
        };
        formData: {};
        jsonResponse: {
            client_session: {
                client_session_id: string;
                user_identifier_key: string | null;
                created_at: string;
                token: string;
                device_count: number;
                connected_account_ids: string[];
                connect_webview_ids: string[];
                user_identity_ids: string[];
                workspace_id: string;
            };
        };
    };
    '/client_sessions/list': {
        route: '/client_sessions/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            client_session_id?: string | undefined;
            user_identifier_key?: string | undefined;
            connect_webview_id?: string | undefined;
            without_user_identifier_key?: boolean | undefined;
            user_identity_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            client_sessions: Array<{
                client_session_id: string;
                user_identifier_key: string | null;
                created_at: string;
                token: string;
                device_count: number;
                connected_account_ids: string[];
                connect_webview_ids: string[];
                user_identity_ids: string[];
                workspace_id: string;
            }>;
        };
    };
    '/client_sessions/revoke': {
        route: '/client_sessions/revoke';
        method: 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            client_session_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/connect_webviews/create': {
        route: '/connect_webviews/create';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_selection_mode?: ('none' | 'single' | 'multiple') | undefined;
            custom_redirect_url?: string | undefined;
            custom_redirect_failure_url?: string | undefined;
            accepted_providers?: Array<'akuvox' | 'august' | 'avigilon_alta' | 'brivo' | 'butterflymx' | 'schlage' | 'smartthings' | 'yale' | 'genie' | 'doorking' | 'salto' | 'lockly' | 'ttlock' | 'linear' | 'noiseaware' | 'nuki' | 'seam_relay_admin' | 'igloo' | 'kwikset' | 'minut' | 'my_2n' | 'controlbyweb' | 'nest' | 'igloohome' | 'ecobee' | 'hubitat' | 'four_suites' | 'dormakaba_oracode' | 'pti' | 'wyze' | 'seam_passport' | 'visionline' | 'assa_abloy_credential_service' | 'seam_bridge' | 'tedee' | 'honeywell_resideo' | 'latch' | 'yale_access' | 'hid_cm' | 'google_nest'> | undefined;
            provider_category?: ('stable' | 'consumer_smartlocks' | 'thermostats' | 'noise_sensors' | 'access_control_systems' | 'internal_beta') | undefined;
            custom_metadata?: Record<string, string | boolean | null> | undefined;
            automatically_manage_new_devices?: boolean | undefined;
            wait_for_device_creation?: boolean | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            connect_webview: {
                connect_webview_id: string;
                connected_account_id?: string | undefined;
                url: string;
                workspace_id: string;
                device_selection_mode: 'none' | 'single' | 'multiple';
                accepted_providers: string[];
                accepted_devices: string[];
                any_provider_allowed: boolean;
                any_device_allowed: boolean;
                created_at: string;
                login_successful: boolean;
                status: 'pending' | 'failed' | 'authorized';
                custom_redirect_url: string | null;
                custom_redirect_failure_url: string | null;
                custom_metadata: Record<string, string | boolean>;
                automatically_manage_new_devices: boolean;
                wait_for_device_creation: boolean;
                authorized_at: string | null;
                selected_provider: string | null;
            };
        };
    };
    '/connect_webviews/delete': {
        route: '/connect_webviews/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {
            connect_webview_id: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/connect_webviews/get': {
        route: '/connect_webviews/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            connect_webview_id: string;
        };
        formData: {};
        jsonResponse: {
            connect_webview: {
                connect_webview_id: string;
                connected_account_id?: string | undefined;
                url: string;
                workspace_id: string;
                device_selection_mode: 'none' | 'single' | 'multiple';
                accepted_providers: string[];
                accepted_devices: string[];
                any_provider_allowed: boolean;
                any_device_allowed: boolean;
                created_at: string;
                login_successful: boolean;
                status: 'pending' | 'failed' | 'authorized';
                custom_redirect_url: string | null;
                custom_redirect_failure_url: string | null;
                custom_metadata: Record<string, string | boolean>;
                automatically_manage_new_devices: boolean;
                wait_for_device_creation: boolean;
                authorized_at: string | null;
                selected_provider: string | null;
            };
        };
    };
    '/connect_webviews/list': {
        route: '/connect_webviews/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identifier_key?: string | undefined;
            /** Returns devices where the webview's custom_metadata contains all of the provided key/value pairs. */
            custom_metadata_has?: Record<string, string | boolean> | undefined;
        };
        formData: {};
        jsonResponse: {
            connect_webviews: Array<{
                connect_webview_id: string;
                connected_account_id?: string | undefined;
                url: string;
                workspace_id: string;
                device_selection_mode: 'none' | 'single' | 'multiple';
                accepted_providers: string[];
                accepted_devices: string[];
                any_provider_allowed: boolean;
                any_device_allowed: boolean;
                created_at: string;
                login_successful: boolean;
                status: 'pending' | 'failed' | 'authorized';
                custom_redirect_url: string | null;
                custom_redirect_failure_url: string | null;
                custom_metadata: Record<string, string | boolean>;
                automatically_manage_new_devices: boolean;
                wait_for_device_creation: boolean;
                authorized_at: string | null;
                selected_provider: string | null;
            }>;
        };
    };
    '/connect_webviews/view': {
        route: '/connect_webviews/view';
        method: 'GET';
        queryParams: {
            connect_webview_id: string;
            auth_token: string;
        };
        jsonBody: {};
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/connected_accounts/delete': {
        route: '/connected_accounts/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {
            connected_account_id: string;
            sync?: boolean;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/connected_accounts/get': {
        route: '/connected_accounts/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            connected_account_id: string;
        } | {
            email: string;
        };
        formData: {};
        jsonResponse: {
            connected_account: {
                connected_account_id?: string | undefined;
                created_at?: string | undefined;
                user_identifier?: {
                    username?: string | undefined;
                    api_url?: string | undefined;
                    email?: string | undefined;
                    phone?: string | undefined;
                    exclusive?: boolean | undefined;
                } | undefined;
                account_type?: string | undefined;
                account_type_display_name: string;
                errors?: any;
                warnings?: any;
                custom_metadata: Record<string, string | boolean>;
                automatically_manage_new_devices: boolean;
            };
        };
    };
    '/connected_accounts/list': {
        route: '/connected_accounts/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            /** Returns devices where the account's custom_metadata contains all of the provided key/value pairs. */
            custom_metadata_has?: Record<string, string | boolean> | undefined;
        };
        formData: {};
        jsonResponse: {
            connected_accounts: Array<{
                connected_account_id?: string | undefined;
                created_at?: string | undefined;
                user_identifier?: {
                    username?: string | undefined;
                    api_url?: string | undefined;
                    email?: string | undefined;
                    phone?: string | undefined;
                    exclusive?: boolean | undefined;
                } | undefined;
                account_type?: string | undefined;
                account_type_display_name: string;
                errors?: any;
                warnings?: any;
                custom_metadata: Record<string, string | boolean>;
                automatically_manage_new_devices: boolean;
            }>;
        };
    };
    '/connected_accounts/update': {
        route: '/connected_accounts/update';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            connected_account_id: string;
            automatically_manage_new_devices?: boolean | undefined;
            custom_metadata?: Record<string, string | boolean | null> | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            connected_account: {
                connected_account_id?: string | undefined;
                created_at?: string | undefined;
                user_identifier?: {
                    username?: string | undefined;
                    api_url?: string | undefined;
                    email?: string | undefined;
                    phone?: string | undefined;
                    exclusive?: boolean | undefined;
                } | undefined;
                account_type?: string | undefined;
                account_type_display_name: string;
                errors?: any;
                warnings?: any;
                custom_metadata: Record<string, string | boolean>;
                automatically_manage_new_devices: boolean;
            };
        };
    };
    '/devices/delete': {
        route: '/devices/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/devices/get': {
        route: '/devices/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id?: string | undefined;
            name?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            device: {
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Properties of the device. */
                properties: (({
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    appearance: {
                        /** Name of the device as seen from the provider API and application, not settable through Seam. */
                        name: string;
                    };
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                    /** Indicates whether the device has direct power. */
                    has_direct_power?: boolean | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Serial number of the device. */
                    serial_number?: string | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    /**
                            ---
                            deprecated: use model.accessory_keypad_supported
                            ---
                             */
                    supports_accessory_keypad?: boolean | undefined;
                    /**
                            ---
                            deprecated: use offline_access_codes_enabled
                            ---
                             */
                    supports_offline_access_codes?: boolean | undefined;
                } & {
                    assa_abloy_credential_service_metadata?: ({
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined) | undefined;
                }) & {
                    august_metadata?: {
                        lock_id: string;
                        lock_name: string;
                        house_name: string;
                        has_keypad: boolean;
                        keypad_battery_level?: string | undefined;
                        model?: string | undefined;
                        house_id?: string | undefined;
                    } | undefined;
                    avigilon_alta_metadata?: {
                        entry_name: string;
                        org_name: string;
                        zone_id: number;
                        zone_name: string;
                        site_id: number;
                        site_name: string;
                    } | undefined;
                    schlage_metadata?: {
                        device_id: string;
                        device_name: string;
                        access_code_length: number | null;
                        model?: string | undefined;
                    } | undefined;
                    smartthings_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                        location_id?: string | undefined;
                    } | undefined;
                    lockly_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                    } | undefined;
                    nuki_metadata?: {
                        device_id: string;
                        device_name: string;
                        keypad_battery_critical?: boolean | undefined;
                        keypad_paired?: boolean | undefined;
                        keypad_2_paired?: boolean | undefined;
                    } | undefined;
                    kwikset_metadata?: {
                        device_id: string;
                        device_name: string;
                        model_number: string;
                    } | undefined;
                    salto_metadata?: {
                        lock_id: string;
                        customer_reference: string;
                        lock_type: string;
                        battery_level: string;
                        locked_state: string;
                        model?: string | undefined;
                    } | undefined;
                    genie_metadata?: {
                        device_name: string;
                        door_name: string;
                    } | undefined;
                    brivo_metadata?: {
                        device_name: string;
                    } | undefined;
                    igloo_metadata?: {
                        device_id: string;
                        bridge_id: string;
                        model?: string | undefined;
                    } | undefined;
                    noiseaware_metadata?: {
                        device_model: 'indoor' | 'outdoor';
                        noise_level_nrs: number;
                        noise_level_decibel: number;
                        device_name: string;
                        device_id: string;
                    } | undefined;
                    minut_metadata?: {
                        device_id: string;
                        device_name: string;
                        latest_sensor_values: {
                            temperature: {
                                time: string;
                                value: number;
                            };
                            sound: {
                                time: string;
                                value: number;
                            };
                            humidity: {
                                time: string;
                                value: number;
                            };
                            pressure: {
                                time: string;
                                value: number;
                            };
                            accelerometer_z: {
                                time: string;
                                value: number;
                            };
                        };
                    } | undefined;
                    four_suites_metadata?: {
                        device_id: number;
                        device_name: string;
                        reclose_delay_in_seconds: number;
                    } | undefined;
                    two_n_metadata?: {
                        device_id: number;
                        device_name: string;
                    } | undefined;
                    controlbyweb_metadata?: {
                        device_id: string;
                        device_name: string;
                        relay_name: string | null;
                    } | undefined;
                    ttlock_metadata?: {
                        lock_id: number;
                        lock_alias: string;
                    } | undefined;
                    seam_bridge_metadata?: {
                        unlock_method?: ('bridge' | 'doorking') | undefined;
                        device_num: number;
                        name: string;
                    } | undefined;
                    igloohome_metadata?: {
                        device_id: string;
                        device_name: string;
                        bridge_id?: string | undefined;
                        bridge_name?: string | undefined;
                    } | undefined;
                    nest_metadata?: {
                        nest_device_id: string;
                        device_name: string;
                        custom_name: string;
                    } | undefined;
                    ecobee_metadata?: {
                        ecobee_device_id: string;
                        device_name: string;
                    } | undefined;
                    honeywell_resideo_metadata?: {
                        honeywell_resideo_device_id: string;
                        device_name: string;
                    } | undefined;
                    hubitat_metadata?: {
                        device_id: string;
                        device_name: string;
                        device_label: string;
                    } | undefined;
                    dormakaba_oracode_metadata?: {
                        door_id: number;
                        door_name: string;
                        device_id?: number | undefined;
                        site_id: number;
                        site_name: string;
                        iana_timezone?: string | undefined;
                        predefined_time_slots?: Array<{
                            name: string;
                            prefix: number;
                            check_in_time: string;
                            check_out_time: string;
                            is_24_hour: boolean;
                            is_biweekly_mode: boolean;
                            is_one_shot: boolean;
                            is_master: boolean;
                            ext_dormakaba_oracode_user_level_prefix: number;
                            dormakaba_oracode_user_level_id: string;
                        }> | undefined;
                    } | undefined;
                    wyze_metadata?: {
                        device_id: string;
                        device_name: string;
                        product_name: string;
                        product_type: string;
                        product_model: string;
                        device_info_model: string;
                    } | undefined;
                    tedee_metadata?: {
                        device_id: number;
                        serial_number: string;
                        device_name: string;
                        device_model: string;
                        bridge_id: number;
                        bridge_name: string;
                        keypad_id?: number | undefined;
                    } | undefined;
                }) & ({
                    _experimental_supported_code_from_access_codes_lengths?: (number[] | undefined) | undefined;
                    code_constraints?: (Array<{
                        constraint_type: 'no_zeros' | 'cannot_start_with_12' | 'no_triple_consecutive_ints' | 'cannot_specify_pin_code' | 'pin_code_matches_existing_set' | 'start_date_in_future' | 'no_ascending_or_descending_sequence' | 'at_least_three_unique_digits';
                    } | {
                        constraint_type: 'name_length';
                        min_length?: number | undefined;
                        max_length?: number | undefined;
                    }> | undefined) | undefined;
                    supported_code_lengths?: (number[] | undefined) | undefined;
                    max_active_codes_supported?: (number | undefined) | undefined;
                    supports_backup_access_code_pool?: (boolean | undefined) | undefined;
                    has_native_entry_events?: (boolean | undefined) | undefined;
                    locked?: (boolean | undefined) | undefined;
                    keypad_battery?: ({
                        level: number;
                    } | undefined) | undefined;
                    door_open?: (boolean | undefined) | undefined;
                } & ({
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                    min_heating_cooling_delta_celsius?: number | undefined;
                    min_heating_cooling_delta_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: false | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: false | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                }));
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            };
        };
    };
    '/devices/list': {
        route: '/devices/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            /** List all devices owned by this connected account */
            connected_account_id?: string | undefined;
            connected_account_ids?: string[] | undefined;
            connect_webview_id?: string | undefined;
            device_type?: (('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone')) | undefined;
            device_types?: Array<('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone')> | undefined;
            manufacturer?: ('akuvox' | 'august' | 'avigilon_alta' | 'brivo' | 'butterflymx' | 'doorking' | 'four_suites' | 'genie' | 'igloo' | 'keywe' | 'kwikset' | 'linear' | 'lockly' | 'nuki' | 'philia' | 'salto' | 'samsung' | 'schlage' | 'seam' | 'unknown' | 'wyze' | 'yale' | 'minut' | 'two_n' | 'ttlock' | 'nest' | 'igloohome' | 'ecobee' | 'hubitat' | 'controlbyweb' | 'smartthings' | 'dormakaba_oracode' | 'tedee' | 'honeywell_resideo') | undefined;
            device_ids?: string[] | undefined;
            limit?: number;
            created_before?: Date | undefined;
            user_identifier_key?: string | undefined;
            custom_metadata_has?: Record<string, string | boolean> | undefined;
            include_if?: Array<'can_remotely_unlock' | 'can_remotely_lock' | 'can_program_online_access_codes' | 'can_simulate_removal'> | undefined;
            exclude_if?: Array<'can_remotely_unlock' | 'can_remotely_lock' | 'can_program_online_access_codes' | 'can_simulate_removal'> | undefined;
        };
        formData: {};
        jsonResponse: {
            devices: Array<{
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Properties of the device. */
                properties: (({
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    appearance: {
                        /** Name of the device as seen from the provider API and application, not settable through Seam. */
                        name: string;
                    };
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                    /** Indicates whether the device has direct power. */
                    has_direct_power?: boolean | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Serial number of the device. */
                    serial_number?: string | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    /**
                            ---
                            deprecated: use model.accessory_keypad_supported
                            ---
                             */
                    supports_accessory_keypad?: boolean | undefined;
                    /**
                            ---
                            deprecated: use offline_access_codes_enabled
                            ---
                             */
                    supports_offline_access_codes?: boolean | undefined;
                } & {
                    assa_abloy_credential_service_metadata?: ({
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined) | undefined;
                }) & {
                    august_metadata?: {
                        lock_id: string;
                        lock_name: string;
                        house_name: string;
                        has_keypad: boolean;
                        keypad_battery_level?: string | undefined;
                        model?: string | undefined;
                        house_id?: string | undefined;
                    } | undefined;
                    avigilon_alta_metadata?: {
                        entry_name: string;
                        org_name: string;
                        zone_id: number;
                        zone_name: string;
                        site_id: number;
                        site_name: string;
                    } | undefined;
                    schlage_metadata?: {
                        device_id: string;
                        device_name: string;
                        access_code_length: number | null;
                        model?: string | undefined;
                    } | undefined;
                    smartthings_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                        location_id?: string | undefined;
                    } | undefined;
                    lockly_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                    } | undefined;
                    nuki_metadata?: {
                        device_id: string;
                        device_name: string;
                        keypad_battery_critical?: boolean | undefined;
                        keypad_paired?: boolean | undefined;
                        keypad_2_paired?: boolean | undefined;
                    } | undefined;
                    kwikset_metadata?: {
                        device_id: string;
                        device_name: string;
                        model_number: string;
                    } | undefined;
                    salto_metadata?: {
                        lock_id: string;
                        customer_reference: string;
                        lock_type: string;
                        battery_level: string;
                        locked_state: string;
                        model?: string | undefined;
                    } | undefined;
                    genie_metadata?: {
                        device_name: string;
                        door_name: string;
                    } | undefined;
                    brivo_metadata?: {
                        device_name: string;
                    } | undefined;
                    igloo_metadata?: {
                        device_id: string;
                        bridge_id: string;
                        model?: string | undefined;
                    } | undefined;
                    noiseaware_metadata?: {
                        device_model: 'indoor' | 'outdoor';
                        noise_level_nrs: number;
                        noise_level_decibel: number;
                        device_name: string;
                        device_id: string;
                    } | undefined;
                    minut_metadata?: {
                        device_id: string;
                        device_name: string;
                        latest_sensor_values: {
                            temperature: {
                                time: string;
                                value: number;
                            };
                            sound: {
                                time: string;
                                value: number;
                            };
                            humidity: {
                                time: string;
                                value: number;
                            };
                            pressure: {
                                time: string;
                                value: number;
                            };
                            accelerometer_z: {
                                time: string;
                                value: number;
                            };
                        };
                    } | undefined;
                    four_suites_metadata?: {
                        device_id: number;
                        device_name: string;
                        reclose_delay_in_seconds: number;
                    } | undefined;
                    two_n_metadata?: {
                        device_id: number;
                        device_name: string;
                    } | undefined;
                    controlbyweb_metadata?: {
                        device_id: string;
                        device_name: string;
                        relay_name: string | null;
                    } | undefined;
                    ttlock_metadata?: {
                        lock_id: number;
                        lock_alias: string;
                    } | undefined;
                    seam_bridge_metadata?: {
                        unlock_method?: ('bridge' | 'doorking') | undefined;
                        device_num: number;
                        name: string;
                    } | undefined;
                    igloohome_metadata?: {
                        device_id: string;
                        device_name: string;
                        bridge_id?: string | undefined;
                        bridge_name?: string | undefined;
                    } | undefined;
                    nest_metadata?: {
                        nest_device_id: string;
                        device_name: string;
                        custom_name: string;
                    } | undefined;
                    ecobee_metadata?: {
                        ecobee_device_id: string;
                        device_name: string;
                    } | undefined;
                    honeywell_resideo_metadata?: {
                        honeywell_resideo_device_id: string;
                        device_name: string;
                    } | undefined;
                    hubitat_metadata?: {
                        device_id: string;
                        device_name: string;
                        device_label: string;
                    } | undefined;
                    dormakaba_oracode_metadata?: {
                        door_id: number;
                        door_name: string;
                        device_id?: number | undefined;
                        site_id: number;
                        site_name: string;
                        iana_timezone?: string | undefined;
                        predefined_time_slots?: Array<{
                            name: string;
                            prefix: number;
                            check_in_time: string;
                            check_out_time: string;
                            is_24_hour: boolean;
                            is_biweekly_mode: boolean;
                            is_one_shot: boolean;
                            is_master: boolean;
                            ext_dormakaba_oracode_user_level_prefix: number;
                            dormakaba_oracode_user_level_id: string;
                        }> | undefined;
                    } | undefined;
                    wyze_metadata?: {
                        device_id: string;
                        device_name: string;
                        product_name: string;
                        product_type: string;
                        product_model: string;
                        device_info_model: string;
                    } | undefined;
                    tedee_metadata?: {
                        device_id: number;
                        serial_number: string;
                        device_name: string;
                        device_model: string;
                        bridge_id: number;
                        bridge_name: string;
                        keypad_id?: number | undefined;
                    } | undefined;
                }) & ({
                    _experimental_supported_code_from_access_codes_lengths?: (number[] | undefined) | undefined;
                    code_constraints?: (Array<{
                        constraint_type: 'no_zeros' | 'cannot_start_with_12' | 'no_triple_consecutive_ints' | 'cannot_specify_pin_code' | 'pin_code_matches_existing_set' | 'start_date_in_future' | 'no_ascending_or_descending_sequence' | 'at_least_three_unique_digits';
                    } | {
                        constraint_type: 'name_length';
                        min_length?: number | undefined;
                        max_length?: number | undefined;
                    }> | undefined) | undefined;
                    supported_code_lengths?: (number[] | undefined) | undefined;
                    max_active_codes_supported?: (number | undefined) | undefined;
                    supports_backup_access_code_pool?: (boolean | undefined) | undefined;
                    has_native_entry_events?: (boolean | undefined) | undefined;
                    locked?: (boolean | undefined) | undefined;
                    keypad_battery?: ({
                        level: number;
                    } | undefined) | undefined;
                    door_open?: (boolean | undefined) | undefined;
                } & ({
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                    min_heating_cooling_delta_celsius?: number | undefined;
                    min_heating_cooling_delta_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: false | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: false | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                }));
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            }>;
        };
    };
    '/devices/list_device_providers': {
        route: '/devices/list_device_providers';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            provider_category?: ('stable' | 'consumer_smartlocks' | 'thermostats' | 'noise_sensors' | 'access_control_systems') | undefined;
        };
        formData: {};
        jsonResponse: {
            device_providers: Array<{
                device_provider_name: 'akuvox' | 'august' | 'avigilon_alta' | 'brivo' | 'butterflymx' | 'schlage' | 'smartthings' | 'yale' | 'genie' | 'doorking' | 'salto' | 'lockly' | 'ttlock' | 'linear' | 'noiseaware' | 'nuki' | 'seam_relay_admin' | 'igloo' | 'kwikset' | 'minut' | 'my_2n' | 'controlbyweb' | 'nest' | 'igloohome' | 'ecobee' | 'hubitat' | 'four_suites' | 'dormakaba_oracode' | 'pti' | 'wyze' | 'seam_passport' | 'visionline' | 'assa_abloy_credential_service' | 'seam_bridge' | 'tedee' | 'honeywell_resideo' | 'latch';
                display_name: string;
                image_url: string;
                provider_categories: Array<'stable' | 'consumer_smartlocks' | 'thermostats' | 'noise_sensors' | 'access_control_systems'>;
            }>;
        };
    };
    '/devices/simulate/remove': {
        route: '/devices/simulate/remove';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/devices/unmanaged/get': {
        route: '/devices/unmanaged/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id?: string | undefined;
            name?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            device: {
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                is_managed: false;
                properties: {
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                };
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            };
        };
    };
    '/devices/unmanaged/list': {
        route: '/devices/unmanaged/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            /** List all devices owned by this connected account */
            connected_account_id?: string | undefined;
            connected_account_ids?: string[] | undefined;
            connect_webview_id?: string | undefined;
            device_type?: (('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone')) | undefined;
            device_types?: Array<('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone')> | undefined;
            manufacturer?: ('akuvox' | 'august' | 'avigilon_alta' | 'brivo' | 'butterflymx' | 'doorking' | 'four_suites' | 'genie' | 'igloo' | 'keywe' | 'kwikset' | 'linear' | 'lockly' | 'nuki' | 'philia' | 'salto' | 'samsung' | 'schlage' | 'seam' | 'unknown' | 'wyze' | 'yale' | 'minut' | 'two_n' | 'ttlock' | 'nest' | 'igloohome' | 'ecobee' | 'hubitat' | 'controlbyweb' | 'smartthings' | 'dormakaba_oracode' | 'tedee' | 'honeywell_resideo') | undefined;
            device_ids?: string[] | undefined;
            limit?: number;
            created_before?: Date | undefined;
            user_identifier_key?: string | undefined;
            custom_metadata_has?: Record<string, string | boolean> | undefined;
            include_if?: Array<'can_remotely_unlock' | 'can_remotely_lock' | 'can_program_online_access_codes' | 'can_simulate_removal'> | undefined;
            exclude_if?: Array<'can_remotely_unlock' | 'can_remotely_lock' | 'can_program_online_access_codes' | 'can_simulate_removal'> | undefined;
        };
        formData: {};
        jsonResponse: {
            devices: Array<{
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                is_managed: false;
                properties: {
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                };
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            }>;
        };
    };
    '/devices/unmanaged/update': {
        route: '/devices/unmanaged/update';
        method: 'POST' | 'PATCH';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id: string;
            is_managed: true;
        };
        formData: {};
        jsonResponse: {};
    };
    '/devices/update': {
        route: '/devices/update';
        method: 'POST' | 'PATCH';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id: string;
            properties?: {
                name?: (string | null) | undefined;
            } | undefined;
            name?: (string | null) | undefined;
            is_managed?: boolean;
            custom_metadata?: Record<string, string | boolean | null> | undefined;
        };
        formData: {};
        jsonResponse: {};
    };
    '/events/get': {
        route: '/events/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            event_id?: string | undefined;
            event_type?: string | undefined;
            device_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            event?: {
                event_id: string;
                device_id?: string | undefined;
                event_type: string;
                workspace_id: string;
                created_at: string;
                occurred_at: string;
            } | undefined;
            message?: string | undefined;
        };
    };
    '/events/list': {
        route: '/events/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            since?: string | undefined;
            between?: Array<string | Date> | undefined;
            device_id?: string | undefined;
            device_ids?: string[] | undefined;
            access_code_id?: string | undefined;
            access_code_ids?: string[] | undefined;
            event_type?: ('device.connected' | 'device.unmanaged.connected' | 'device.disconnected' | 'device.unmanaged.disconnected' | 'device.converted_to_unmanaged' | 'device.unmanaged.converted_to_managed' | 'device.removed' | 'device.deleted' | 'device.tampered' | 'device.low_battery' | 'device.battery_status_changed' | 'device.third_party_integration_detected' | 'device.third_party_integration_no_longer_detected' | 'device.salto.privacy_mode_activated' | 'device.salto.privacy_mode_deactivated' | 'device.connection_became_flaky' | 'device.connection_stabilized' | 'device.error.subscription_required' | 'device.error.subscription_required.resolved' | 'access_code.created' | 'access_code.changed' | 'access_code.scheduled_on_device' | 'access_code.set_on_device' | 'access_code.deleted' | 'access_code.removed_from_device' | 'access_code.failed_to_set_on_device' | 'access_code.delay_in_setting_on_device' | 'access_code.failed_to_remove_from_device' | 'access_code.delay_in_removing_from_device' | 'access_code.deleted_external_to_seam' | 'access_code.modified_external_to_seam' | 'access_code.unmanaged.converted_to_managed' | 'access_code.unmanaged.failed_to_convert_to_managed' | 'access_code.unmanaged.created' | 'access_code.unmanaged.removed' | 'lock.locked' | 'lock.unlocked' | 'phone.deactivated' | 'connected_account.connected' | 'connected_account.successful_login' | 'connected_account.created' | 'connected_account.deleted' | 'connected_account.disconnected' | 'connected_account.completed_first_sync' | 'connected_account.completed_first_sync_after_reconnection' | 'noise_sensor.noise_threshold_triggered' | 'access_code.backup_access_code_pulled' | 'acs_user.deleted' | 'acs_credential.deleted' | 'enrollment_automation.deleted' | 'client_session.deleted') | undefined;
            event_types?: Array<'device.connected' | 'device.unmanaged.connected' | 'device.disconnected' | 'device.unmanaged.disconnected' | 'device.converted_to_unmanaged' | 'device.unmanaged.converted_to_managed' | 'device.removed' | 'device.deleted' | 'device.tampered' | 'device.low_battery' | 'device.battery_status_changed' | 'device.third_party_integration_detected' | 'device.third_party_integration_no_longer_detected' | 'device.salto.privacy_mode_activated' | 'device.salto.privacy_mode_deactivated' | 'device.connection_became_flaky' | 'device.connection_stabilized' | 'device.error.subscription_required' | 'device.error.subscription_required.resolved' | 'access_code.created' | 'access_code.changed' | 'access_code.scheduled_on_device' | 'access_code.set_on_device' | 'access_code.deleted' | 'access_code.removed_from_device' | 'access_code.failed_to_set_on_device' | 'access_code.delay_in_setting_on_device' | 'access_code.failed_to_remove_from_device' | 'access_code.delay_in_removing_from_device' | 'access_code.deleted_external_to_seam' | 'access_code.modified_external_to_seam' | 'access_code.unmanaged.converted_to_managed' | 'access_code.unmanaged.failed_to_convert_to_managed' | 'access_code.unmanaged.created' | 'access_code.unmanaged.removed' | 'lock.locked' | 'lock.unlocked' | 'phone.deactivated' | 'connected_account.connected' | 'connected_account.successful_login' | 'connected_account.created' | 'connected_account.deleted' | 'connected_account.disconnected' | 'connected_account.completed_first_sync' | 'connected_account.completed_first_sync_after_reconnection' | 'noise_sensor.noise_threshold_triggered' | 'access_code.backup_access_code_pulled' | 'acs_user.deleted' | 'acs_credential.deleted' | 'enrollment_automation.deleted' | 'client_session.deleted'> | undefined;
            connected_account_id?: string | undefined;
            limit?: number;
        };
        formData: {};
        jsonResponse: {
            events: Array<{
                event_id: string;
                device_id?: string | undefined;
                event_type: string;
                workspace_id: string;
                created_at: string;
                occurred_at: string;
            }>;
        };
    };
    '/health': {
        route: '/health';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {};
        formData: {};
        jsonResponse: {
            ok: boolean;
            msg: 'I\u2019m one with the Force. The Force is with me.';
            last_service_evaluation_at?: string | undefined;
            service_health_statuses: Array<{
                service: string;
                status: 'healthy' | 'degraded' | 'down';
                description: string;
            }>;
        };
    };
    '/health/get_health': {
        route: '/health/get_health';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {};
        formData: {};
        jsonResponse: {
            ok: boolean;
            msg: 'I\u2019m one with the Force. The Force is with me.';
            last_service_evaluation_at?: string | undefined;
            service_health_statuses: Array<{
                service: string;
                status: 'healthy' | 'degraded' | 'down';
                description: string;
            }>;
        };
    };
    '/health/get_service_health': {
        route: '/health/get_service_health';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            service: string;
        };
        formData: {};
        jsonResponse: {
            ok: true;
            last_service_evaluation_at: string;
            service_health: {
                service: string;
                status: 'healthy' | 'degraded' | 'down';
                description: string;
            };
        };
    };
    '/health/service/[service_name]': {
        route: '/health/service/[service_name]';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            service_name: string;
        };
        formData: {};
        jsonResponse: {
            ok: true;
            last_service_evaluation_at: string;
            service_health: {
                service: string;
                status: 'healthy' | 'degraded' | 'down';
                description: string;
            };
        };
    };
    '/locks/get': {
        route: '/locks/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id?: string | undefined;
            name?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            lock: {
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Properties of the device. */
                properties: (({
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    appearance: {
                        /** Name of the device as seen from the provider API and application, not settable through Seam. */
                        name: string;
                    };
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                    /** Indicates whether the device has direct power. */
                    has_direct_power?: boolean | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Serial number of the device. */
                    serial_number?: string | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    /**
                            ---
                            deprecated: use model.accessory_keypad_supported
                            ---
                             */
                    supports_accessory_keypad?: boolean | undefined;
                    /**
                            ---
                            deprecated: use offline_access_codes_enabled
                            ---
                             */
                    supports_offline_access_codes?: boolean | undefined;
                } & {
                    assa_abloy_credential_service_metadata?: ({
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined) | undefined;
                }) & {
                    august_metadata?: {
                        lock_id: string;
                        lock_name: string;
                        house_name: string;
                        has_keypad: boolean;
                        keypad_battery_level?: string | undefined;
                        model?: string | undefined;
                        house_id?: string | undefined;
                    } | undefined;
                    avigilon_alta_metadata?: {
                        entry_name: string;
                        org_name: string;
                        zone_id: number;
                        zone_name: string;
                        site_id: number;
                        site_name: string;
                    } | undefined;
                    schlage_metadata?: {
                        device_id: string;
                        device_name: string;
                        access_code_length: number | null;
                        model?: string | undefined;
                    } | undefined;
                    smartthings_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                        location_id?: string | undefined;
                    } | undefined;
                    lockly_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                    } | undefined;
                    nuki_metadata?: {
                        device_id: string;
                        device_name: string;
                        keypad_battery_critical?: boolean | undefined;
                        keypad_paired?: boolean | undefined;
                        keypad_2_paired?: boolean | undefined;
                    } | undefined;
                    kwikset_metadata?: {
                        device_id: string;
                        device_name: string;
                        model_number: string;
                    } | undefined;
                    salto_metadata?: {
                        lock_id: string;
                        customer_reference: string;
                        lock_type: string;
                        battery_level: string;
                        locked_state: string;
                        model?: string | undefined;
                    } | undefined;
                    genie_metadata?: {
                        device_name: string;
                        door_name: string;
                    } | undefined;
                    brivo_metadata?: {
                        device_name: string;
                    } | undefined;
                    igloo_metadata?: {
                        device_id: string;
                        bridge_id: string;
                        model?: string | undefined;
                    } | undefined;
                    noiseaware_metadata?: {
                        device_model: 'indoor' | 'outdoor';
                        noise_level_nrs: number;
                        noise_level_decibel: number;
                        device_name: string;
                        device_id: string;
                    } | undefined;
                    minut_metadata?: {
                        device_id: string;
                        device_name: string;
                        latest_sensor_values: {
                            temperature: {
                                time: string;
                                value: number;
                            };
                            sound: {
                                time: string;
                                value: number;
                            };
                            humidity: {
                                time: string;
                                value: number;
                            };
                            pressure: {
                                time: string;
                                value: number;
                            };
                            accelerometer_z: {
                                time: string;
                                value: number;
                            };
                        };
                    } | undefined;
                    four_suites_metadata?: {
                        device_id: number;
                        device_name: string;
                        reclose_delay_in_seconds: number;
                    } | undefined;
                    two_n_metadata?: {
                        device_id: number;
                        device_name: string;
                    } | undefined;
                    controlbyweb_metadata?: {
                        device_id: string;
                        device_name: string;
                        relay_name: string | null;
                    } | undefined;
                    ttlock_metadata?: {
                        lock_id: number;
                        lock_alias: string;
                    } | undefined;
                    seam_bridge_metadata?: {
                        unlock_method?: ('bridge' | 'doorking') | undefined;
                        device_num: number;
                        name: string;
                    } | undefined;
                    igloohome_metadata?: {
                        device_id: string;
                        device_name: string;
                        bridge_id?: string | undefined;
                        bridge_name?: string | undefined;
                    } | undefined;
                    nest_metadata?: {
                        nest_device_id: string;
                        device_name: string;
                        custom_name: string;
                    } | undefined;
                    ecobee_metadata?: {
                        ecobee_device_id: string;
                        device_name: string;
                    } | undefined;
                    honeywell_resideo_metadata?: {
                        honeywell_resideo_device_id: string;
                        device_name: string;
                    } | undefined;
                    hubitat_metadata?: {
                        device_id: string;
                        device_name: string;
                        device_label: string;
                    } | undefined;
                    dormakaba_oracode_metadata?: {
                        door_id: number;
                        door_name: string;
                        device_id?: number | undefined;
                        site_id: number;
                        site_name: string;
                        iana_timezone?: string | undefined;
                        predefined_time_slots?: Array<{
                            name: string;
                            prefix: number;
                            check_in_time: string;
                            check_out_time: string;
                            is_24_hour: boolean;
                            is_biweekly_mode: boolean;
                            is_one_shot: boolean;
                            is_master: boolean;
                            ext_dormakaba_oracode_user_level_prefix: number;
                            dormakaba_oracode_user_level_id: string;
                        }> | undefined;
                    } | undefined;
                    wyze_metadata?: {
                        device_id: string;
                        device_name: string;
                        product_name: string;
                        product_type: string;
                        product_model: string;
                        device_info_model: string;
                    } | undefined;
                    tedee_metadata?: {
                        device_id: number;
                        serial_number: string;
                        device_name: string;
                        device_model: string;
                        bridge_id: number;
                        bridge_name: string;
                        keypad_id?: number | undefined;
                    } | undefined;
                }) & ({
                    _experimental_supported_code_from_access_codes_lengths?: (number[] | undefined) | undefined;
                    code_constraints?: (Array<{
                        constraint_type: 'no_zeros' | 'cannot_start_with_12' | 'no_triple_consecutive_ints' | 'cannot_specify_pin_code' | 'pin_code_matches_existing_set' | 'start_date_in_future' | 'no_ascending_or_descending_sequence' | 'at_least_three_unique_digits';
                    } | {
                        constraint_type: 'name_length';
                        min_length?: number | undefined;
                        max_length?: number | undefined;
                    }> | undefined) | undefined;
                    supported_code_lengths?: (number[] | undefined) | undefined;
                    max_active_codes_supported?: (number | undefined) | undefined;
                    supports_backup_access_code_pool?: (boolean | undefined) | undefined;
                    has_native_entry_events?: (boolean | undefined) | undefined;
                    locked?: (boolean | undefined) | undefined;
                    keypad_battery?: ({
                        level: number;
                    } | undefined) | undefined;
                    door_open?: (boolean | undefined) | undefined;
                } & ({
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                    min_heating_cooling_delta_celsius?: number | undefined;
                    min_heating_cooling_delta_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: false | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: false | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                }));
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            };
            device: {
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Properties of the device. */
                properties: (({
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    appearance: {
                        /** Name of the device as seen from the provider API and application, not settable through Seam. */
                        name: string;
                    };
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                    /** Indicates whether the device has direct power. */
                    has_direct_power?: boolean | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Serial number of the device. */
                    serial_number?: string | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    /**
                            ---
                            deprecated: use model.accessory_keypad_supported
                            ---
                             */
                    supports_accessory_keypad?: boolean | undefined;
                    /**
                            ---
                            deprecated: use offline_access_codes_enabled
                            ---
                             */
                    supports_offline_access_codes?: boolean | undefined;
                } & {
                    assa_abloy_credential_service_metadata?: ({
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined) | undefined;
                }) & {
                    august_metadata?: {
                        lock_id: string;
                        lock_name: string;
                        house_name: string;
                        has_keypad: boolean;
                        keypad_battery_level?: string | undefined;
                        model?: string | undefined;
                        house_id?: string | undefined;
                    } | undefined;
                    avigilon_alta_metadata?: {
                        entry_name: string;
                        org_name: string;
                        zone_id: number;
                        zone_name: string;
                        site_id: number;
                        site_name: string;
                    } | undefined;
                    schlage_metadata?: {
                        device_id: string;
                        device_name: string;
                        access_code_length: number | null;
                        model?: string | undefined;
                    } | undefined;
                    smartthings_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                        location_id?: string | undefined;
                    } | undefined;
                    lockly_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                    } | undefined;
                    nuki_metadata?: {
                        device_id: string;
                        device_name: string;
                        keypad_battery_critical?: boolean | undefined;
                        keypad_paired?: boolean | undefined;
                        keypad_2_paired?: boolean | undefined;
                    } | undefined;
                    kwikset_metadata?: {
                        device_id: string;
                        device_name: string;
                        model_number: string;
                    } | undefined;
                    salto_metadata?: {
                        lock_id: string;
                        customer_reference: string;
                        lock_type: string;
                        battery_level: string;
                        locked_state: string;
                        model?: string | undefined;
                    } | undefined;
                    genie_metadata?: {
                        device_name: string;
                        door_name: string;
                    } | undefined;
                    brivo_metadata?: {
                        device_name: string;
                    } | undefined;
                    igloo_metadata?: {
                        device_id: string;
                        bridge_id: string;
                        model?: string | undefined;
                    } | undefined;
                    noiseaware_metadata?: {
                        device_model: 'indoor' | 'outdoor';
                        noise_level_nrs: number;
                        noise_level_decibel: number;
                        device_name: string;
                        device_id: string;
                    } | undefined;
                    minut_metadata?: {
                        device_id: string;
                        device_name: string;
                        latest_sensor_values: {
                            temperature: {
                                time: string;
                                value: number;
                            };
                            sound: {
                                time: string;
                                value: number;
                            };
                            humidity: {
                                time: string;
                                value: number;
                            };
                            pressure: {
                                time: string;
                                value: number;
                            };
                            accelerometer_z: {
                                time: string;
                                value: number;
                            };
                        };
                    } | undefined;
                    four_suites_metadata?: {
                        device_id: number;
                        device_name: string;
                        reclose_delay_in_seconds: number;
                    } | undefined;
                    two_n_metadata?: {
                        device_id: number;
                        device_name: string;
                    } | undefined;
                    controlbyweb_metadata?: {
                        device_id: string;
                        device_name: string;
                        relay_name: string | null;
                    } | undefined;
                    ttlock_metadata?: {
                        lock_id: number;
                        lock_alias: string;
                    } | undefined;
                    seam_bridge_metadata?: {
                        unlock_method?: ('bridge' | 'doorking') | undefined;
                        device_num: number;
                        name: string;
                    } | undefined;
                    igloohome_metadata?: {
                        device_id: string;
                        device_name: string;
                        bridge_id?: string | undefined;
                        bridge_name?: string | undefined;
                    } | undefined;
                    nest_metadata?: {
                        nest_device_id: string;
                        device_name: string;
                        custom_name: string;
                    } | undefined;
                    ecobee_metadata?: {
                        ecobee_device_id: string;
                        device_name: string;
                    } | undefined;
                    honeywell_resideo_metadata?: {
                        honeywell_resideo_device_id: string;
                        device_name: string;
                    } | undefined;
                    hubitat_metadata?: {
                        device_id: string;
                        device_name: string;
                        device_label: string;
                    } | undefined;
                    dormakaba_oracode_metadata?: {
                        door_id: number;
                        door_name: string;
                        device_id?: number | undefined;
                        site_id: number;
                        site_name: string;
                        iana_timezone?: string | undefined;
                        predefined_time_slots?: Array<{
                            name: string;
                            prefix: number;
                            check_in_time: string;
                            check_out_time: string;
                            is_24_hour: boolean;
                            is_biweekly_mode: boolean;
                            is_one_shot: boolean;
                            is_master: boolean;
                            ext_dormakaba_oracode_user_level_prefix: number;
                            dormakaba_oracode_user_level_id: string;
                        }> | undefined;
                    } | undefined;
                    wyze_metadata?: {
                        device_id: string;
                        device_name: string;
                        product_name: string;
                        product_type: string;
                        product_model: string;
                        device_info_model: string;
                    } | undefined;
                    tedee_metadata?: {
                        device_id: number;
                        serial_number: string;
                        device_name: string;
                        device_model: string;
                        bridge_id: number;
                        bridge_name: string;
                        keypad_id?: number | undefined;
                    } | undefined;
                }) & ({
                    _experimental_supported_code_from_access_codes_lengths?: (number[] | undefined) | undefined;
                    code_constraints?: (Array<{
                        constraint_type: 'no_zeros' | 'cannot_start_with_12' | 'no_triple_consecutive_ints' | 'cannot_specify_pin_code' | 'pin_code_matches_existing_set' | 'start_date_in_future' | 'no_ascending_or_descending_sequence' | 'at_least_three_unique_digits';
                    } | {
                        constraint_type: 'name_length';
                        min_length?: number | undefined;
                        max_length?: number | undefined;
                    }> | undefined) | undefined;
                    supported_code_lengths?: (number[] | undefined) | undefined;
                    max_active_codes_supported?: (number | undefined) | undefined;
                    supports_backup_access_code_pool?: (boolean | undefined) | undefined;
                    has_native_entry_events?: (boolean | undefined) | undefined;
                    locked?: (boolean | undefined) | undefined;
                    keypad_battery?: ({
                        level: number;
                    } | undefined) | undefined;
                    door_open?: (boolean | undefined) | undefined;
                } & ({
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                    min_heating_cooling_delta_celsius?: number | undefined;
                    min_heating_cooling_delta_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: false | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: false | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                }));
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            };
        };
    };
    '/locks/list': {
        route: '/locks/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            /** List all devices owned by this connected account */
            connected_account_id?: string | undefined;
            connected_account_ids?: string[] | undefined;
            connect_webview_id?: string | undefined;
            device_type?: (('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone')) | undefined;
            device_types?: Array<('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone')> | undefined;
            manufacturer?: ('akuvox' | 'august' | 'avigilon_alta' | 'brivo' | 'butterflymx' | 'doorking' | 'four_suites' | 'genie' | 'igloo' | 'keywe' | 'kwikset' | 'linear' | 'lockly' | 'nuki' | 'philia' | 'salto' | 'samsung' | 'schlage' | 'seam' | 'unknown' | 'wyze' | 'yale' | 'minut' | 'two_n' | 'ttlock' | 'nest' | 'igloohome' | 'ecobee' | 'hubitat' | 'controlbyweb' | 'smartthings' | 'dormakaba_oracode' | 'tedee' | 'honeywell_resideo') | undefined;
            device_ids?: string[] | undefined;
            limit?: number;
            created_before?: Date | undefined;
            user_identifier_key?: string | undefined;
            custom_metadata_has?: Record<string, string | boolean> | undefined;
            include_if?: Array<'can_remotely_unlock' | 'can_remotely_lock' | 'can_program_online_access_codes' | 'can_simulate_removal'> | undefined;
            exclude_if?: Array<'can_remotely_unlock' | 'can_remotely_lock' | 'can_program_online_access_codes' | 'can_simulate_removal'> | undefined;
        };
        formData: {};
        jsonResponse: {
            locks: Array<{
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Properties of the device. */
                properties: (({
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    appearance: {
                        /** Name of the device as seen from the provider API and application, not settable through Seam. */
                        name: string;
                    };
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                    /** Indicates whether the device has direct power. */
                    has_direct_power?: boolean | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Serial number of the device. */
                    serial_number?: string | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    /**
                            ---
                            deprecated: use model.accessory_keypad_supported
                            ---
                             */
                    supports_accessory_keypad?: boolean | undefined;
                    /**
                            ---
                            deprecated: use offline_access_codes_enabled
                            ---
                             */
                    supports_offline_access_codes?: boolean | undefined;
                } & {
                    assa_abloy_credential_service_metadata?: ({
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined) | undefined;
                }) & {
                    august_metadata?: {
                        lock_id: string;
                        lock_name: string;
                        house_name: string;
                        has_keypad: boolean;
                        keypad_battery_level?: string | undefined;
                        model?: string | undefined;
                        house_id?: string | undefined;
                    } | undefined;
                    avigilon_alta_metadata?: {
                        entry_name: string;
                        org_name: string;
                        zone_id: number;
                        zone_name: string;
                        site_id: number;
                        site_name: string;
                    } | undefined;
                    schlage_metadata?: {
                        device_id: string;
                        device_name: string;
                        access_code_length: number | null;
                        model?: string | undefined;
                    } | undefined;
                    smartthings_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                        location_id?: string | undefined;
                    } | undefined;
                    lockly_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                    } | undefined;
                    nuki_metadata?: {
                        device_id: string;
                        device_name: string;
                        keypad_battery_critical?: boolean | undefined;
                        keypad_paired?: boolean | undefined;
                        keypad_2_paired?: boolean | undefined;
                    } | undefined;
                    kwikset_metadata?: {
                        device_id: string;
                        device_name: string;
                        model_number: string;
                    } | undefined;
                    salto_metadata?: {
                        lock_id: string;
                        customer_reference: string;
                        lock_type: string;
                        battery_level: string;
                        locked_state: string;
                        model?: string | undefined;
                    } | undefined;
                    genie_metadata?: {
                        device_name: string;
                        door_name: string;
                    } | undefined;
                    brivo_metadata?: {
                        device_name: string;
                    } | undefined;
                    igloo_metadata?: {
                        device_id: string;
                        bridge_id: string;
                        model?: string | undefined;
                    } | undefined;
                    noiseaware_metadata?: {
                        device_model: 'indoor' | 'outdoor';
                        noise_level_nrs: number;
                        noise_level_decibel: number;
                        device_name: string;
                        device_id: string;
                    } | undefined;
                    minut_metadata?: {
                        device_id: string;
                        device_name: string;
                        latest_sensor_values: {
                            temperature: {
                                time: string;
                                value: number;
                            };
                            sound: {
                                time: string;
                                value: number;
                            };
                            humidity: {
                                time: string;
                                value: number;
                            };
                            pressure: {
                                time: string;
                                value: number;
                            };
                            accelerometer_z: {
                                time: string;
                                value: number;
                            };
                        };
                    } | undefined;
                    four_suites_metadata?: {
                        device_id: number;
                        device_name: string;
                        reclose_delay_in_seconds: number;
                    } | undefined;
                    two_n_metadata?: {
                        device_id: number;
                        device_name: string;
                    } | undefined;
                    controlbyweb_metadata?: {
                        device_id: string;
                        device_name: string;
                        relay_name: string | null;
                    } | undefined;
                    ttlock_metadata?: {
                        lock_id: number;
                        lock_alias: string;
                    } | undefined;
                    seam_bridge_metadata?: {
                        unlock_method?: ('bridge' | 'doorking') | undefined;
                        device_num: number;
                        name: string;
                    } | undefined;
                    igloohome_metadata?: {
                        device_id: string;
                        device_name: string;
                        bridge_id?: string | undefined;
                        bridge_name?: string | undefined;
                    } | undefined;
                    nest_metadata?: {
                        nest_device_id: string;
                        device_name: string;
                        custom_name: string;
                    } | undefined;
                    ecobee_metadata?: {
                        ecobee_device_id: string;
                        device_name: string;
                    } | undefined;
                    honeywell_resideo_metadata?: {
                        honeywell_resideo_device_id: string;
                        device_name: string;
                    } | undefined;
                    hubitat_metadata?: {
                        device_id: string;
                        device_name: string;
                        device_label: string;
                    } | undefined;
                    dormakaba_oracode_metadata?: {
                        door_id: number;
                        door_name: string;
                        device_id?: number | undefined;
                        site_id: number;
                        site_name: string;
                        iana_timezone?: string | undefined;
                        predefined_time_slots?: Array<{
                            name: string;
                            prefix: number;
                            check_in_time: string;
                            check_out_time: string;
                            is_24_hour: boolean;
                            is_biweekly_mode: boolean;
                            is_one_shot: boolean;
                            is_master: boolean;
                            ext_dormakaba_oracode_user_level_prefix: number;
                            dormakaba_oracode_user_level_id: string;
                        }> | undefined;
                    } | undefined;
                    wyze_metadata?: {
                        device_id: string;
                        device_name: string;
                        product_name: string;
                        product_type: string;
                        product_model: string;
                        device_info_model: string;
                    } | undefined;
                    tedee_metadata?: {
                        device_id: number;
                        serial_number: string;
                        device_name: string;
                        device_model: string;
                        bridge_id: number;
                        bridge_name: string;
                        keypad_id?: number | undefined;
                    } | undefined;
                }) & ({
                    _experimental_supported_code_from_access_codes_lengths?: (number[] | undefined) | undefined;
                    code_constraints?: (Array<{
                        constraint_type: 'no_zeros' | 'cannot_start_with_12' | 'no_triple_consecutive_ints' | 'cannot_specify_pin_code' | 'pin_code_matches_existing_set' | 'start_date_in_future' | 'no_ascending_or_descending_sequence' | 'at_least_three_unique_digits';
                    } | {
                        constraint_type: 'name_length';
                        min_length?: number | undefined;
                        max_length?: number | undefined;
                    }> | undefined) | undefined;
                    supported_code_lengths?: (number[] | undefined) | undefined;
                    max_active_codes_supported?: (number | undefined) | undefined;
                    supports_backup_access_code_pool?: (boolean | undefined) | undefined;
                    has_native_entry_events?: (boolean | undefined) | undefined;
                    locked?: (boolean | undefined) | undefined;
                    keypad_battery?: ({
                        level: number;
                    } | undefined) | undefined;
                    door_open?: (boolean | undefined) | undefined;
                } & ({
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                    min_heating_cooling_delta_celsius?: number | undefined;
                    min_heating_cooling_delta_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: false | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: false | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                }));
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            }>;
            devices: Array<{
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Properties of the device. */
                properties: (({
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    appearance: {
                        /** Name of the device as seen from the provider API and application, not settable through Seam. */
                        name: string;
                    };
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                    /** Indicates whether the device has direct power. */
                    has_direct_power?: boolean | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Serial number of the device. */
                    serial_number?: string | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    /**
                            ---
                            deprecated: use model.accessory_keypad_supported
                            ---
                             */
                    supports_accessory_keypad?: boolean | undefined;
                    /**
                            ---
                            deprecated: use offline_access_codes_enabled
                            ---
                             */
                    supports_offline_access_codes?: boolean | undefined;
                } & {
                    assa_abloy_credential_service_metadata?: ({
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined) | undefined;
                }) & {
                    august_metadata?: {
                        lock_id: string;
                        lock_name: string;
                        house_name: string;
                        has_keypad: boolean;
                        keypad_battery_level?: string | undefined;
                        model?: string | undefined;
                        house_id?: string | undefined;
                    } | undefined;
                    avigilon_alta_metadata?: {
                        entry_name: string;
                        org_name: string;
                        zone_id: number;
                        zone_name: string;
                        site_id: number;
                        site_name: string;
                    } | undefined;
                    schlage_metadata?: {
                        device_id: string;
                        device_name: string;
                        access_code_length: number | null;
                        model?: string | undefined;
                    } | undefined;
                    smartthings_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                        location_id?: string | undefined;
                    } | undefined;
                    lockly_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                    } | undefined;
                    nuki_metadata?: {
                        device_id: string;
                        device_name: string;
                        keypad_battery_critical?: boolean | undefined;
                        keypad_paired?: boolean | undefined;
                        keypad_2_paired?: boolean | undefined;
                    } | undefined;
                    kwikset_metadata?: {
                        device_id: string;
                        device_name: string;
                        model_number: string;
                    } | undefined;
                    salto_metadata?: {
                        lock_id: string;
                        customer_reference: string;
                        lock_type: string;
                        battery_level: string;
                        locked_state: string;
                        model?: string | undefined;
                    } | undefined;
                    genie_metadata?: {
                        device_name: string;
                        door_name: string;
                    } | undefined;
                    brivo_metadata?: {
                        device_name: string;
                    } | undefined;
                    igloo_metadata?: {
                        device_id: string;
                        bridge_id: string;
                        model?: string | undefined;
                    } | undefined;
                    noiseaware_metadata?: {
                        device_model: 'indoor' | 'outdoor';
                        noise_level_nrs: number;
                        noise_level_decibel: number;
                        device_name: string;
                        device_id: string;
                    } | undefined;
                    minut_metadata?: {
                        device_id: string;
                        device_name: string;
                        latest_sensor_values: {
                            temperature: {
                                time: string;
                                value: number;
                            };
                            sound: {
                                time: string;
                                value: number;
                            };
                            humidity: {
                                time: string;
                                value: number;
                            };
                            pressure: {
                                time: string;
                                value: number;
                            };
                            accelerometer_z: {
                                time: string;
                                value: number;
                            };
                        };
                    } | undefined;
                    four_suites_metadata?: {
                        device_id: number;
                        device_name: string;
                        reclose_delay_in_seconds: number;
                    } | undefined;
                    two_n_metadata?: {
                        device_id: number;
                        device_name: string;
                    } | undefined;
                    controlbyweb_metadata?: {
                        device_id: string;
                        device_name: string;
                        relay_name: string | null;
                    } | undefined;
                    ttlock_metadata?: {
                        lock_id: number;
                        lock_alias: string;
                    } | undefined;
                    seam_bridge_metadata?: {
                        unlock_method?: ('bridge' | 'doorking') | undefined;
                        device_num: number;
                        name: string;
                    } | undefined;
                    igloohome_metadata?: {
                        device_id: string;
                        device_name: string;
                        bridge_id?: string | undefined;
                        bridge_name?: string | undefined;
                    } | undefined;
                    nest_metadata?: {
                        nest_device_id: string;
                        device_name: string;
                        custom_name: string;
                    } | undefined;
                    ecobee_metadata?: {
                        ecobee_device_id: string;
                        device_name: string;
                    } | undefined;
                    honeywell_resideo_metadata?: {
                        honeywell_resideo_device_id: string;
                        device_name: string;
                    } | undefined;
                    hubitat_metadata?: {
                        device_id: string;
                        device_name: string;
                        device_label: string;
                    } | undefined;
                    dormakaba_oracode_metadata?: {
                        door_id: number;
                        door_name: string;
                        device_id?: number | undefined;
                        site_id: number;
                        site_name: string;
                        iana_timezone?: string | undefined;
                        predefined_time_slots?: Array<{
                            name: string;
                            prefix: number;
                            check_in_time: string;
                            check_out_time: string;
                            is_24_hour: boolean;
                            is_biweekly_mode: boolean;
                            is_one_shot: boolean;
                            is_master: boolean;
                            ext_dormakaba_oracode_user_level_prefix: number;
                            dormakaba_oracode_user_level_id: string;
                        }> | undefined;
                    } | undefined;
                    wyze_metadata?: {
                        device_id: string;
                        device_name: string;
                        product_name: string;
                        product_type: string;
                        product_model: string;
                        device_info_model: string;
                    } | undefined;
                    tedee_metadata?: {
                        device_id: number;
                        serial_number: string;
                        device_name: string;
                        device_model: string;
                        bridge_id: number;
                        bridge_name: string;
                        keypad_id?: number | undefined;
                    } | undefined;
                }) & ({
                    _experimental_supported_code_from_access_codes_lengths?: (number[] | undefined) | undefined;
                    code_constraints?: (Array<{
                        constraint_type: 'no_zeros' | 'cannot_start_with_12' | 'no_triple_consecutive_ints' | 'cannot_specify_pin_code' | 'pin_code_matches_existing_set' | 'start_date_in_future' | 'no_ascending_or_descending_sequence' | 'at_least_three_unique_digits';
                    } | {
                        constraint_type: 'name_length';
                        min_length?: number | undefined;
                        max_length?: number | undefined;
                    }> | undefined) | undefined;
                    supported_code_lengths?: (number[] | undefined) | undefined;
                    max_active_codes_supported?: (number | undefined) | undefined;
                    supports_backup_access_code_pool?: (boolean | undefined) | undefined;
                    has_native_entry_events?: (boolean | undefined) | undefined;
                    locked?: (boolean | undefined) | undefined;
                    keypad_battery?: ({
                        level: number;
                    } | undefined) | undefined;
                    door_open?: (boolean | undefined) | undefined;
                } & ({
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                    min_heating_cooling_delta_celsius?: number | undefined;
                    min_heating_cooling_delta_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: false | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: false | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                }));
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            }>;
        };
    };
    '/locks/lock_door': {
        route: '/locks/lock_door';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            sync?: boolean;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/locks/unlock_door': {
        route: '/locks/unlock_door';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            sync?: boolean;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/networks/get': {
        route: '/networks/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            network_id: string;
        };
        formData: {};
        jsonResponse: {
            network: {
                network_id: string;
                workspace_id: string;
                display_name: string;
                created_at: string;
            };
        };
    };
    '/networks/list': {
        route: '/networks/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {};
        formData: {};
        jsonResponse: {
            networks: Array<{
                network_id: string;
                workspace_id: string;
                display_name: string;
                created_at: string;
            }>;
        };
    };
    '/noise_sensors/noise_thresholds/create': {
        route: '/noise_sensors/noise_thresholds/create';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            sync?: boolean;
            name?: string | undefined;
            starts_daily_at: string;
            ends_daily_at: string;
            noise_threshold_decibels?: number | undefined;
            noise_threshold_nrs?: number | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
            noise_threshold: {
                noise_threshold_id: string;
                device_id: string;
                name: string;
                noise_threshold_nrs?: number | undefined;
                starts_daily_at: string;
                ends_daily_at: string;
                noise_threshold_decibels: number;
            };
        };
    };
    '/noise_sensors/noise_thresholds/delete': {
        route: '/noise_sensors/noise_thresholds/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {
            noise_threshold_id: string;
            device_id: string;
            sync?: boolean;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/noise_sensors/noise_thresholds/get': {
        route: '/noise_sensors/noise_thresholds/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            noise_threshold_id: string;
        };
        formData: {};
        jsonResponse: {
            noise_threshold: {
                noise_threshold_id: string;
                device_id: string;
                name: string;
                noise_threshold_nrs?: number | undefined;
                starts_daily_at: string;
                ends_daily_at: string;
                noise_threshold_decibels: number;
            };
        };
    };
    '/noise_sensors/noise_thresholds/list': {
        route: '/noise_sensors/noise_thresholds/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id: string;
            is_programmed?: boolean | undefined;
        };
        formData: {};
        jsonResponse: {
            noise_thresholds: Array<{
                noise_threshold_id: string;
                device_id: string;
                name: string;
                noise_threshold_nrs?: number | undefined;
                starts_daily_at: string;
                ends_daily_at: string;
                noise_threshold_decibels: number;
            }>;
        };
    };
    '/noise_sensors/noise_thresholds/update': {
        route: '/noise_sensors/noise_thresholds/update';
        method: 'PATCH' | 'POST' | 'PUT';
        queryParams: {};
        jsonBody: {
            noise_threshold_id: string;
            device_id: string;
            sync?: boolean;
            name?: string | undefined;
            starts_daily_at?: string | undefined;
            ends_daily_at?: string | undefined;
            noise_threshold_decibels?: number | undefined;
            noise_threshold_nrs?: number | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/noise_sensors/simulate/trigger_noise_threshold': {
        route: '/noise_sensors/simulate/trigger_noise_threshold';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/phones/deactivate': {
        route: '/phones/deactivate';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/phones/list': {
        route: '/phones/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            owner_user_identity_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            phones: Array<{
                /** Unique identifier for the device. */
                device_id: string;
                device_type: 'android_phone' | 'ios_phone';
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                properties: {
                    assa_abloy_credential_service_metadata?: {
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined;
                };
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            }>;
        };
    };
    '/phones/simulate/create_sandbox_phone': {
        route: '/phones/simulate/create_sandbox_phone';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {
            custom_sdk_installation_id?: string | undefined;
            user_identity_id: string;
            phone_metadata?: {
                operating_system?: 'android' | 'ios';
                os_version?: string;
                device_manufacturer?: string;
                device_model?: string;
            };
            assa_abloy_metadata?: {
                ble_capability?: boolean;
                hce_capability?: boolean;
                nfc_capability?: boolean;
                application_version?: string;
                seos_applet_version?: string;
                seos_tsm_endpoint_id?: number;
            };
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            phone: {
                /** Unique identifier for the device. */
                device_id: string;
                device_type: 'android_phone' | 'ios_phone';
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                properties: {
                    assa_abloy_credential_service_metadata?: {
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined;
                };
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            };
        };
    };
    '/thermostats/climate_setting_schedules/create': {
        route: '/thermostats/climate_setting_schedules/create';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            schedule_type?: 'time_bound';
            device_id: string;
            name?: string | undefined;
            schedule_starts_at: string;
            schedule_ends_at: string;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
            cooling_set_point_celsius?: (number | undefined) | undefined;
            heating_set_point_celsius?: (number | undefined) | undefined;
            cooling_set_point_fahrenheit?: (number | undefined) | undefined;
            heating_set_point_fahrenheit?: (number | undefined) | undefined;
            manual_override_allowed?: boolean | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            climate_setting_schedule: {
                climate_setting_schedule_id: string;
                schedule_type: 'time_bound';
                device_id: string;
                name?: string | undefined;
                schedule_starts_at: string;
                schedule_ends_at: string;
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                automatic_heating_enabled?: boolean | undefined;
                automatic_cooling_enabled?: boolean | undefined;
                hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                cooling_set_point_celsius?: (number | undefined) | undefined;
                heating_set_point_celsius?: (number | undefined) | undefined;
                cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                heating_set_point_fahrenheit?: (number | undefined) | undefined;
                manual_override_allowed?: boolean | undefined;
            };
        };
    };
    '/thermostats/climate_setting_schedules/delete': {
        route: '/thermostats/climate_setting_schedules/delete';
        method: 'DELETE' | 'POST' | 'PUT';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            climate_setting_schedule_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/thermostats/climate_setting_schedules/get': {
        route: '/thermostats/climate_setting_schedules/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            climate_setting_schedule_id?: string | undefined;
            device_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            climate_setting_schedule: {
                climate_setting_schedule_id: string;
                schedule_type: 'time_bound';
                device_id: string;
                name?: string | undefined;
                schedule_starts_at: string;
                schedule_ends_at: string;
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                automatic_heating_enabled?: boolean | undefined;
                automatic_cooling_enabled?: boolean | undefined;
                hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                cooling_set_point_celsius?: (number | undefined) | undefined;
                heating_set_point_celsius?: (number | undefined) | undefined;
                cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                heating_set_point_fahrenheit?: (number | undefined) | undefined;
                manual_override_allowed?: boolean | undefined;
            };
        };
    };
    '/thermostats/climate_setting_schedules/list': {
        route: '/thermostats/climate_setting_schedules/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id: string;
            user_identifier_key?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            climate_setting_schedules: Array<{
                climate_setting_schedule_id: string;
                schedule_type: 'time_bound';
                device_id: string;
                name?: string | undefined;
                schedule_starts_at: string;
                schedule_ends_at: string;
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                automatic_heating_enabled?: boolean | undefined;
                automatic_cooling_enabled?: boolean | undefined;
                hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                cooling_set_point_celsius?: (number | undefined) | undefined;
                heating_set_point_celsius?: (number | undefined) | undefined;
                cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                heating_set_point_fahrenheit?: (number | undefined) | undefined;
                manual_override_allowed?: boolean | undefined;
            }>;
        };
    };
    '/thermostats/climate_setting_schedules/update': {
        route: '/thermostats/climate_setting_schedules/update';
        method: 'PATCH' | 'POST' | 'PUT';
        queryParams: {};
        jsonBody: {
            climate_setting_schedule_id: string;
            schedule_type?: 'time_bound';
            name?: string | undefined;
            schedule_starts_at?: string | undefined;
            schedule_ends_at?: string | undefined;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
            cooling_set_point_celsius?: (number | undefined) | undefined;
            heating_set_point_celsius?: (number | undefined) | undefined;
            cooling_set_point_fahrenheit?: (number | undefined) | undefined;
            heating_set_point_fahrenheit?: (number | undefined) | undefined;
            manual_override_allowed?: boolean | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            climate_setting_schedule: {
                climate_setting_schedule_id: string;
                schedule_type: 'time_bound';
                device_id: string;
                name?: string | undefined;
                schedule_starts_at: string;
                schedule_ends_at: string;
                created_at: string;
                /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                errors?: any;
                automatic_heating_enabled?: boolean | undefined;
                automatic_cooling_enabled?: boolean | undefined;
                hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                cooling_set_point_celsius?: (number | undefined) | undefined;
                heating_set_point_celsius?: (number | undefined) | undefined;
                cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                heating_set_point_fahrenheit?: (number | undefined) | undefined;
                manual_override_allowed?: boolean | undefined;
            };
        };
    };
    '/thermostats/cool': {
        route: '/thermostats/cool';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            cooling_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            sync?: boolean;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/thermostats/get': {
        route: '/thermostats/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            device_id?: string | undefined;
            name?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            thermostat: {
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Properties of the device. */
                properties: (({
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    appearance: {
                        /** Name of the device as seen from the provider API and application, not settable through Seam. */
                        name: string;
                    };
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                    /** Indicates whether the device has direct power. */
                    has_direct_power?: boolean | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Serial number of the device. */
                    serial_number?: string | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    /**
                            ---
                            deprecated: use model.accessory_keypad_supported
                            ---
                             */
                    supports_accessory_keypad?: boolean | undefined;
                    /**
                            ---
                            deprecated: use offline_access_codes_enabled
                            ---
                             */
                    supports_offline_access_codes?: boolean | undefined;
                } & {
                    assa_abloy_credential_service_metadata?: ({
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined) | undefined;
                }) & {
                    august_metadata?: {
                        lock_id: string;
                        lock_name: string;
                        house_name: string;
                        has_keypad: boolean;
                        keypad_battery_level?: string | undefined;
                        model?: string | undefined;
                        house_id?: string | undefined;
                    } | undefined;
                    avigilon_alta_metadata?: {
                        entry_name: string;
                        org_name: string;
                        zone_id: number;
                        zone_name: string;
                        site_id: number;
                        site_name: string;
                    } | undefined;
                    schlage_metadata?: {
                        device_id: string;
                        device_name: string;
                        access_code_length: number | null;
                        model?: string | undefined;
                    } | undefined;
                    smartthings_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                        location_id?: string | undefined;
                    } | undefined;
                    lockly_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                    } | undefined;
                    nuki_metadata?: {
                        device_id: string;
                        device_name: string;
                        keypad_battery_critical?: boolean | undefined;
                        keypad_paired?: boolean | undefined;
                        keypad_2_paired?: boolean | undefined;
                    } | undefined;
                    kwikset_metadata?: {
                        device_id: string;
                        device_name: string;
                        model_number: string;
                    } | undefined;
                    salto_metadata?: {
                        lock_id: string;
                        customer_reference: string;
                        lock_type: string;
                        battery_level: string;
                        locked_state: string;
                        model?: string | undefined;
                    } | undefined;
                    genie_metadata?: {
                        device_name: string;
                        door_name: string;
                    } | undefined;
                    brivo_metadata?: {
                        device_name: string;
                    } | undefined;
                    igloo_metadata?: {
                        device_id: string;
                        bridge_id: string;
                        model?: string | undefined;
                    } | undefined;
                    noiseaware_metadata?: {
                        device_model: 'indoor' | 'outdoor';
                        noise_level_nrs: number;
                        noise_level_decibel: number;
                        device_name: string;
                        device_id: string;
                    } | undefined;
                    minut_metadata?: {
                        device_id: string;
                        device_name: string;
                        latest_sensor_values: {
                            temperature: {
                                time: string;
                                value: number;
                            };
                            sound: {
                                time: string;
                                value: number;
                            };
                            humidity: {
                                time: string;
                                value: number;
                            };
                            pressure: {
                                time: string;
                                value: number;
                            };
                            accelerometer_z: {
                                time: string;
                                value: number;
                            };
                        };
                    } | undefined;
                    four_suites_metadata?: {
                        device_id: number;
                        device_name: string;
                        reclose_delay_in_seconds: number;
                    } | undefined;
                    two_n_metadata?: {
                        device_id: number;
                        device_name: string;
                    } | undefined;
                    controlbyweb_metadata?: {
                        device_id: string;
                        device_name: string;
                        relay_name: string | null;
                    } | undefined;
                    ttlock_metadata?: {
                        lock_id: number;
                        lock_alias: string;
                    } | undefined;
                    seam_bridge_metadata?: {
                        unlock_method?: ('bridge' | 'doorking') | undefined;
                        device_num: number;
                        name: string;
                    } | undefined;
                    igloohome_metadata?: {
                        device_id: string;
                        device_name: string;
                        bridge_id?: string | undefined;
                        bridge_name?: string | undefined;
                    } | undefined;
                    nest_metadata?: {
                        nest_device_id: string;
                        device_name: string;
                        custom_name: string;
                    } | undefined;
                    ecobee_metadata?: {
                        ecobee_device_id: string;
                        device_name: string;
                    } | undefined;
                    honeywell_resideo_metadata?: {
                        honeywell_resideo_device_id: string;
                        device_name: string;
                    } | undefined;
                    hubitat_metadata?: {
                        device_id: string;
                        device_name: string;
                        device_label: string;
                    } | undefined;
                    dormakaba_oracode_metadata?: {
                        door_id: number;
                        door_name: string;
                        device_id?: number | undefined;
                        site_id: number;
                        site_name: string;
                        iana_timezone?: string | undefined;
                        predefined_time_slots?: Array<{
                            name: string;
                            prefix: number;
                            check_in_time: string;
                            check_out_time: string;
                            is_24_hour: boolean;
                            is_biweekly_mode: boolean;
                            is_one_shot: boolean;
                            is_master: boolean;
                            ext_dormakaba_oracode_user_level_prefix: number;
                            dormakaba_oracode_user_level_id: string;
                        }> | undefined;
                    } | undefined;
                    wyze_metadata?: {
                        device_id: string;
                        device_name: string;
                        product_name: string;
                        product_type: string;
                        product_model: string;
                        device_info_model: string;
                    } | undefined;
                    tedee_metadata?: {
                        device_id: number;
                        serial_number: string;
                        device_name: string;
                        device_model: string;
                        bridge_id: number;
                        bridge_name: string;
                        keypad_id?: number | undefined;
                    } | undefined;
                }) & ({
                    _experimental_supported_code_from_access_codes_lengths?: (number[] | undefined) | undefined;
                    code_constraints?: (Array<{
                        constraint_type: 'no_zeros' | 'cannot_start_with_12' | 'no_triple_consecutive_ints' | 'cannot_specify_pin_code' | 'pin_code_matches_existing_set' | 'start_date_in_future' | 'no_ascending_or_descending_sequence' | 'at_least_three_unique_digits';
                    } | {
                        constraint_type: 'name_length';
                        min_length?: number | undefined;
                        max_length?: number | undefined;
                    }> | undefined) | undefined;
                    supported_code_lengths?: (number[] | undefined) | undefined;
                    max_active_codes_supported?: (number | undefined) | undefined;
                    supports_backup_access_code_pool?: (boolean | undefined) | undefined;
                    has_native_entry_events?: (boolean | undefined) | undefined;
                    locked?: (boolean | undefined) | undefined;
                    keypad_battery?: ({
                        level: number;
                    } | undefined) | undefined;
                    door_open?: (boolean | undefined) | undefined;
                } & ({
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                    min_heating_cooling_delta_celsius?: number | undefined;
                    min_heating_cooling_delta_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: false | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: false | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                }));
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            };
        };
    };
    '/thermostats/heat': {
        route: '/thermostats/heat';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            heating_set_point_celsius?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            sync?: boolean;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/thermostats/heat_cool': {
        route: '/thermostats/heat_cool';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            heating_set_point_celsius?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            cooling_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            sync?: boolean;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/thermostats/list': {
        route: '/thermostats/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            /** List all devices owned by this connected account */
            connected_account_id?: string | undefined;
            connected_account_ids?: string[] | undefined;
            connect_webview_id?: string | undefined;
            device_type?: (('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone')) | undefined;
            device_types?: Array<('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone')> | undefined;
            manufacturer?: ('akuvox' | 'august' | 'avigilon_alta' | 'brivo' | 'butterflymx' | 'doorking' | 'four_suites' | 'genie' | 'igloo' | 'keywe' | 'kwikset' | 'linear' | 'lockly' | 'nuki' | 'philia' | 'salto' | 'samsung' | 'schlage' | 'seam' | 'unknown' | 'wyze' | 'yale' | 'minut' | 'two_n' | 'ttlock' | 'nest' | 'igloohome' | 'ecobee' | 'hubitat' | 'controlbyweb' | 'smartthings' | 'dormakaba_oracode' | 'tedee' | 'honeywell_resideo') | undefined;
            device_ids?: string[] | undefined;
            limit?: number;
            created_before?: Date | undefined;
            user_identifier_key?: string | undefined;
            custom_metadata_has?: Record<string, string | boolean> | undefined;
            include_if?: Array<'can_remotely_unlock' | 'can_remotely_lock' | 'can_program_online_access_codes' | 'can_simulate_removal'> | undefined;
            exclude_if?: Array<'can_remotely_unlock' | 'can_remotely_lock' | 'can_program_online_access_codes' | 'can_simulate_removal'> | undefined;
        };
        formData: {};
        jsonResponse: {
            thermostats: Array<{
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Properties of the device. */
                properties: (({
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    appearance: {
                        /** Name of the device as seen from the provider API and application, not settable through Seam. */
                        name: string;
                    };
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                    /** Indicates whether the device has direct power. */
                    has_direct_power?: boolean | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Serial number of the device. */
                    serial_number?: string | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    /**
                            ---
                            deprecated: use model.accessory_keypad_supported
                            ---
                             */
                    supports_accessory_keypad?: boolean | undefined;
                    /**
                            ---
                            deprecated: use offline_access_codes_enabled
                            ---
                             */
                    supports_offline_access_codes?: boolean | undefined;
                } & {
                    assa_abloy_credential_service_metadata?: ({
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined) | undefined;
                }) & {
                    august_metadata?: {
                        lock_id: string;
                        lock_name: string;
                        house_name: string;
                        has_keypad: boolean;
                        keypad_battery_level?: string | undefined;
                        model?: string | undefined;
                        house_id?: string | undefined;
                    } | undefined;
                    avigilon_alta_metadata?: {
                        entry_name: string;
                        org_name: string;
                        zone_id: number;
                        zone_name: string;
                        site_id: number;
                        site_name: string;
                    } | undefined;
                    schlage_metadata?: {
                        device_id: string;
                        device_name: string;
                        access_code_length: number | null;
                        model?: string | undefined;
                    } | undefined;
                    smartthings_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                        location_id?: string | undefined;
                    } | undefined;
                    lockly_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                    } | undefined;
                    nuki_metadata?: {
                        device_id: string;
                        device_name: string;
                        keypad_battery_critical?: boolean | undefined;
                        keypad_paired?: boolean | undefined;
                        keypad_2_paired?: boolean | undefined;
                    } | undefined;
                    kwikset_metadata?: {
                        device_id: string;
                        device_name: string;
                        model_number: string;
                    } | undefined;
                    salto_metadata?: {
                        lock_id: string;
                        customer_reference: string;
                        lock_type: string;
                        battery_level: string;
                        locked_state: string;
                        model?: string | undefined;
                    } | undefined;
                    genie_metadata?: {
                        device_name: string;
                        door_name: string;
                    } | undefined;
                    brivo_metadata?: {
                        device_name: string;
                    } | undefined;
                    igloo_metadata?: {
                        device_id: string;
                        bridge_id: string;
                        model?: string | undefined;
                    } | undefined;
                    noiseaware_metadata?: {
                        device_model: 'indoor' | 'outdoor';
                        noise_level_nrs: number;
                        noise_level_decibel: number;
                        device_name: string;
                        device_id: string;
                    } | undefined;
                    minut_metadata?: {
                        device_id: string;
                        device_name: string;
                        latest_sensor_values: {
                            temperature: {
                                time: string;
                                value: number;
                            };
                            sound: {
                                time: string;
                                value: number;
                            };
                            humidity: {
                                time: string;
                                value: number;
                            };
                            pressure: {
                                time: string;
                                value: number;
                            };
                            accelerometer_z: {
                                time: string;
                                value: number;
                            };
                        };
                    } | undefined;
                    four_suites_metadata?: {
                        device_id: number;
                        device_name: string;
                        reclose_delay_in_seconds: number;
                    } | undefined;
                    two_n_metadata?: {
                        device_id: number;
                        device_name: string;
                    } | undefined;
                    controlbyweb_metadata?: {
                        device_id: string;
                        device_name: string;
                        relay_name: string | null;
                    } | undefined;
                    ttlock_metadata?: {
                        lock_id: number;
                        lock_alias: string;
                    } | undefined;
                    seam_bridge_metadata?: {
                        unlock_method?: ('bridge' | 'doorking') | undefined;
                        device_num: number;
                        name: string;
                    } | undefined;
                    igloohome_metadata?: {
                        device_id: string;
                        device_name: string;
                        bridge_id?: string | undefined;
                        bridge_name?: string | undefined;
                    } | undefined;
                    nest_metadata?: {
                        nest_device_id: string;
                        device_name: string;
                        custom_name: string;
                    } | undefined;
                    ecobee_metadata?: {
                        ecobee_device_id: string;
                        device_name: string;
                    } | undefined;
                    honeywell_resideo_metadata?: {
                        honeywell_resideo_device_id: string;
                        device_name: string;
                    } | undefined;
                    hubitat_metadata?: {
                        device_id: string;
                        device_name: string;
                        device_label: string;
                    } | undefined;
                    dormakaba_oracode_metadata?: {
                        door_id: number;
                        door_name: string;
                        device_id?: number | undefined;
                        site_id: number;
                        site_name: string;
                        iana_timezone?: string | undefined;
                        predefined_time_slots?: Array<{
                            name: string;
                            prefix: number;
                            check_in_time: string;
                            check_out_time: string;
                            is_24_hour: boolean;
                            is_biweekly_mode: boolean;
                            is_one_shot: boolean;
                            is_master: boolean;
                            ext_dormakaba_oracode_user_level_prefix: number;
                            dormakaba_oracode_user_level_id: string;
                        }> | undefined;
                    } | undefined;
                    wyze_metadata?: {
                        device_id: string;
                        device_name: string;
                        product_name: string;
                        product_type: string;
                        product_model: string;
                        device_info_model: string;
                    } | undefined;
                    tedee_metadata?: {
                        device_id: number;
                        serial_number: string;
                        device_name: string;
                        device_model: string;
                        bridge_id: number;
                        bridge_name: string;
                        keypad_id?: number | undefined;
                    } | undefined;
                }) & ({
                    _experimental_supported_code_from_access_codes_lengths?: (number[] | undefined) | undefined;
                    code_constraints?: (Array<{
                        constraint_type: 'no_zeros' | 'cannot_start_with_12' | 'no_triple_consecutive_ints' | 'cannot_specify_pin_code' | 'pin_code_matches_existing_set' | 'start_date_in_future' | 'no_ascending_or_descending_sequence' | 'at_least_three_unique_digits';
                    } | {
                        constraint_type: 'name_length';
                        min_length?: number | undefined;
                        max_length?: number | undefined;
                    }> | undefined) | undefined;
                    supported_code_lengths?: (number[] | undefined) | undefined;
                    max_active_codes_supported?: (number | undefined) | undefined;
                    supports_backup_access_code_pool?: (boolean | undefined) | undefined;
                    has_native_entry_events?: (boolean | undefined) | undefined;
                    locked?: (boolean | undefined) | undefined;
                    keypad_battery?: ({
                        level: number;
                    } | undefined) | undefined;
                    door_open?: (boolean | undefined) | undefined;
                } & ({
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                    min_heating_cooling_delta_celsius?: number | undefined;
                    min_heating_cooling_delta_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: false | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: false | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                }));
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            }>;
        };
    };
    '/thermostats/off': {
        route: '/thermostats/off';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            sync?: boolean;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/thermostats/set_fan_mode': {
        route: '/thermostats/set_fan_mode';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            fan_mode?: ('auto' | 'on') | undefined;
            fan_mode_setting?: ('auto' | 'on') | undefined;
            sync?: boolean;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
    '/thermostats/update': {
        route: '/thermostats/update';
        method: 'PATCH' | 'POST';
        queryParams: {};
        jsonBody: {
            device_id: string;
            default_climate_setting: {
                automatic_heating_enabled?: boolean | undefined;
                automatic_cooling_enabled?: boolean | undefined;
                hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                cooling_set_point_celsius?: (number | undefined) | undefined;
                heating_set_point_celsius?: (number | undefined) | undefined;
                cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                heating_set_point_fahrenheit?: (number | undefined) | undefined;
                manual_override_allowed?: boolean | undefined;
            };
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/user_identities/add_acs_user': {
        route: '/user_identities/add_acs_user';
        method: 'POST' | 'PUT';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
            acs_user_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/user_identities/create': {
        route: '/user_identities/create';
        method: 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_key?: (string | null) | undefined;
            email_address?: (string | null) | undefined;
            phone_number?: (string | null) | undefined;
            full_name?: (string | null) | undefined;
        };
        formData: {};
        jsonResponse: {
            user_identity: {
                user_identity_id: string;
                user_identity_key: string | null;
                email_address: string | null;
                phone_number: string | null;
                display_name: string;
                full_name: string | null;
                created_at: string;
                workspace_id: string;
            };
        };
    };
    '/user_identities/delete': {
        route: '/user_identities/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/user_identities/enrollment_automations/delete': {
        route: '/user_identities/enrollment_automations/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            enrollment_automation_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/user_identities/enrollment_automations/get': {
        route: '/user_identities/enrollment_automations/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            enrollment_automation_id: string;
        };
        formData: {};
        jsonResponse: {
            enrollment_automation: {
                credential_manager_acs_system_id: string;
                user_identity_id: string;
                created_at: string;
                workspace_id: string;
                enrollment_automation_id: string;
            };
        };
    };
    '/user_identities/enrollment_automations/launch': {
        route: '/user_identities/enrollment_automations/launch';
        method: 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
            credential_manager_acs_system_id: string;
            acs_credential_pool_id?: string | undefined;
            create_credential_manager_user?: boolean | undefined;
            credential_manager_acs_user_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            enrollment_automation: {
                acs_credential_provisioning_automation_id: string;
                credential_manager_acs_system_id: string;
                user_identity_id: string;
                created_at: string;
                workspace_id: string;
                enrollment_automation_id: string;
            };
        };
    };
    '/user_identities/enrollment_automations/list': {
        route: '/user_identities/enrollment_automations/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
        };
        formData: {};
        jsonResponse: {
            enrollment_automations: Array<{
                credential_manager_acs_system_id: string;
                user_identity_id: string;
                created_at: string;
                workspace_id: string;
                enrollment_automation_id: string;
            }>;
        };
    };
    '/user_identities/get': {
        route: '/user_identities/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
        } | {
            user_identity_key: string;
        };
        formData: {};
        jsonResponse: {
            user_identity: {
                user_identity_id: string;
                user_identity_key: string | null;
                email_address: string | null;
                phone_number: string | null;
                display_name: string;
                full_name: string | null;
                created_at: string;
                workspace_id: string;
            };
        };
    };
    '/user_identities/grant_access_to_device': {
        route: '/user_identities/grant_access_to_device';
        method: 'PUT' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
            device_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/user_identities/list': {
        route: '/user_identities/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            credential_manager_acs_system_id?: string | undefined;
        };
        formData: {};
        jsonResponse: {
            user_identities: Array<{
                user_identity_id: string;
                user_identity_key: string | null;
                email_address: string | null;
                phone_number: string | null;
                display_name: string;
                full_name: string | null;
                created_at: string;
                workspace_id: string;
            }>;
        };
    };
    '/user_identities/list_accessible_devices': {
        route: '/user_identities/list_accessible_devices';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
        };
        formData: {};
        jsonResponse: {
            accessible_devices: Array<{
                /** Unique identifier for the device. */
                device_id: string;
                /** Type of the device. */
                device_type: ('akuvox_lock' | 'august_lock' | 'brivo_access_point' | 'butterflymx_panel' | 'avigilon_alta_entry' | 'doorking_lock' | 'genie_door' | 'igloo_lock' | 'linear_lock' | 'lockly_lock' | 'kwikset_lock' | 'nuki_lock' | 'salto_lock' | 'schlage_lock' | 'seam_relay' | 'smartthings_lock' | 'wyze_lock' | 'yale_lock' | 'two_n_intercom' | 'controlbyweb_device' | 'ttlock_lock' | 'igloohome_lock' | 'hubitat_lock' | 'four_suites_door' | 'dormakaba_oracode_door' | 'tedee_lock') | ('noiseaware_activity_zone' | 'minut_sensor') | ('ecobee_thermostat' | 'nest_thermostat' | 'honeywell_resideo_thermostat') | ('ios_phone' | 'android_phone');
                /** Optional nickname to describe the device, settable through Seam */
                nickname?: string | undefined;
                /** Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices. */
                display_name: string;
                /** Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health. */
                capabilities_supported: Array<'access_code' | 'lock' | 'noise_detection' | 'thermostat' | 'battery' | 'phone'>;
                /** Properties of the device. */
                properties: (({
                    /** Indicates whether the device is online. */
                    online: boolean;
                    /**
                            ---
                            deprecated: use device.display_name instead
                            ---
                            Name of the device.
                             */
                    name: string;
                    /** Represents the accessory keypad state. */
                    accessory_keypad?: {
                        /** Indicates if the accessory_keypad is connected to the device. */
                        is_connected: boolean;
                        /** Indicates if the keypad battery properties. */
                        battery?: {
                            level: number;
                        } | undefined;
                    } | undefined;
                    appearance: {
                        /** Name of the device as seen from the provider API and application, not settable through Seam. */
                        name: string;
                    };
                    model: {
                        /** Indicates whether the device can connect a accessory keypad. */
                        can_connect_accessory_keypad?: boolean | undefined;
                        /** Display name of the device model. */
                        display_name: string;
                        /** Display name that corresponds to the manufacturer-specific terminology for the device. */
                        manufacturer_display_name: string;
                        /** Indicates whether the device has a built in accessory keypad. */
                        has_built_in_keypad?: boolean | undefined;
                        /** Indicates whether the device supports offline access codes. */
                        offline_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports online access codes. */
                        online_access_codes_supported?: boolean | undefined;
                        /** Indicates whether the device supports an accessory keypad. */
                        accessory_keypad_supported?: boolean | undefined;
                    };
                    /** Indicates whether the device has direct power. */
                    has_direct_power?: boolean | undefined;
                    /** Indicates the battery level of the device as a decimal value between 0 and 1, inclusive. */
                    battery_level?: number | undefined;
                    /** Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage. */
                    battery?: {
                        level: number;
                        status: 'critical' | 'low' | 'good' | 'full';
                    } | undefined;
                    /** Manufacturer of the device. */
                    manufacturer?: string | undefined;
                    /** Image URL for the device. */
                    image_url?: string | undefined;
                    /** Alt text for the device image. */
                    image_alt_text?: string | undefined;
                    /** Serial number of the device. */
                    serial_number?: string | undefined;
                    /** Indicates whether it is currently possible to use online access codes for the device. */
                    online_access_codes_enabled?: boolean | undefined;
                    /** Indicates whether it is currently possible to use offline access codes for the device. */
                    offline_access_codes_enabled?: boolean | undefined;
                    /**
                            ---
                            deprecated: use model.accessory_keypad_supported
                            ---
                             */
                    supports_accessory_keypad?: boolean | undefined;
                    /**
                            ---
                            deprecated: use offline_access_codes_enabled
                            ---
                             */
                    supports_offline_access_codes?: boolean | undefined;
                } & {
                    assa_abloy_credential_service_metadata?: ({
                        has_active_endpoint: boolean;
                        endpoints: Array<{
                            endpoint_id: string;
                            is_active: boolean;
                        }>;
                    } | undefined) | undefined;
                }) & {
                    august_metadata?: {
                        lock_id: string;
                        lock_name: string;
                        house_name: string;
                        has_keypad: boolean;
                        keypad_battery_level?: string | undefined;
                        model?: string | undefined;
                        house_id?: string | undefined;
                    } | undefined;
                    avigilon_alta_metadata?: {
                        entry_name: string;
                        org_name: string;
                        zone_id: number;
                        zone_name: string;
                        site_id: number;
                        site_name: string;
                    } | undefined;
                    schlage_metadata?: {
                        device_id: string;
                        device_name: string;
                        access_code_length: number | null;
                        model?: string | undefined;
                    } | undefined;
                    smartthings_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                        location_id?: string | undefined;
                    } | undefined;
                    lockly_metadata?: {
                        device_id: string;
                        device_name: string;
                        model?: string | undefined;
                    } | undefined;
                    nuki_metadata?: {
                        device_id: string;
                        device_name: string;
                        keypad_battery_critical?: boolean | undefined;
                        keypad_paired?: boolean | undefined;
                        keypad_2_paired?: boolean | undefined;
                    } | undefined;
                    kwikset_metadata?: {
                        device_id: string;
                        device_name: string;
                        model_number: string;
                    } | undefined;
                    salto_metadata?: {
                        lock_id: string;
                        customer_reference: string;
                        lock_type: string;
                        battery_level: string;
                        locked_state: string;
                        model?: string | undefined;
                    } | undefined;
                    genie_metadata?: {
                        device_name: string;
                        door_name: string;
                    } | undefined;
                    brivo_metadata?: {
                        device_name: string;
                    } | undefined;
                    igloo_metadata?: {
                        device_id: string;
                        bridge_id: string;
                        model?: string | undefined;
                    } | undefined;
                    noiseaware_metadata?: {
                        device_model: 'indoor' | 'outdoor';
                        noise_level_nrs: number;
                        noise_level_decibel: number;
                        device_name: string;
                        device_id: string;
                    } | undefined;
                    minut_metadata?: {
                        device_id: string;
                        device_name: string;
                        latest_sensor_values: {
                            temperature: {
                                time: string;
                                value: number;
                            };
                            sound: {
                                time: string;
                                value: number;
                            };
                            humidity: {
                                time: string;
                                value: number;
                            };
                            pressure: {
                                time: string;
                                value: number;
                            };
                            accelerometer_z: {
                                time: string;
                                value: number;
                            };
                        };
                    } | undefined;
                    four_suites_metadata?: {
                        device_id: number;
                        device_name: string;
                        reclose_delay_in_seconds: number;
                    } | undefined;
                    two_n_metadata?: {
                        device_id: number;
                        device_name: string;
                    } | undefined;
                    controlbyweb_metadata?: {
                        device_id: string;
                        device_name: string;
                        relay_name: string | null;
                    } | undefined;
                    ttlock_metadata?: {
                        lock_id: number;
                        lock_alias: string;
                    } | undefined;
                    seam_bridge_metadata?: {
                        unlock_method?: ('bridge' | 'doorking') | undefined;
                        device_num: number;
                        name: string;
                    } | undefined;
                    igloohome_metadata?: {
                        device_id: string;
                        device_name: string;
                        bridge_id?: string | undefined;
                        bridge_name?: string | undefined;
                    } | undefined;
                    nest_metadata?: {
                        nest_device_id: string;
                        device_name: string;
                        custom_name: string;
                    } | undefined;
                    ecobee_metadata?: {
                        ecobee_device_id: string;
                        device_name: string;
                    } | undefined;
                    honeywell_resideo_metadata?: {
                        honeywell_resideo_device_id: string;
                        device_name: string;
                    } | undefined;
                    hubitat_metadata?: {
                        device_id: string;
                        device_name: string;
                        device_label: string;
                    } | undefined;
                    dormakaba_oracode_metadata?: {
                        door_id: number;
                        door_name: string;
                        device_id?: number | undefined;
                        site_id: number;
                        site_name: string;
                        iana_timezone?: string | undefined;
                        predefined_time_slots?: Array<{
                            name: string;
                            prefix: number;
                            check_in_time: string;
                            check_out_time: string;
                            is_24_hour: boolean;
                            is_biweekly_mode: boolean;
                            is_one_shot: boolean;
                            is_master: boolean;
                            ext_dormakaba_oracode_user_level_prefix: number;
                            dormakaba_oracode_user_level_id: string;
                        }> | undefined;
                    } | undefined;
                    wyze_metadata?: {
                        device_id: string;
                        device_name: string;
                        product_name: string;
                        product_type: string;
                        product_model: string;
                        device_info_model: string;
                    } | undefined;
                    tedee_metadata?: {
                        device_id: number;
                        serial_number: string;
                        device_name: string;
                        device_model: string;
                        bridge_id: number;
                        bridge_name: string;
                        keypad_id?: number | undefined;
                    } | undefined;
                }) & ({
                    _experimental_supported_code_from_access_codes_lengths?: (number[] | undefined) | undefined;
                    code_constraints?: (Array<{
                        constraint_type: 'no_zeros' | 'cannot_start_with_12' | 'no_triple_consecutive_ints' | 'cannot_specify_pin_code' | 'pin_code_matches_existing_set' | 'start_date_in_future' | 'no_ascending_or_descending_sequence' | 'at_least_three_unique_digits';
                    } | {
                        constraint_type: 'name_length';
                        min_length?: number | undefined;
                        max_length?: number | undefined;
                    }> | undefined) | undefined;
                    supported_code_lengths?: (number[] | undefined) | undefined;
                    max_active_codes_supported?: (number | undefined) | undefined;
                    supports_backup_access_code_pool?: (boolean | undefined) | undefined;
                    has_native_entry_events?: (boolean | undefined) | undefined;
                    locked?: (boolean | undefined) | undefined;
                    keypad_battery?: ({
                        level: number;
                    } | undefined) | undefined;
                    door_open?: (boolean | undefined) | undefined;
                } & ({
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                    min_heating_cooling_delta_celsius?: number | undefined;
                    min_heating_cooling_delta_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: true | undefined;
                    is_cooling_available?: false | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_heating_set_point_celsius?: number | undefined;
                    min_heating_set_point_fahrenheit?: number | undefined;
                    max_heating_set_point_celsius?: number | undefined;
                    max_heating_set_point_fahrenheit?: number | undefined;
                } | {
                    temperature_fahrenheit?: number | undefined;
                    temperature_celsius?: number | undefined;
                    relative_humidity?: number | undefined;
                    can_enable_automatic_heating?: boolean | undefined;
                    can_enable_automatic_cooling?: boolean | undefined;
                    available_hvac_mode_settings?: Array<'off' | 'heat' | 'cool' | 'heat_cool'> | undefined;
                    is_heating_available?: false | undefined;
                    is_cooling_available?: true | undefined;
                    is_heating?: boolean | undefined;
                    is_cooling?: boolean | undefined;
                    is_fan_running?: boolean | undefined;
                    fan_mode_setting?: ('auto' | 'on') | undefined;
                    is_temporary_manual_override_active?: boolean | undefined;
                    current_climate_setting?: {
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined;
                    default_climate_setting?: ({
                        automatic_heating_enabled: boolean;
                        automatic_cooling_enabled: boolean;
                        hvac_mode_setting: 'off' | 'heat' | 'cool' | 'heat_cool';
                        cooling_set_point_celsius?: number | undefined;
                        heating_set_point_celsius?: number | undefined;
                        cooling_set_point_fahrenheit?: number | undefined;
                        heating_set_point_fahrenheit?: number | undefined;
                        manual_override_allowed: boolean;
                    } | undefined) | undefined;
                    is_climate_setting_schedule_active?: boolean | undefined;
                    active_climate_setting_schedule?: ({
                        climate_setting_schedule_id: string;
                        schedule_type: 'time_bound';
                        device_id: string;
                        name?: string | undefined;
                        schedule_starts_at: string;
                        schedule_ends_at: string;
                        created_at: string;
                        /** Collection of errors associated with the access code, structured in a dictionary format. A unique "error_code" keys each error. Each error entry is an object containing two fields: "message" and "created_at." "message" is a string that describes the error. "created_at" is a date that indicates when the error was generated. This structure enables detailed tracking and timely response to critical issues. */
                        errors?: any;
                        automatic_heating_enabled?: boolean | undefined;
                        automatic_cooling_enabled?: boolean | undefined;
                        hvac_mode_setting?: ('off' | 'heat' | 'cool' | 'heat_cool') | undefined;
                        cooling_set_point_celsius?: (number | undefined) | undefined;
                        heating_set_point_celsius?: (number | undefined) | undefined;
                        cooling_set_point_fahrenheit?: (number | undefined) | undefined;
                        heating_set_point_fahrenheit?: (number | undefined) | undefined;
                        manual_override_allowed?: boolean | undefined;
                    } | undefined) | undefined;
                    min_cooling_set_point_celsius?: number | undefined;
                    min_cooling_set_point_fahrenheit?: number | undefined;
                    max_cooling_set_point_celsius?: number | undefined;
                    max_cooling_set_point_fahrenheit?: number | undefined;
                }));
                /** Location information for the device. */
                location: {
                    /** Name of the device location. */
                    location_name?: string | undefined;
                    /** Time zone of the device location. */
                    timezone?: string | undefined;
                } | null;
                /** Unique identifier for the account associated with the device. */
                connected_account_id: string;
                /** Unique identifier for the Seam workspace associated with the device. */
                workspace_id: string;
                /** Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it. */
                errors: Array<{
                    error_code: string;
                    message: string;
                }>;
                /** Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it. */
                warnings: Array<{
                    warning_code: string;
                    message: string;
                }>;
                /** Date and time at which the device object was created. */
                created_at: string;
                /** Indicates whether Seam manages the device. */
                is_managed: true;
                custom_metadata: Record<string, string | boolean>;
                can_remotely_unlock?: boolean | undefined;
                can_remotely_lock?: boolean | undefined;
                can_program_online_access_codes?: boolean | undefined;
                can_simulate_removal?: boolean | undefined;
            }>;
        };
    };
    '/user_identities/list_acs_systems': {
        route: '/user_identities/list_acs_systems';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_systems: Array<{
                acs_system_id: string;
                external_type: 'pti_site' | 'alta_org' | 'salto_site' | 'brivo_account' | 'hid_credential_manager_organization' | 'visionline_system' | 'assa_abloy_credential_service' | 'latch_building';
                external_type_display_name: string;
                /**
                      ---
                      deprecated: use external_type
                      ---
                       */
                system_type: 'pti_site' | 'alta_org' | 'salto_site' | 'brivo_account' | 'hid_credential_manager_organization' | 'visionline_system' | 'assa_abloy_credential_service' | 'latch_building';
                /**
                      ---
                      deprecated: use external_type_display_name
                      ---
                       */
                system_type_display_name: string;
                name: string;
                created_at: string;
                workspace_id: string;
                connected_account_ids: string[];
                image_url: string;
                image_alt_text: string;
                can_automate_enrollment?: boolean | undefined;
            }>;
        };
    };
    '/user_identities/list_acs_users': {
        route: '/user_identities/list_acs_users';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
        };
        formData: {};
        jsonResponse: {
            acs_users: Array<{
                acs_user_id: string;
                acs_system_id: string;
                hid_acs_system_id?: string | undefined;
                workspace_id: string;
                created_at: string;
                display_name: string;
                external_type?: ('pti_user' | 'brivo_user' | 'hid_credential_manager_user' | 'salto_site_user') | undefined;
                external_type_display_name?: string | undefined;
                is_suspended: boolean;
                access_schedule?: {
                    starts_at: string;
                    ends_at: string;
                } | undefined;
                user_identity_id?: string | undefined;
                user_identity_email_address?: string | undefined;
                user_identity_phone_number?: string | undefined;
                full_name?: string | undefined;
                /**
                    ---
                    deprecated: use email_address.
                    ---
                     */
                email?: string | undefined;
                email_address?: string | undefined;
                phone_number?: string | undefined;
            }>;
        };
    };
    '/user_identities/remove_acs_user': {
        route: '/user_identities/remove_acs_user';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
            acs_user_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/user_identities/revoke_access_to_device': {
        route: '/user_identities/revoke_access_to_device';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            user_identity_id: string;
            device_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/user_identities/update': {
        route: '/user_identities/update';
        method: 'PATCH' | 'POST';
        queryParams: {};
        jsonBody: {
            user_identity_id: string;
            user_identity_key?: (string | null) | undefined;
            email_address?: (string | null) | undefined;
            phone_number?: (string | null) | undefined;
            full_name?: (string | null) | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/webhooks/create': {
        route: '/webhooks/create';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            url: string;
            event_types?: string[];
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            webhook: {
                webhook_id: string;
                url: string;
                event_types?: string[] | undefined;
                secret?: string | undefined;
            };
        };
    };
    '/webhooks/delete': {
        route: '/webhooks/delete';
        method: 'DELETE' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            webhook_id: string;
        };
        formData: {};
        jsonResponse: {};
    };
    '/webhooks/get': {
        route: '/webhooks/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {
            webhook_id: string;
        };
        formData: {};
        jsonResponse: {
            webhook: {
                webhook_id: string;
                url: string;
                event_types?: string[] | undefined;
                secret?: string | undefined;
            };
        };
    };
    '/webhooks/list': {
        route: '/webhooks/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {};
        formData: {};
        jsonResponse: {
            webhooks: Array<{
                webhook_id: string;
                url: string;
                event_types?: string[] | undefined;
                secret?: string | undefined;
            }>;
        };
    };
    '/webhooks/update': {
        route: '/webhooks/update';
        method: 'PUT' | 'POST';
        queryParams: {};
        jsonBody: {
            webhook_id: string;
            event_types: string[];
        };
        commonParams: {};
        formData: {};
        jsonResponse: {};
    };
    '/workspaces/create': {
        route: '/workspaces/create';
        method: 'POST';
        queryParams: {};
        jsonBody: {
            name: string;
            /** The name shown inside the connect webview */
            connect_partner_name: string;
            is_sandbox?: boolean;
            webview_primary_button_color?: string | undefined;
            webview_logo_shape?: ('circle' | 'square') | undefined;
        };
        commonParams: {};
        formData: {};
        jsonResponse: {
            workspace: {
                workspace_id: string;
                name: string;
                connect_partner_name: string | null;
                is_sandbox: boolean;
            };
        };
    };
    '/workspaces/get': {
        route: '/workspaces/get';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {};
        formData: {};
        jsonResponse: {
            workspace?: {
                workspace_id: string;
                name: string;
                is_sandbox: boolean;
                connect_partner_name: string | null;
            } | undefined;
        };
    };
    '/workspaces/list': {
        route: '/workspaces/list';
        method: 'GET' | 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {};
        formData: {};
        jsonResponse: {
            workspaces: Array<{
                workspace_id: string;
                name: string;
                is_sandbox: boolean;
                connect_partner_name: string | null;
            }>;
        };
    };
    '/workspaces/reset_sandbox': {
        route: '/workspaces/reset_sandbox';
        method: 'POST';
        queryParams: {};
        jsonBody: {};
        commonParams: {};
        formData: {};
        jsonResponse: {
            action_attempt: {
                status: 'success';
                action_type: string;
                action_attempt_id: string;
                result?: any;
                error: null;
            } | {
                status: 'pending';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: null;
            } | {
                status: 'error';
                action_type: string;
                action_attempt_id: string;
                result: null;
                error: {
                    type: string;
                    message: string;
                };
            };
        };
    };
}
type RouteResponse<Path extends keyof Routes> = Routes[Path]['jsonResponse'];
type RouteRequestBody<Path extends keyof Routes> = Routes[Path]['jsonBody'] & Routes[Path]['commonParams'];
type RouteRequestParams<Path extends keyof Routes> = Routes[Path]['queryParams'] & Routes[Path]['commonParams'];

declare const routes: {};

export { type ConnectWebview, type CustomMetadata, type RouteRequestBody, type RouteRequestParams, type RouteResponse, type Routes, _default as openapi, routes, schemas };

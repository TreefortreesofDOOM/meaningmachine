declare const _default: {
    components: {
        schemas: {
            access_code: {
                properties: {
                    access_code_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    code: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    common_code_key: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    ends_at: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    errors: {
                        description: string;
                        nullable: boolean;
                    };
                    is_backup: {
                        description: string;
                        type: string;
                    };
                    is_backup_access_code_available: {
                        description: string;
                        type: string;
                    };
                    is_external_modification_allowed: {
                        description: string;
                        type: string;
                    };
                    is_managed: {
                        description: string;
                        enum: boolean[];
                        type: string;
                    };
                    is_offline_access_code: {
                        description: string;
                        type: string;
                    };
                    is_one_time_use: {
                        description: string;
                        type: string;
                    };
                    is_scheduled_on_device: {
                        description: string;
                        type: string;
                    };
                    is_waiting_for_code_assignment: {
                        description: string;
                        type: string;
                    };
                    name: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    pulled_backup_access_code_id: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    starts_at: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    status: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    type: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    warnings: {
                        description: string;
                        nullable: boolean;
                    };
                };
                required: string[];
                type: string;
            };
            acs_access_group: {
                properties: {
                    access_group_type: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    access_group_type_display_name: {
                        description: string;
                        type: string;
                    };
                    acs_access_group_id: {
                        format: string;
                        type: string;
                    };
                    acs_system_id: {
                        format: string;
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    external_type: {
                        enum: string[];
                        type: string;
                    };
                    external_type_display_name: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            acs_system: {
                properties: {
                    acs_system_id: {
                        format: string;
                        type: string;
                    };
                    can_automate_enrollment: {
                        type: string;
                    };
                    connected_account_ids: {
                        items: {
                            type: string;
                        };
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    external_type: {
                        enum: string[];
                        type: string;
                    };
                    external_type_display_name: {
                        type: string;
                    };
                    image_alt_text: {
                        type: string;
                    };
                    image_url: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    system_type: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    system_type_display_name: {
                        description: string;
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            acs_user: {
                properties: {
                    access_schedule: {
                        properties: {
                            ends_at: {
                                format: string;
                                type: string;
                            };
                            starts_at: {
                                format: string;
                                type: string;
                            };
                        };
                        required: string[];
                        type: string;
                    };
                    acs_system_id: {
                        format: string;
                        type: string;
                    };
                    acs_user_id: {
                        format: string;
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    display_name: {
                        type: string;
                    };
                    email: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    email_address: {
                        format: string;
                        type: string;
                    };
                    external_type: {
                        enum: string[];
                        type: string;
                    };
                    external_type_display_name: {
                        type: string;
                    };
                    full_name: {
                        type: string;
                    };
                    hid_acs_system_id: {
                        format: string;
                        type: string;
                    };
                    is_suspended: {
                        type: string;
                    };
                    phone_number: {
                        nullable: boolean;
                        type: string;
                    };
                    user_identity_email_address: {
                        type: string;
                    };
                    user_identity_id: {
                        type: string;
                    };
                    user_identity_phone_number: {
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            action_attempt: {
                discriminator: {
                    propertyName: string;
                };
                oneOf: ({
                    properties: {
                        action_attempt_id: {
                            format: string;
                            type: string;
                        };
                        action_type: {
                            type: string;
                        };
                        error: {
                            format: string;
                            nullable: boolean;
                            type: string;
                            properties?: never;
                            required?: never;
                        };
                        result: {
                            nullable: boolean;
                            format?: never;
                            type?: never;
                        };
                        status: {
                            enum: string[];
                            type: string;
                        };
                    };
                    required: string[];
                    type: string;
                } | {
                    properties: {
                        action_attempt_id: {
                            format: string;
                            type: string;
                        };
                        action_type: {
                            type: string;
                        };
                        error: {
                            format: string;
                            nullable: boolean;
                            type: string;
                            properties?: never;
                            required?: never;
                        };
                        result: {
                            format: string;
                            nullable: boolean;
                            type: string;
                        };
                        status: {
                            enum: string[];
                            type: string;
                        };
                    };
                    required: string[];
                    type: string;
                } | {
                    properties: {
                        action_attempt_id: {
                            format: string;
                            type: string;
                        };
                        action_type: {
                            type: string;
                        };
                        error: {
                            properties: {
                                message: {
                                    type: string;
                                };
                                type: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                            format?: never;
                            nullable?: never;
                        };
                        result: {
                            format: string;
                            nullable: boolean;
                            type: string;
                        };
                        status: {
                            enum: string[];
                            type: string;
                        };
                    };
                    required: string[];
                    type: string;
                })[];
            };
            client_session: {
                properties: {
                    client_session_id: {
                        format: string;
                        type: string;
                    };
                    connect_webview_ids: {
                        items: {
                            format: string;
                            type: string;
                        };
                        type: string;
                    };
                    connected_account_ids: {
                        items: {
                            format: string;
                            type: string;
                        };
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    device_count: {
                        type: string;
                    };
                    token: {
                        type: string;
                    };
                    user_identifier_key: {
                        nullable: boolean;
                        type: string;
                    };
                    user_identity_ids: {
                        items: {
                            format: string;
                            type: string;
                        };
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            climate_setting_schedule: {
                properties: {
                    automatic_cooling_enabled: {
                        type: string;
                    };
                    automatic_heating_enabled: {
                        type: string;
                    };
                    climate_setting_schedule_id: {
                        format: string;
                        type: string;
                    };
                    cooling_set_point_celsius: {
                        type: string;
                    };
                    cooling_set_point_fahrenheit: {
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    device_id: {
                        format: string;
                        type: string;
                    };
                    errors: {
                        description: string;
                        nullable: boolean;
                    };
                    heating_set_point_celsius: {
                        type: string;
                    };
                    heating_set_point_fahrenheit: {
                        type: string;
                    };
                    hvac_mode_setting: {
                        enum: string[];
                        type: string;
                    };
                    manual_override_allowed: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    schedule_ends_at: {
                        type: string;
                    };
                    schedule_starts_at: {
                        type: string;
                    };
                    schedule_type: {
                        enum: string[];
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            connect_webview: {
                properties: {
                    accepted_devices: {
                        items: {
                            type: string;
                        };
                        type: string;
                    };
                    accepted_providers: {
                        items: {
                            type: string;
                        };
                        type: string;
                    };
                    any_device_allowed: {
                        type: string;
                    };
                    any_provider_allowed: {
                        type: string;
                    };
                    authorized_at: {
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    automatically_manage_new_devices: {
                        type: string;
                    };
                    connect_webview_id: {
                        format: string;
                        type: string;
                    };
                    connected_account_id: {
                        format: string;
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    custom_metadata: {
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                        type: string;
                    };
                    custom_redirect_failure_url: {
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    custom_redirect_url: {
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    device_selection_mode: {
                        enum: string[];
                        type: string;
                    };
                    login_successful: {
                        type: string;
                    };
                    selected_provider: {
                        nullable: boolean;
                        type: string;
                    };
                    status: {
                        enum: string[];
                        type: string;
                    };
                    url: {
                        format: string;
                        type: string;
                    };
                    wait_for_device_creation: {
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            connected_account: {
                properties: {
                    account_type: {
                        type: string;
                    };
                    account_type_display_name: {
                        type: string;
                    };
                    automatically_manage_new_devices: {
                        type: string;
                    };
                    connected_account_id: {
                        format: string;
                        type: string;
                    };
                    created_at: {
                        format: string;
                        type: string;
                    };
                    custom_metadata: {
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                        type: string;
                    };
                    errors: {
                        nullable: boolean;
                    };
                    user_identifier: {
                        properties: {
                            api_url: {
                                type: string;
                            };
                            email: {
                                type: string;
                            };
                            exclusive: {
                                type: string;
                            };
                            phone: {
                                type: string;
                            };
                            username: {
                                type: string;
                            };
                        };
                        type: string;
                    };
                    warnings: {
                        nullable: boolean;
                    };
                };
                required: string[];
                type: string;
            };
            device: {
                properties: {
                    can_program_online_access_codes: {
                        type: string;
                    };
                    can_remotely_lock: {
                        type: string;
                    };
                    can_remotely_unlock: {
                        type: string;
                    };
                    can_simulate_removal: {
                        type: string;
                    };
                    capabilities_supported: {
                        description: string;
                        items: {
                            enum: string[];
                            type: string;
                        };
                        type: string;
                    };
                    connected_account_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    custom_metadata: {
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_type: {
                        description: string;
                        oneOf: {
                            enum: string[];
                            type: string;
                        }[];
                    };
                    display_name: {
                        description: string;
                        type: string;
                    };
                    errors: {
                        description: string;
                        items: {
                            properties: {
                                error_code: {
                                    type: string;
                                };
                                message: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    is_managed: {
                        description: string;
                        enum: boolean[];
                        type: string;
                    };
                    location: {
                        description: string;
                        nullable: boolean;
                        properties: {
                            location_name: {
                                description: string;
                                type: string;
                            };
                            timezone: {
                                description: string;
                                type: string;
                            };
                        };
                        type: string;
                    };
                    nickname: {
                        description: string;
                        type: string;
                    };
                    properties: {
                        allOf: ({
                            allOf: ({
                                allOf: ({
                                    properties: {
                                        accessory_keypad: {
                                            description: string;
                                            properties: {
                                                battery: {
                                                    description: string;
                                                    properties: {
                                                        level: {
                                                            maximum: number;
                                                            minimum: number;
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                    type: string;
                                                };
                                                is_connected: {
                                                    description: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        appearance: {
                                            properties: {
                                                name: {
                                                    description: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        battery: {
                                            description: string;
                                            properties: {
                                                level: {
                                                    maximum: number;
                                                    minimum: number;
                                                    type: string;
                                                };
                                                status: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        battery_level: {
                                            description: string;
                                            maximum: number;
                                            minimum: number;
                                            type: string;
                                        };
                                        has_direct_power: {
                                            description: string;
                                            type: string;
                                        };
                                        image_alt_text: {
                                            description: string;
                                            type: string;
                                        };
                                        image_url: {
                                            description: string;
                                            format: string;
                                            type: string;
                                        };
                                        manufacturer: {
                                            description: string;
                                            type: string;
                                        };
                                        model: {
                                            properties: {
                                                accessory_keypad_supported: {
                                                    description: string;
                                                    type: string;
                                                };
                                                can_connect_accessory_keypad: {
                                                    description: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    description: string;
                                                    type: string;
                                                };
                                                has_built_in_keypad: {
                                                    description: string;
                                                    type: string;
                                                };
                                                manufacturer_display_name: {
                                                    description: string;
                                                    type: string;
                                                };
                                                offline_access_codes_supported: {
                                                    description: string;
                                                    type: string;
                                                };
                                                online_access_codes_supported: {
                                                    description: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        name: {
                                            description: string;
                                            type: string;
                                        };
                                        offline_access_codes_enabled: {
                                            description: string;
                                            type: string;
                                        };
                                        online: {
                                            description: string;
                                            type: string;
                                        };
                                        online_access_codes_enabled: {
                                            description: string;
                                            type: string;
                                        };
                                        serial_number: {
                                            description: string;
                                            type: string;
                                        };
                                        supports_accessory_keypad: {
                                            description: string;
                                            type: string;
                                        };
                                        supports_offline_access_codes: {
                                            description: string;
                                            type: string;
                                        };
                                        assa_abloy_credential_service_metadata?: never;
                                    };
                                    required: string[];
                                    type: string;
                                } | {
                                    properties: {
                                        assa_abloy_credential_service_metadata: {
                                            properties: {
                                                endpoints: {
                                                    items: {
                                                        properties: {
                                                            endpoint_id: {
                                                                type: string;
                                                            };
                                                            is_active: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                has_active_endpoint: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        accessory_keypad?: never;
                                        appearance?: never;
                                        battery?: never;
                                        battery_level?: never;
                                        has_direct_power?: never;
                                        image_alt_text?: never;
                                        image_url?: never;
                                        manufacturer?: never;
                                        model?: never;
                                        name?: never;
                                        offline_access_codes_enabled?: never;
                                        online?: never;
                                        online_access_codes_enabled?: never;
                                        serial_number?: never;
                                        supports_accessory_keypad?: never;
                                        supports_offline_access_codes?: never;
                                    };
                                    type: string;
                                    required?: never;
                                })[];
                                properties?: never;
                                type?: never;
                            } | {
                                properties: {
                                    august_metadata: {
                                        properties: {
                                            has_keypad: {
                                                type: string;
                                            };
                                            house_id: {
                                                type: string;
                                            };
                                            house_name: {
                                                type: string;
                                            };
                                            keypad_battery_level: {
                                                type: string;
                                            };
                                            lock_id: {
                                                type: string;
                                            };
                                            lock_name: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    avigilon_alta_metadata: {
                                        properties: {
                                            entry_name: {
                                                type: string;
                                            };
                                            org_name: {
                                                type: string;
                                            };
                                            site_id: {
                                                type: string;
                                            };
                                            site_name: {
                                                type: string;
                                            };
                                            zone_id: {
                                                type: string;
                                            };
                                            zone_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    brivo_metadata: {
                                        properties: {
                                            device_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    controlbyweb_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            relay_name: {
                                                nullable: boolean;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    dormakaba_oracode_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            door_id: {
                                                type: string;
                                            };
                                            door_name: {
                                                type: string;
                                            };
                                            iana_timezone: {
                                                type: string;
                                            };
                                            predefined_time_slots: {
                                                items: {
                                                    properties: {
                                                        check_in_time: {
                                                            type: string;
                                                        };
                                                        check_out_time: {
                                                            type: string;
                                                        };
                                                        dormakaba_oracode_user_level_id: {
                                                            format: string;
                                                            type: string;
                                                        };
                                                        ext_dormakaba_oracode_user_level_prefix: {
                                                            type: string;
                                                        };
                                                        is_24_hour: {
                                                            type: string;
                                                        };
                                                        is_biweekly_mode: {
                                                            type: string;
                                                        };
                                                        is_master: {
                                                            type: string;
                                                        };
                                                        is_one_shot: {
                                                            type: string;
                                                        };
                                                        name: {
                                                            type: string;
                                                        };
                                                        prefix: {
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                    type: string;
                                                };
                                                type: string;
                                            };
                                            site_id: {
                                                type: string;
                                            };
                                            site_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    ecobee_metadata: {
                                        properties: {
                                            device_name: {
                                                type: string;
                                            };
                                            ecobee_device_id: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    four_suites_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            reclose_delay_in_seconds: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    genie_metadata: {
                                        properties: {
                                            device_name: {
                                                type: string;
                                            };
                                            door_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    honeywell_resideo_metadata: {
                                        properties: {
                                            device_name: {
                                                type: string;
                                            };
                                            honeywell_resideo_device_id: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    hubitat_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_label: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    igloo_metadata: {
                                        properties: {
                                            bridge_id: {
                                                type: string;
                                            };
                                            device_id: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    igloohome_metadata: {
                                        properties: {
                                            bridge_id: {
                                                type: string;
                                            };
                                            bridge_name: {
                                                type: string;
                                            };
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    kwikset_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            model_number: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    lockly_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    minut_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            latest_sensor_values: {
                                                properties: {
                                                    accelerometer_z: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    humidity: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    pressure: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    sound: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    temperature: {
                                                        properties: {
                                                            time: {
                                                                type: string;
                                                            };
                                                            value: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    nest_metadata: {
                                        properties: {
                                            custom_name: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            nest_device_id: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    noiseaware_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_model: {
                                                enum: string[];
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            noise_level_decibel: {
                                                type: string;
                                            };
                                            noise_level_nrs: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    nuki_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            keypad_2_paired: {
                                                type: string;
                                            };
                                            keypad_battery_critical: {
                                                type: string;
                                            };
                                            keypad_paired: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    salto_metadata: {
                                        properties: {
                                            battery_level: {
                                                type: string;
                                            };
                                            customer_reference: {
                                                type: string;
                                            };
                                            lock_id: {
                                                type: string;
                                            };
                                            lock_type: {
                                                type: string;
                                            };
                                            locked_state: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    schlage_metadata: {
                                        properties: {
                                            access_code_length: {
                                                nullable: boolean;
                                                type: string;
                                            };
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    seam_bridge_metadata: {
                                        properties: {
                                            device_num: {
                                                type: string;
                                            };
                                            name: {
                                                type: string;
                                            };
                                            unlock_method: {
                                                enum: string[];
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    smartthings_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            location_id: {
                                                type: string;
                                            };
                                            model: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    tedee_metadata: {
                                        properties: {
                                            bridge_id: {
                                                type: string;
                                            };
                                            bridge_name: {
                                                type: string;
                                            };
                                            device_id: {
                                                type: string;
                                            };
                                            device_model: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            keypad_id: {
                                                type: string;
                                            };
                                            serial_number: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    ttlock_metadata: {
                                        properties: {
                                            lock_alias: {
                                                type: string;
                                            };
                                            lock_id: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    two_n_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    wyze_metadata: {
                                        properties: {
                                            device_id: {
                                                type: string;
                                            };
                                            device_info_model: {
                                                type: string;
                                            };
                                            device_name: {
                                                type: string;
                                            };
                                            product_model: {
                                                type: string;
                                            };
                                            product_name: {
                                                type: string;
                                            };
                                            product_type: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                };
                                type: string;
                                allOf?: never;
                            })[];
                        } | {
                            allOf: ({
                                properties: {
                                    _experimental_supported_code_from_access_codes_lengths: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    code_constraints: {
                                        items: {
                                            oneOf: ({
                                                properties: {
                                                    constraint_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    max_length?: never;
                                                    min_length?: never;
                                                };
                                                required: string[];
                                                type: string;
                                            } | {
                                                properties: {
                                                    constraint_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    max_length: {
                                                        type: string;
                                                    };
                                                    min_length: {
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            })[];
                                        };
                                        type: string;
                                    };
                                    door_open: {
                                        type: string;
                                    };
                                    has_native_entry_events: {
                                        type: string;
                                    };
                                    keypad_battery: {
                                        properties: {
                                            level: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    locked: {
                                        type: string;
                                    };
                                    max_active_codes_supported: {
                                        type: string;
                                    };
                                    supported_code_lengths: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    supports_backup_access_code_pool: {
                                        type: string;
                                    };
                                };
                                type: string;
                                oneOf?: never;
                            } | {
                                oneOf: ({
                                    properties: {
                                        active_climate_setting_schedule: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                climate_setting_schedule_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                device_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                errors: {
                                                    description: string;
                                                    nullable: boolean;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                                name: {
                                                    type: string;
                                                };
                                                schedule_ends_at: {
                                                    type: string;
                                                };
                                                schedule_starts_at: {
                                                    type: string;
                                                };
                                                schedule_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        available_hvac_mode_settings: {
                                            items: {
                                                enum: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        can_enable_automatic_cooling: {
                                            type: string;
                                        };
                                        can_enable_automatic_heating: {
                                            type: string;
                                        };
                                        current_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        default_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        fan_mode_setting: {
                                            enum: string[];
                                            type: string;
                                        };
                                        is_climate_setting_schedule_active: {
                                            type: string;
                                        };
                                        is_cooling: {
                                            type: string;
                                        };
                                        is_cooling_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_fan_running: {
                                            type: string;
                                        };
                                        is_heating: {
                                            type: string;
                                        };
                                        is_heating_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_temporary_manual_override_active: {
                                            type: string;
                                        };
                                        max_cooling_set_point_celsius: {
                                            type: string;
                                        };
                                        max_cooling_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        max_heating_set_point_celsius: {
                                            type: string;
                                        };
                                        max_heating_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        min_cooling_set_point_celsius: {
                                            type: string;
                                        };
                                        min_cooling_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        min_heating_cooling_delta_celsius: {
                                            type: string;
                                        };
                                        min_heating_cooling_delta_fahrenheit: {
                                            type: string;
                                        };
                                        min_heating_set_point_celsius: {
                                            type: string;
                                        };
                                        min_heating_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        relative_humidity: {
                                            maximum: number;
                                            minimum: number;
                                            type: string;
                                        };
                                        temperature_celsius: {
                                            type: string;
                                        };
                                        temperature_fahrenheit: {
                                            type: string;
                                        };
                                    };
                                    type: string;
                                } | {
                                    properties: {
                                        active_climate_setting_schedule: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                climate_setting_schedule_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                device_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                errors: {
                                                    description: string;
                                                    nullable: boolean;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                                name: {
                                                    type: string;
                                                };
                                                schedule_ends_at: {
                                                    type: string;
                                                };
                                                schedule_starts_at: {
                                                    type: string;
                                                };
                                                schedule_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        available_hvac_mode_settings: {
                                            items: {
                                                enum: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        can_enable_automatic_cooling: {
                                            type: string;
                                        };
                                        can_enable_automatic_heating: {
                                            type: string;
                                        };
                                        current_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        default_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        fan_mode_setting: {
                                            enum: string[];
                                            type: string;
                                        };
                                        is_climate_setting_schedule_active: {
                                            type: string;
                                        };
                                        is_cooling: {
                                            type: string;
                                        };
                                        is_cooling_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_fan_running: {
                                            type: string;
                                        };
                                        is_heating: {
                                            type: string;
                                        };
                                        is_heating_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_temporary_manual_override_active: {
                                            type: string;
                                        };
                                        max_heating_set_point_celsius: {
                                            type: string;
                                        };
                                        max_heating_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        min_heating_set_point_celsius: {
                                            type: string;
                                        };
                                        min_heating_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        relative_humidity: {
                                            maximum: number;
                                            minimum: number;
                                            type: string;
                                        };
                                        temperature_celsius: {
                                            type: string;
                                        };
                                        temperature_fahrenheit: {
                                            type: string;
                                        };
                                        max_cooling_set_point_celsius?: never;
                                        max_cooling_set_point_fahrenheit?: never;
                                        min_cooling_set_point_celsius?: never;
                                        min_cooling_set_point_fahrenheit?: never;
                                        min_heating_cooling_delta_celsius?: never;
                                        min_heating_cooling_delta_fahrenheit?: never;
                                    };
                                    type: string;
                                } | {
                                    properties: {
                                        active_climate_setting_schedule: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                climate_setting_schedule_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                device_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                errors: {
                                                    description: string;
                                                    nullable: boolean;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                                name: {
                                                    type: string;
                                                };
                                                schedule_ends_at: {
                                                    type: string;
                                                };
                                                schedule_starts_at: {
                                                    type: string;
                                                };
                                                schedule_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        available_hvac_mode_settings: {
                                            items: {
                                                enum: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        can_enable_automatic_cooling: {
                                            type: string;
                                        };
                                        can_enable_automatic_heating: {
                                            type: string;
                                        };
                                        current_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        default_climate_setting: {
                                            properties: {
                                                automatic_cooling_enabled: {
                                                    type: string;
                                                };
                                                automatic_heating_enabled: {
                                                    type: string;
                                                };
                                                cooling_set_point_celsius: {
                                                    type: string;
                                                };
                                                cooling_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                heating_set_point_celsius: {
                                                    type: string;
                                                };
                                                heating_set_point_fahrenheit: {
                                                    type: string;
                                                };
                                                hvac_mode_setting: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                manual_override_allowed: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        fan_mode_setting: {
                                            enum: string[];
                                            type: string;
                                        };
                                        is_climate_setting_schedule_active: {
                                            type: string;
                                        };
                                        is_cooling: {
                                            type: string;
                                        };
                                        is_cooling_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_fan_running: {
                                            type: string;
                                        };
                                        is_heating: {
                                            type: string;
                                        };
                                        is_heating_available: {
                                            enum: boolean[];
                                            type: string;
                                        };
                                        is_temporary_manual_override_active: {
                                            type: string;
                                        };
                                        max_cooling_set_point_celsius: {
                                            type: string;
                                        };
                                        max_cooling_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        min_cooling_set_point_celsius: {
                                            type: string;
                                        };
                                        min_cooling_set_point_fahrenheit: {
                                            type: string;
                                        };
                                        relative_humidity: {
                                            maximum: number;
                                            minimum: number;
                                            type: string;
                                        };
                                        temperature_celsius: {
                                            type: string;
                                        };
                                        temperature_fahrenheit: {
                                            type: string;
                                        };
                                        max_heating_set_point_celsius?: never;
                                        max_heating_set_point_fahrenheit?: never;
                                        min_heating_cooling_delta_celsius?: never;
                                        min_heating_cooling_delta_fahrenheit?: never;
                                        min_heating_set_point_celsius?: never;
                                        min_heating_set_point_fahrenheit?: never;
                                    };
                                    type: string;
                                })[];
                                properties?: never;
                                type?: never;
                            })[];
                        })[];
                        description: string;
                    };
                    warnings: {
                        description: string;
                        items: {
                            properties: {
                                message: {
                                    type: string;
                                };
                                warning_code: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    workspace_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            device_provider: {
                properties: {
                    device_provider_name: {
                        enum: string[];
                        type: string;
                    };
                    display_name: {
                        type: string;
                    };
                    image_url: {
                        type: string;
                    };
                    provider_categories: {
                        items: {
                            enum: string[];
                            type: string;
                        };
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            enrollment_automation: {
                properties: {
                    created_at: {
                        format: string;
                        type: string;
                    };
                    credential_manager_acs_system_id: {
                        format: string;
                        type: string;
                    };
                    enrollment_automation_id: {
                        format: string;
                        type: string;
                    };
                    user_identity_id: {
                        format: string;
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            event: {
                properties: {
                    created_at: {
                        format: string;
                        type: string;
                    };
                    device_id: {
                        format: string;
                        type: string;
                    };
                    event_id: {
                        format: string;
                        type: string;
                    };
                    event_type: {
                        type: string;
                    };
                    occurred_at: {
                        format: string;
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            noise_threshold: {
                properties: {
                    device_id: {
                        format: string;
                        type: string;
                    };
                    ends_daily_at: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    noise_threshold_decibels: {
                        type: string;
                    };
                    noise_threshold_id: {
                        format: string;
                        type: string;
                    };
                    noise_threshold_nrs: {
                        type: string;
                    };
                    starts_daily_at: {
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            phone: {
                properties: {
                    can_program_online_access_codes: {
                        type: string;
                    };
                    can_remotely_lock: {
                        type: string;
                    };
                    can_remotely_unlock: {
                        type: string;
                    };
                    can_simulate_removal: {
                        type: string;
                    };
                    capabilities_supported: {
                        description: string;
                        items: {
                            enum: string[];
                            type: string;
                        };
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    custom_metadata: {
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_type: {
                        enum: string[];
                        type: string;
                    };
                    display_name: {
                        description: string;
                        type: string;
                    };
                    errors: {
                        description: string;
                        items: {
                            properties: {
                                error_code: {
                                    type: string;
                                };
                                message: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    is_managed: {
                        description: string;
                        enum: boolean[];
                        type: string;
                    };
                    location: {
                        description: string;
                        nullable: boolean;
                        properties: {
                            location_name: {
                                description: string;
                                type: string;
                            };
                            timezone: {
                                description: string;
                                type: string;
                            };
                        };
                        type: string;
                    };
                    nickname: {
                        description: string;
                        type: string;
                    };
                    properties: {
                        properties: {
                            assa_abloy_credential_service_metadata: {
                                properties: {
                                    endpoints: {
                                        items: {
                                            properties: {
                                                endpoint_id: {
                                                    type: string;
                                                };
                                                is_active: {
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    has_active_endpoint: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                        type: string;
                    };
                    warnings: {
                        description: string;
                        items: {
                            properties: {
                                message: {
                                    type: string;
                                };
                                warning_code: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    workspace_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            service_health: {
                properties: {
                    description: {
                        type: string;
                    };
                    service: {
                        type: string;
                    };
                    status: {
                        enum: string[];
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            unmanaged_access_code: {
                properties: {
                    access_code_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    code: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    ends_at: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    errors: {
                        description: string;
                        nullable: boolean;
                    };
                    is_managed: {
                        enum: boolean[];
                        type: string;
                    };
                    name: {
                        description: string;
                        nullable: boolean;
                        type: string;
                    };
                    starts_at: {
                        description: string;
                        format: string;
                        nullable: boolean;
                        type: string;
                    };
                    status: {
                        enum: string[];
                        type: string;
                    };
                    type: {
                        description: string;
                        enum: string[];
                        type: string;
                    };
                    warnings: {
                        description: string;
                        nullable: boolean;
                    };
                };
                required: string[];
                type: string;
            };
            unmanaged_device: {
                properties: {
                    can_program_online_access_codes: {
                        type: string;
                    };
                    can_remotely_lock: {
                        type: string;
                    };
                    can_remotely_unlock: {
                        type: string;
                    };
                    can_simulate_removal: {
                        type: string;
                    };
                    capabilities_supported: {
                        description: string;
                        items: {
                            enum: string[];
                            type: string;
                        };
                        type: string;
                    };
                    connected_account_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    created_at: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                    device_type: {
                        description: string;
                        oneOf: {
                            enum: string[];
                            type: string;
                        }[];
                    };
                    errors: {
                        description: string;
                        items: {
                            properties: {
                                error_code: {
                                    type: string;
                                };
                                message: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    is_managed: {
                        enum: boolean[];
                        type: string;
                    };
                    properties: {
                        properties: {
                            accessory_keypad: {
                                description: string;
                                properties: {
                                    battery: {
                                        description: string;
                                        properties: {
                                            level: {
                                                maximum: number;
                                                minimum: number;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    is_connected: {
                                        description: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                            battery: {
                                description: string;
                                properties: {
                                    level: {
                                        maximum: number;
                                        minimum: number;
                                        type: string;
                                    };
                                    status: {
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                            battery_level: {
                                description: string;
                                maximum: number;
                                minimum: number;
                                type: string;
                            };
                            image_alt_text: {
                                description: string;
                                type: string;
                            };
                            image_url: {
                                description: string;
                                format: string;
                                type: string;
                            };
                            manufacturer: {
                                description: string;
                                type: string;
                            };
                            model: {
                                properties: {
                                    accessory_keypad_supported: {
                                        description: string;
                                        type: string;
                                    };
                                    can_connect_accessory_keypad: {
                                        description: string;
                                        type: string;
                                    };
                                    display_name: {
                                        description: string;
                                        type: string;
                                    };
                                    has_built_in_keypad: {
                                        description: string;
                                        type: string;
                                    };
                                    manufacturer_display_name: {
                                        description: string;
                                        type: string;
                                    };
                                    offline_access_codes_supported: {
                                        description: string;
                                        type: string;
                                    };
                                    online_access_codes_supported: {
                                        description: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                            name: {
                                description: string;
                                type: string;
                            };
                            offline_access_codes_enabled: {
                                description: string;
                                type: string;
                            };
                            online: {
                                description: string;
                                type: string;
                            };
                            online_access_codes_enabled: {
                                description: string;
                                type: string;
                            };
                        };
                        required: string[];
                        type: string;
                    };
                    warnings: {
                        description: string;
                        items: {
                            properties: {
                                message: {
                                    type: string;
                                };
                                warning_code: {
                                    type: string;
                                };
                            };
                            required: string[];
                            type: string;
                        };
                        type: string;
                    };
                    workspace_id: {
                        description: string;
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            webhook: {
                properties: {
                    event_types: {
                        items: {
                            type: string;
                        };
                        type: string;
                    };
                    secret: {
                        type: string;
                    };
                    url: {
                        type: string;
                    };
                    webhook_id: {
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
            workspace: {
                properties: {
                    connect_partner_name: {
                        nullable: boolean;
                        type: string;
                    };
                    is_sandbox: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    workspace_id: {
                        format: string;
                        type: string;
                    };
                };
                required: string[];
                type: string;
            };
        };
        securitySchemes: {
            access_token: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            api_key: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            client_session: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            client_session_token: {
                in: string;
                name: string;
                type: string;
            };
            console_session: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            pat_with_workspace: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            pat_without_workspace: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            seam_client_session_token: {
                in: string;
                name: string;
                type: string;
            };
            seam_workspace: {
                in: string;
                name: string;
                type: string;
            };
            user_session: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
            user_session_without_workspace: {
                bearerFormat: string;
                scheme: string;
                type: string;
            };
        };
    };
    info: {
        title: string;
        version: string;
    };
    openapi: string;
    paths: {
        '/access_codes/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    common_code_key: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_code: {
                                            $ref: string;
                                        };
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/create_multiple': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    behavior_when_code_cannot_be_shared: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    preferred_code_length: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_codes: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    behavior_when_code_cannot_be_shared: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    preferred_code_length: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_codes: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/access_codes/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/generate_code': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        generated_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    code: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    access_token?: never;
                    user_session?: never;
                    client_session?: never;
                } | {
                    access_token: never[];
                    api_key?: never;
                    user_session?: never;
                    client_session?: never;
                } | {
                    user_session: never[];
                    api_key?: never;
                    access_token?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    access_token?: never;
                    user_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_codes: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/pull_backup_access_code': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        backup_access_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/simulate/create_unmanaged_access_code': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/unmanaged/convert_to_managed': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    force: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    force: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/access_codes/unmanaged/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/unmanaged/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    code: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_code: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/unmanaged/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        access_codes: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/access_codes/unmanaged/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    force: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    force: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/access_codes/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                    type: {
                                        enum: string[];
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                    type: {
                                        enum: string[];
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allow_external_modification: {
                                        type: string;
                                    };
                                    attempt_for_offline_device: {
                                        default: boolean;
                                        type: string;
                                    };
                                    code: {
                                        maxLength: number;
                                        minLength: number;
                                        pattern: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        type: string;
                                    };
                                    is_external_modification_allowed: {
                                        type: string;
                                    };
                                    is_managed: {
                                        type: string;
                                    };
                                    is_offline_access_code: {
                                        type: string;
                                    };
                                    is_one_time_use: {
                                        type: string;
                                    };
                                    max_time_rounding: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    prefer_native_scheduling: {
                                        type: string;
                                    };
                                    starts_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                    type: {
                                        enum: string[];
                                        type: string;
                                    };
                                    use_backup_access_code_pool: {
                                        type: string;
                                    };
                                    use_offline_access_code: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/acs/access_groups/add_user': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/acs/access_groups/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_access_group: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/access_groups/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_access_groups: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/access_groups/list_users': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_users: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/access_groups/remove_user': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credential_pools/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential_pools: {
                                            items: {
                                                properties: {
                                                    acs_credential_pool_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        minLength: number;
                                                        type: string;
                                                    };
                                                    external_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    external_type_display_name: {
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credential_provisioning_automations/launch': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_pool_id: {
                                        format: string;
                                        type: string;
                                    };
                                    create_credential_manager_user: {
                                        type: string;
                                    };
                                    credential_manager_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    credential_manager_acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential_provisioning_automation: {
                                            properties: {
                                                acs_credential_provisioning_automation_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                credential_manager_acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                user_identity_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/assign': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_method: {
                                        enum: string[];
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    allowed_acs_entrance_ids: {
                                        default: never[];
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    code: {
                                        pattern: string;
                                        type: string;
                                    };
                                    credential_manager_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_at: {
                                        format: string;
                                        type: string;
                                    };
                                    is_multi_phone_sync_credential: {
                                        default: boolean;
                                        type: string;
                                    };
                                    starts_at: {
                                        format: string;
                                        type: string;
                                    };
                                    visionline_metadata: {
                                        properties: {
                                            assa_abloy_credential_service_mobile_endpoint_id: {
                                                format: string;
                                                type: string;
                                            };
                                            card_format: {
                                                enum: string[];
                                                type: string;
                                            };
                                            is_override_key: {
                                                type: string;
                                            };
                                            joiner_acs_credential_ids: {
                                                items: {
                                                    format: string;
                                                    type: string;
                                                };
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                allOf: ({
                                    oneOf: ({
                                        properties: {
                                            acs_user_id: {
                                                format: string;
                                                type: string;
                                            };
                                            acs_system_id?: never;
                                            user_identity_id?: never;
                                        };
                                        required: string[];
                                        type: string;
                                    } | {
                                        properties: {
                                            acs_system_id: {
                                                format: string;
                                                type: string;
                                            };
                                            acs_user_id?: never;
                                            user_identity_id?: never;
                                        };
                                        required: string[];
                                        type: string;
                                    } | {
                                        properties: {
                                            acs_system_id: {
                                                format: string;
                                                type: string;
                                            };
                                            acs_user_id: {
                                                format: string;
                                                type: string;
                                            };
                                            user_identity_id?: never;
                                        };
                                        required: string[];
                                        type: string;
                                    } | {
                                        properties: {
                                            user_identity_id: {
                                                format: string;
                                                type: string;
                                            };
                                            acs_user_id?: never;
                                            acs_system_id?: never;
                                        };
                                        required: string[];
                                        type: string;
                                    })[];
                                    properties?: never;
                                    type?: never;
                                } | {
                                    properties: {
                                        is_multi_phone_sync_credential: {
                                            type: string;
                                        };
                                    };
                                    type: string;
                                    oneOf?: never;
                                })[];
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credentials: {
                                            items: {
                                                properties: {
                                                    access_method: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    acs_credential_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_credential_pool_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_user_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    code: {
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        minLength: number;
                                                        type: string;
                                                    };
                                                    ends_at: {
                                                        type: string;
                                                    };
                                                    errors: {
                                                        items: {
                                                            properties: {
                                                                error_code: {
                                                                    type: string;
                                                                };
                                                                message: {
                                                                    type: string;
                                                                };
                                                            };
                                                            required: string[];
                                                            type: string;
                                                        };
                                                        type: string;
                                                    };
                                                    external_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    external_type_display_name: {
                                                        type: string;
                                                    };
                                                    is_multi_phone_sync_credential: {
                                                        type: string;
                                                    };
                                                    parent_acs_credential_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    starts_at: {
                                                        type: string;
                                                    };
                                                    visionline_metadata: {
                                                        properties: {
                                                            common_acs_entrance_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                            guest_acs_entrance_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                            joiner_acs_credential_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                        };
                                                        type: string;
                                                    };
                                                    warnings: {
                                                        items: {
                                                            properties: {
                                                                message: {
                                                                    type: string;
                                                                };
                                                                warning_code: {
                                                                    type: string;
                                                                };
                                                            };
                                                            required: string[];
                                                            type: string;
                                                        };
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/unassign': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/credentials/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        type: string;
                                    };
                                    code: {
                                        pattern: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        type: string;
                                    };
                                    code: {
                                        pattern: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credential: {
                                            properties: {
                                                access_method: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_credential_pool_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_user_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                code: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                ends_at: {
                                                    type: string;
                                                };
                                                errors: {
                                                    items: {
                                                        properties: {
                                                            error_code: {
                                                                type: string;
                                                            };
                                                            message: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                external_type: {
                                                    enum: string[];
                                                    type: string;
                                                };
                                                external_type_display_name: {
                                                    type: string;
                                                };
                                                is_multi_phone_sync_credential: {
                                                    type: string;
                                                };
                                                parent_acs_credential_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                starts_at: {
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    properties: {
                                                        common_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        guest_acs_entrance_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                        joiner_acs_credential_ids: {
                                                            items: {
                                                                format: string;
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    type: string;
                                                };
                                                warnings: {
                                                    items: {
                                                        properties: {
                                                            message: {
                                                                type: string;
                                                            };
                                                            warning_code: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/entrances/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_entrance_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_entrance: {
                                            properties: {
                                                acs_entrance_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    type: string;
                                                };
                                                latch_metadata: {
                                                    nullable: boolean;
                                                    properties: {
                                                        accessibility_type: {
                                                            type: string;
                                                        };
                                                        is_connected: {
                                                            type: string;
                                                        };
                                                        name: {
                                                            type: string;
                                                        };
                                                        type: {
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                    type: string;
                                                };
                                                visionline_metadata: {
                                                    nullable: boolean;
                                                    properties: {
                                                        door_category: {
                                                            enum: string[];
                                                            type: string;
                                                        };
                                                        door_name: {
                                                            type: string;
                                                        };
                                                        profiles: {
                                                            items: {
                                                                properties: {
                                                                    visionline_door_profile_id: {
                                                                        type: string;
                                                                    };
                                                                    visionline_door_profile_type: {
                                                                        enum: string[];
                                                                        type: string;
                                                                    };
                                                                };
                                                                required: string[];
                                                                type: string;
                                                            };
                                                            type: string;
                                                        };
                                                    };
                                                    required: string[];
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    access_token?: never;
                    user_session?: never;
                    client_session?: never;
                } | {
                    access_token: never[];
                    api_key?: never;
                    user_session?: never;
                    client_session?: never;
                } | {
                    user_session: never[];
                    api_key?: never;
                    access_token?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    access_token?: never;
                    user_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/entrances/grant_access': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_entrance_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/entrances/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_entrances: {
                                            items: {
                                                properties: {
                                                    acs_entrance_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        type: string;
                                                    };
                                                    latch_metadata: {
                                                        nullable: boolean;
                                                        properties: {
                                                            accessibility_type: {
                                                                type: string;
                                                            };
                                                            is_connected: {
                                                                type: string;
                                                            };
                                                            name: {
                                                                type: string;
                                                            };
                                                            type: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    visionline_metadata: {
                                                        nullable: boolean;
                                                        properties: {
                                                            door_category: {
                                                                enum: string[];
                                                                type: string;
                                                            };
                                                            door_name: {
                                                                type: string;
                                                            };
                                                            profiles: {
                                                                items: {
                                                                    properties: {
                                                                        visionline_door_profile_id: {
                                                                            type: string;
                                                                        };
                                                                        visionline_door_profile_type: {
                                                                            enum: string[];
                                                                            type: string;
                                                                        };
                                                                    };
                                                                    required: string[];
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/entrances/list_credentials_with_access': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_entrance_id: {
                                        format: string;
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_credentials: {
                                            items: {
                                                properties: {
                                                    access_method: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    acs_credential_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_credential_pool_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_user_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    code: {
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        minLength: number;
                                                        type: string;
                                                    };
                                                    ends_at: {
                                                        type: string;
                                                    };
                                                    errors: {
                                                        items: {
                                                            properties: {
                                                                error_code: {
                                                                    type: string;
                                                                };
                                                                message: {
                                                                    type: string;
                                                                };
                                                            };
                                                            required: string[];
                                                            type: string;
                                                        };
                                                        type: string;
                                                    };
                                                    external_type: {
                                                        enum: string[];
                                                        type: string;
                                                    };
                                                    external_type_display_name: {
                                                        type: string;
                                                    };
                                                    is_multi_phone_sync_credential: {
                                                        type: string;
                                                    };
                                                    parent_acs_credential_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    starts_at: {
                                                        type: string;
                                                    };
                                                    visionline_metadata: {
                                                        properties: {
                                                            common_acs_entrance_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                            guest_acs_entrance_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                            joiner_acs_credential_ids: {
                                                                items: {
                                                                    format: string;
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                        };
                                                        type: string;
                                                    };
                                                    warnings: {
                                                        items: {
                                                            properties: {
                                                                message: {
                                                                    type: string;
                                                                };
                                                                warning_code: {
                                                                    type: string;
                                                                };
                                                            };
                                                            required: string[];
                                                            type: string;
                                                        };
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/systems/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_system: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/systems/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connected_account_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_systems: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/add_to_access_group': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/acs/users/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_schedule: {
                                        properties: {
                                            ends_at: {
                                                format: string;
                                                type: string;
                                            };
                                            starts_at: {
                                                format: string;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    acs_access_group_ids: {
                                        default: never[];
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    email: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    email_address: {
                                        format: string;
                                        type: string;
                                    };
                                    full_name: {
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_user: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_user: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_email_address: {
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_users: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/list_accessible_entrances': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_entrances: {
                                            items: {
                                                properties: {
                                                    acs_entrance_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    acs_system_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        type: string;
                                                    };
                                                    latch_metadata: {
                                                        nullable: boolean;
                                                        properties: {
                                                            accessibility_type: {
                                                                type: string;
                                                            };
                                                            is_connected: {
                                                                type: string;
                                                            };
                                                            name: {
                                                                type: string;
                                                            };
                                                            type: {
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                    visionline_metadata: {
                                                        nullable: boolean;
                                                        properties: {
                                                            door_category: {
                                                                enum: string[];
                                                                type: string;
                                                            };
                                                            door_name: {
                                                                type: string;
                                                            };
                                                            profiles: {
                                                                items: {
                                                                    properties: {
                                                                        visionline_door_profile_id: {
                                                                            type: string;
                                                                        };
                                                                        visionline_door_profile_type: {
                                                                            enum: string[];
                                                                            type: string;
                                                                        };
                                                                    };
                                                                    required: string[];
                                                                    type: string;
                                                                };
                                                                type: string;
                                                            };
                                                        };
                                                        required: string[];
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/remove_from_access_group': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_access_group_id: {
                                        format: string;
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/revoke_access_to_all_entrances': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/suspend': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/unsuspend': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/acs/users/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_schedule: {
                                        properties: {
                                            ends_at: {
                                                format: string;
                                                type: string;
                                            };
                                            starts_at: {
                                                format: string;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    email: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    email_address: {
                                        format: string;
                                        type: string;
                                    };
                                    full_name: {
                                        type: string;
                                    };
                                    hid_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_schedule: {
                                        properties: {
                                            ends_at: {
                                                format: string;
                                                type: string;
                                            };
                                            starts_at: {
                                                format: string;
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                        type: string;
                                    };
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    email: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    email_address: {
                                        format: string;
                                        type: string;
                                    };
                                    full_name: {
                                        type: string;
                                    };
                                    hid_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/action_attempts/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    action_attempt_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/action_attempts/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    action_attempt_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempts: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/client_sessions/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    expires_at: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        minLength: number;
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    expires_at: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        minLength: number;
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/client_sessions/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/client_sessions/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/client_sessions/get_or_create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    expires_at: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        minLength: number;
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    expires_at: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        minLength: number;
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/client_sessions/grant_access': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        type: string;
                                    };
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        type: string;
                                    };
                                    connect_webview_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                    user_identity_ids: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_session: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/client_sessions/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        type: string;
                                    };
                                    connect_webview_id: {
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                    user_identity_id: {
                                        type: string;
                                    };
                                    without_user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        client_sessions: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/client_sessions/revoke': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    client_session_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/connect_webviews/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    accepted_providers: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    automatically_manage_new_devices: {
                                        type: string;
                                    };
                                    custom_metadata: {
                                        additionalProperties: {
                                            nullable: boolean;
                                            oneOf: ({
                                                maxLength: number;
                                                type: string;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                type: string;
                                                maxLength?: never;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                format: string;
                                                nullable: boolean;
                                                type: string;
                                                maxLength?: never;
                                            })[];
                                        };
                                        type: string;
                                    };
                                    custom_redirect_failure_url: {
                                        type: string;
                                    };
                                    custom_redirect_url: {
                                        type: string;
                                    };
                                    device_selection_mode: {
                                        enum: string[];
                                        type: string;
                                    };
                                    provider_category: {
                                        enum: string[];
                                        type: string;
                                    };
                                    wait_for_device_creation: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connect_webview: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    access_token: never[];
                    seam_workspace: never[];
                    seam_client_session_token?: never;
                    client_session_token?: never;
                } | {
                    seam_client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    client_session_token?: never;
                } | {
                    client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    seam_client_session_token?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connect_webviews/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/connect_webviews/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connect_webview: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connect_webviews/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        description: string;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connect_webviews: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    access_token: never[];
                    seam_workspace: never[];
                    seam_client_session_token?: never;
                    client_session_token?: never;
                } | {
                    seam_client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    client_session_token?: never;
                } | {
                    client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    seam_client_session_token?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connect_webviews/view': {
            get: {
                operationId: string;
                parameters: ({
                    in: string;
                    name: string;
                    required: boolean;
                    schema: {
                        format: string;
                        type: string;
                    };
                } | {
                    in: string;
                    name: string;
                    required: boolean;
                    schema: {
                        type: string;
                        format?: never;
                    };
                })[];
                responses: {
                    200: {
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/connected_accounts/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connected_account_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/connected_accounts/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                oneOf: ({
                                    properties: {
                                        connected_account_id: {
                                            format: string;
                                            type: string;
                                        };
                                        email?: never;
                                    };
                                    required: string[];
                                    type: string;
                                } | {
                                    properties: {
                                        email: {
                                            format: string;
                                            type: string;
                                        };
                                        connected_account_id?: never;
                                    };
                                    required: string[];
                                    type: string;
                                })[];
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connected_account: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connected_accounts/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        description: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connected_accounts: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/connected_accounts/update': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatically_manage_new_devices: {
                                        type: string;
                                    };
                                    connected_account_id: {
                                        format: string;
                                        type: string;
                                    };
                                    custom_metadata: {
                                        additionalProperties: {
                                            nullable: boolean;
                                            oneOf: ({
                                                maxLength: number;
                                                type: string;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                type: string;
                                                maxLength?: never;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                format: string;
                                                nullable: boolean;
                                                type: string;
                                                maxLength?: never;
                                            })[];
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        connected_account: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/devices/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        device: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    created_before: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_type: {
                                        oneOf: {
                                            enum: string[];
                                            type: string;
                                        }[];
                                    };
                                    device_types: {
                                        items: {
                                            oneOf: {
                                                enum: string[];
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    exclude_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    manufacturer: {
                                        enum: string[];
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        devices: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/list_device_providers': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    provider_category: {
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        device_providers: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/simulate/remove': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/devices/unmanaged/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        device: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    access_token: never[];
                    seam_workspace: never[];
                    seam_client_session_token?: never;
                    client_session_token?: never;
                } | {
                    seam_client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    client_session_token?: never;
                } | {
                    client_session_token: never[];
                    access_token?: never;
                    seam_workspace?: never;
                    seam_client_session_token?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/unmanaged/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    created_before: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_type: {
                                        oneOf: {
                                            enum: string[];
                                            type: string;
                                        }[];
                                    };
                                    device_types: {
                                        items: {
                                            oneOf: {
                                                enum: string[];
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    exclude_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    manufacturer: {
                                        enum: string[];
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        devices: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/devices/unmanaged/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_managed: {
                                        enum: boolean[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_managed: {
                                        enum: boolean[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/devices/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    custom_metadata: {
                                        additionalProperties: {
                                            nullable: boolean;
                                            oneOf: ({
                                                maxLength: number;
                                                type: string;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                type: string;
                                                maxLength?: never;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                format: string;
                                                nullable: boolean;
                                                type: string;
                                                maxLength?: never;
                                            })[];
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_managed: {
                                        default: boolean;
                                        type: string;
                                    };
                                    name: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    properties: {
                                        properties: {
                                            name: {
                                                nullable: boolean;
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    custom_metadata: {
                                        additionalProperties: {
                                            nullable: boolean;
                                            oneOf: ({
                                                maxLength: number;
                                                type: string;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                type: string;
                                                maxLength?: never;
                                                format?: never;
                                                nullable?: never;
                                            } | {
                                                format: string;
                                                nullable: boolean;
                                                type: string;
                                                maxLength?: never;
                                            })[];
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_managed: {
                                        default: boolean;
                                        type: string;
                                    };
                                    name: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    properties: {
                                        properties: {
                                            name: {
                                                nullable: boolean;
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/events/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    event_id: {
                                        format: string;
                                        type: string;
                                    };
                                    event_type: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        event: {
                                            $ref: string;
                                        };
                                        message: {
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/events/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    access_code_id: {
                                        format: string;
                                        type: string;
                                    };
                                    access_code_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    between: {
                                        items: {
                                            oneOf: ({
                                                type: string;
                                                format?: never;
                                            } | {
                                                format: string;
                                                type: string;
                                            })[];
                                        };
                                        maxItems: number;
                                        minItems: number;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        format: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    event_type: {
                                        enum: string[];
                                        type: string;
                                    };
                                    event_types: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    since: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        events: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/health': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        msg: {
                                            enum: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health_statuses: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        msg: {
                                            enum: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health_statuses: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/health/get_health': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        msg: {
                                            enum: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health_statuses: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        msg: {
                                            enum: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health_statuses: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/health/get_service_health': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    service: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/health/service/[service_name]': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    service_name: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        last_service_evaluation_at: {
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                        service_health: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/locks/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        device: {
                                            $ref: string;
                                        };
                                        lock: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/locks/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    created_before: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_type: {
                                        oneOf: {
                                            enum: string[];
                                            type: string;
                                        }[];
                                    };
                                    device_types: {
                                        items: {
                                            oneOf: {
                                                enum: string[];
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    exclude_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    manufacturer: {
                                        enum: string[];
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        devices: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        locks: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/locks/lock_door': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/locks/unlock_door': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/networks/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    network_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        network: {
                                            properties: {
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    type: string;
                                                };
                                                network_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/networks/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {};
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        networks: {
                                            items: {
                                                properties: {
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        type: string;
                                                    };
                                                    network_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/noise_sensors/noise_thresholds/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_daily_at: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    noise_threshold_decibels: {
                                        type: string;
                                    };
                                    noise_threshold_nrs: {
                                        type: string;
                                    };
                                    starts_daily_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        noise_threshold: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/noise_sensors/noise_thresholds/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/noise_sensors/noise_thresholds/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        noise_threshold: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/noise_sensors/noise_thresholds/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    is_programmed: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        noise_thresholds: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/noise_sensors/noise_thresholds/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_daily_at: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    noise_threshold_decibels: {
                                        type: string;
                                    };
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                    noise_threshold_nrs: {
                                        type: string;
                                    };
                                    starts_daily_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_daily_at: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    noise_threshold_decibels: {
                                        type: string;
                                    };
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                    noise_threshold_nrs: {
                                        type: string;
                                    };
                                    starts_daily_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    ends_daily_at: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    noise_threshold_decibels: {
                                        type: string;
                                    };
                                    noise_threshold_id: {
                                        format: string;
                                        type: string;
                                    };
                                    noise_threshold_nrs: {
                                        type: string;
                                    };
                                    starts_daily_at: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/noise_sensors/simulate/trigger_noise_threshold': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/phones/deactivate': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/phones/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    owner_user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        phones: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/phones/simulate/create_sandbox_phone': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    assa_abloy_metadata: {
                                        default: {};
                                        properties: {
                                            application_version: {
                                                default: string;
                                                type: string;
                                            };
                                            ble_capability: {
                                                default: boolean;
                                                type: string;
                                            };
                                            hce_capability: {
                                                default: boolean;
                                                type: string;
                                            };
                                            nfc_capability: {
                                                default: boolean;
                                                type: string;
                                            };
                                            seos_applet_version: {
                                                default: string;
                                                type: string;
                                            };
                                            seos_tsm_endpoint_id: {
                                                default: number;
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                    custom_sdk_installation_id: {
                                        type: string;
                                    };
                                    phone_metadata: {
                                        default: {};
                                        properties: {
                                            device_manufacturer: {
                                                default: string;
                                                type: string;
                                            };
                                            device_model: {
                                                default: string;
                                                type: string;
                                            };
                                            operating_system: {
                                                default: string;
                                                enum: string[];
                                                type: string;
                                            };
                                            os_version: {
                                                default: string;
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        phone: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/climate_setting_schedules/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatic_cooling_enabled: {
                                        type: string;
                                    };
                                    automatic_heating_enabled: {
                                        type: string;
                                    };
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    device_id: {
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    hvac_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    manual_override_allowed: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    schedule_ends_at: {
                                        type: string;
                                    };
                                    schedule_starts_at: {
                                        type: string;
                                    };
                                    schedule_type: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/climate_setting_schedules/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/thermostats/climate_setting_schedules/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/climate_setting_schedules/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedules: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/climate_setting_schedules/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatic_cooling_enabled: {
                                        type: string;
                                    };
                                    automatic_heating_enabled: {
                                        type: string;
                                    };
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    hvac_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    manual_override_allowed: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    schedule_ends_at: {
                                        type: string;
                                    };
                                    schedule_starts_at: {
                                        type: string;
                                    };
                                    schedule_type: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatic_cooling_enabled: {
                                        type: string;
                                    };
                                    automatic_heating_enabled: {
                                        type: string;
                                    };
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    hvac_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    manual_override_allowed: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    schedule_ends_at: {
                                        type: string;
                                    };
                                    schedule_starts_at: {
                                        type: string;
                                    };
                                    schedule_type: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    automatic_cooling_enabled: {
                                        type: string;
                                    };
                                    automatic_heating_enabled: {
                                        type: string;
                                    };
                                    climate_setting_schedule_id: {
                                        format: string;
                                        type: string;
                                    };
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    hvac_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    manual_override_allowed: {
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    schedule_ends_at: {
                                        type: string;
                                    };
                                    schedule_starts_at: {
                                        type: string;
                                    };
                                    schedule_type: {
                                        default: string;
                                        enum: string[];
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        climate_setting_schedule: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/thermostats/cool': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        thermostat: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/heat': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/heat_cool': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    cooling_set_point_celsius: {
                                        type: string;
                                    };
                                    cooling_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    heating_set_point_celsius: {
                                        type: string;
                                    };
                                    heating_set_point_fahrenheit: {
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_webview_id: {
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_id: {
                                        description: string;
                                        format: string;
                                        type: string;
                                    };
                                    connected_account_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    created_before: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    custom_metadata_has: {
                                        additionalProperties: {
                                            oneOf: {
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    device_ids: {
                                        items: {
                                            format: string;
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    device_type: {
                                        oneOf: {
                                            enum: string[];
                                            type: string;
                                        }[];
                                    };
                                    device_types: {
                                        items: {
                                            oneOf: {
                                                enum: string[];
                                                type: string;
                                            }[];
                                        };
                                        type: string;
                                    };
                                    exclude_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    include_if: {
                                        items: {
                                            enum: string[];
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    limit: {
                                        default: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    manufacturer: {
                                        enum: string[];
                                        type: string;
                                    };
                                    user_identifier_key: {
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        thermostats: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/off': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/set_fan_mode': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    fan_mode: {
                                        enum: string[];
                                        type: string;
                                    };
                                    fan_mode_setting: {
                                        enum: string[];
                                        type: string;
                                    };
                                    sync: {
                                        default: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/thermostats/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    default_climate_setting: {
                                        properties: {
                                            automatic_cooling_enabled: {
                                                type: string;
                                            };
                                            automatic_heating_enabled: {
                                                type: string;
                                            };
                                            cooling_set_point_celsius: {
                                                type: string;
                                            };
                                            cooling_set_point_fahrenheit: {
                                                type: string;
                                            };
                                            heating_set_point_celsius: {
                                                type: string;
                                            };
                                            heating_set_point_fahrenheit: {
                                                type: string;
                                            };
                                            hvac_mode_setting: {
                                                enum: string[];
                                                type: string;
                                            };
                                            manual_override_allowed: {
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    default_climate_setting: {
                                        properties: {
                                            automatic_cooling_enabled: {
                                                type: string;
                                            };
                                            automatic_heating_enabled: {
                                                type: string;
                                            };
                                            cooling_set_point_celsius: {
                                                type: string;
                                            };
                                            cooling_set_point_fahrenheit: {
                                                type: string;
                                            };
                                            heating_set_point_celsius: {
                                                type: string;
                                            };
                                            heating_set_point_fahrenheit: {
                                                type: string;
                                            };
                                            hvac_mode_setting: {
                                                enum: string[];
                                                type: string;
                                            };
                                            manual_override_allowed: {
                                                type: string;
                                            };
                                        };
                                        type: string;
                                    };
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                    client_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/add_acs_user': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/user_identities/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    email_address: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    full_name: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identity_key: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        user_identity: {
                                            properties: {
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                email_address: {
                                                    format: string;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                full_name: {
                                                    minLength: number;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                phone_number: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                user_identity_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                user_identity_key: {
                                                    minLength: number;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/enrollment_automations/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    enrollment_automation_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/enrollment_automations/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    enrollment_automation_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        enrollment_automation: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/enrollment_automations/launch': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_credential_pool_id: {
                                        format: string;
                                        type: string;
                                    };
                                    create_credential_manager_user: {
                                        type: string;
                                    };
                                    credential_manager_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                    credential_manager_acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        enrollment_automation: {
                                            properties: {
                                                acs_credential_provisioning_automation_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                credential_manager_acs_system_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                enrollment_automation_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                user_identity_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/enrollment_automations/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        enrollment_automations: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                oneOf: ({
                                    properties: {
                                        user_identity_id: {
                                            format: string;
                                            type: string;
                                        };
                                        user_identity_key?: never;
                                    };
                                    required: string[];
                                    type: string;
                                } | {
                                    properties: {
                                        user_identity_key: {
                                            type: string;
                                        };
                                        user_identity_id?: never;
                                    };
                                    required: string[];
                                    type: string;
                                })[];
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        user_identity: {
                                            properties: {
                                                created_at: {
                                                    format: string;
                                                    type: string;
                                                };
                                                display_name: {
                                                    minLength: number;
                                                    type: string;
                                                };
                                                email_address: {
                                                    format: string;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                full_name: {
                                                    minLength: number;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                phone_number: {
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                user_identity_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                                user_identity_key: {
                                                    minLength: number;
                                                    nullable: boolean;
                                                    type: string;
                                                };
                                                workspace_id: {
                                                    format: string;
                                                    type: string;
                                                };
                                            };
                                            required: string[];
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/grant_access_to_device': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/user_identities/list': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    credential_manager_acs_system_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        user_identities: {
                                            items: {
                                                properties: {
                                                    created_at: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    display_name: {
                                                        minLength: number;
                                                        type: string;
                                                    };
                                                    email_address: {
                                                        format: string;
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    full_name: {
                                                        minLength: number;
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    phone_number: {
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    user_identity_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                    user_identity_key: {
                                                        minLength: number;
                                                        nullable: boolean;
                                                        type: string;
                                                    };
                                                    workspace_id: {
                                                        format: string;
                                                        type: string;
                                                    };
                                                };
                                                required: string[];
                                                type: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    client_session?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/user_identities/list_accessible_devices': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        accessible_devices: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/list_acs_systems': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_systems: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    client_session: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    pat_with_workspace: never[];
                    client_session?: never;
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    client_session?: never;
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/list_acs_users': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        acs_users: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/remove_acs_user': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    acs_user_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/revoke_access_to_device': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    device_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/user_identities/update': {
            patch: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    email_address: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    full_name: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_key: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    email_address: {
                                        format: string;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    full_name: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                    phone_number: {
                                        nullable: boolean;
                                        type: string;
                                    };
                                    user_identity_id: {
                                        format: string;
                                        type: string;
                                    };
                                    user_identity_key: {
                                        minLength: number;
                                        nullable: boolean;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    console_session?: never;
                    api_key?: never;
                } | {
                    console_session: never[];
                    pat_with_workspace?: never;
                    api_key?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/webhooks/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    event_types: {
                                        default: string[];
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    url: {
                                        format: string;
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        webhook: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/webhooks/delete': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    webhook_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/webhooks/get': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    webhook_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        webhook: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/webhooks/list': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        webhooks: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        webhooks: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/webhooks/update': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    event_types: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    webhook_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
            put: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    event_types: {
                                        items: {
                                            type: string;
                                        };
                                        type: string;
                                    };
                                    webhook_id: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
        };
        '/workspaces/create': {
            post: {
                operationId: string;
                requestBody: {
                    content: {
                        'application/json': {
                            schema: {
                                properties: {
                                    connect_partner_name: {
                                        description: string;
                                        type: string;
                                    };
                                    is_sandbox: {
                                        default: boolean;
                                        type: string;
                                    };
                                    name: {
                                        type: string;
                                    };
                                    webview_logo_shape: {
                                        enum: string[];
                                        type: string;
                                    };
                                    webview_primary_button_color: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                type: string;
                            };
                        };
                    };
                };
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspace: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: {
                    pat_without_workspace: never[];
                }[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
            };
        };
        '/workspaces/get': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspace: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    user_session?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                } | {
                    user_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    user_session?: never;
                    pat_with_workspace?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    user_session?: never;
                    client_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspace: {
                                            $ref: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    user_session?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                } | {
                    user_session: never[];
                    api_key?: never;
                    client_session?: never;
                    pat_with_workspace?: never;
                } | {
                    client_session: never[];
                    api_key?: never;
                    user_session?: never;
                    pat_with_workspace?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    user_session?: never;
                    client_session?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/workspaces/list': {
            get: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspaces: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    pat_without_workspace: never[];
                    pat_with_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    user_session: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    user_session_without_workspace: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-ignore': boolean;
            };
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        ok: {
                                            type: string;
                                        };
                                        workspaces: {
                                            items: {
                                                $ref: string;
                                            };
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    pat_with_workspace: never[];
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    pat_without_workspace: never[];
                    pat_with_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    user_session: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    user_session_without_workspace: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    api_key?: never;
                    client_session?: never;
                } | {
                    api_key: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    client_session?: never;
                } | {
                    client_session: never[];
                    pat_with_workspace?: never;
                    pat_without_workspace?: never;
                    user_session?: never;
                    user_session_without_workspace?: never;
                    api_key?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
        '/workspaces/reset_sandbox': {
            post: {
                operationId: string;
                responses: {
                    200: {
                        content: {
                            'application/json': {
                                schema: {
                                    properties: {
                                        action_attempt: {
                                            $ref: string;
                                        };
                                        ok: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    type: string;
                                };
                            };
                        };
                        description: string;
                    };
                    400: {
                        description: string;
                    };
                    401: {
                        description: string;
                    };
                };
                security: ({
                    api_key: never[];
                    pat_with_workspace?: never;
                    console_session?: never;
                } | {
                    pat_with_workspace: never[];
                    api_key?: never;
                    console_session?: never;
                } | {
                    console_session: never[];
                    api_key?: never;
                    pat_with_workspace?: never;
                })[];
                summary: string;
                tags: string[];
                'x-fern-sdk-group-name': string[];
                'x-fern-sdk-method-name': string;
                'x-fern-sdk-return-value': string;
            };
        };
    };
    servers: {
        url: string;
    }[];
    tags: {
        description: string;
        name: string;
    }[];
};
export default _default;

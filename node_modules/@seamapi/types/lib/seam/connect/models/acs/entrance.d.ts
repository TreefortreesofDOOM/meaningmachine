import { z } from 'zod';
export declare const acs_entrance_latch_metadata: z.ZodObject<{
    accessibility_type: z.ZodString;
    name: z.ZodString;
    type: z.ZodString;
    is_connected: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: string;
    name: string;
    accessibility_type: string;
    is_connected: boolean;
}, {
    type: string;
    name: string;
    accessibility_type: string;
    is_connected: boolean;
}>;
export declare const acs_entrance: z.ZodObject<{
    acs_entrance_id: z.ZodString;
    display_name: z.ZodString;
    acs_system_id: z.ZodString;
    created_at: z.ZodString;
    latch_metadata: z.ZodNullable<z.ZodObject<{
        accessibility_type: z.ZodString;
        name: z.ZodString;
        type: z.ZodString;
        is_connected: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        type: string;
        name: string;
        accessibility_type: string;
        is_connected: boolean;
    }, {
        type: string;
        name: string;
        accessibility_type: string;
        is_connected: boolean;
    }>>;
    visionline_metadata: z.ZodNullable<z.ZodObject<{
        door_name: z.ZodString;
        door_category: z.ZodEnum<["entrance", "guest", "elevator reader", "common", "common (PMS)"]>;
        profiles: z.ZodOptional<z.ZodArray<z.ZodObject<{
            visionline_door_profile_id: z.ZodString;
            visionline_door_profile_type: z.ZodEnum<["BLE", "commonDoor", "touch"]>;
        }, "strip", z.ZodTypeAny, {
            visionline_door_profile_id: string;
            visionline_door_profile_type: "BLE" | "commonDoor" | "touch";
        }, {
            visionline_door_profile_id: string;
            visionline_door_profile_type: "BLE" | "commonDoor" | "touch";
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        door_name: string;
        door_category: "entrance" | "guest" | "elevator reader" | "common" | "common (PMS)";
        profiles?: {
            visionline_door_profile_id: string;
            visionline_door_profile_type: "BLE" | "commonDoor" | "touch";
        }[] | undefined;
    }, {
        door_name: string;
        door_category: "entrance" | "guest" | "elevator reader" | "common" | "common (PMS)";
        profiles?: {
            visionline_door_profile_id: string;
            visionline_door_profile_type: "BLE" | "commonDoor" | "touch";
        }[] | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    created_at: string;
    acs_system_id: string;
    display_name: string;
    visionline_metadata: {
        door_name: string;
        door_category: "entrance" | "guest" | "elevator reader" | "common" | "common (PMS)";
        profiles?: {
            visionline_door_profile_id: string;
            visionline_door_profile_type: "BLE" | "commonDoor" | "touch";
        }[] | undefined;
    } | null;
    acs_entrance_id: string;
    latch_metadata: {
        type: string;
        name: string;
        accessibility_type: string;
        is_connected: boolean;
    } | null;
}, {
    created_at: string;
    acs_system_id: string;
    display_name: string;
    visionline_metadata: {
        door_name: string;
        door_category: "entrance" | "guest" | "elevator reader" | "common" | "common (PMS)";
        profiles?: {
            visionline_door_profile_id: string;
            visionline_door_profile_type: "BLE" | "commonDoor" | "touch";
        }[] | undefined;
    } | null;
    acs_entrance_id: string;
    latch_metadata: {
        type: string;
        name: string;
        accessibility_type: string;
        is_connected: boolean;
    } | null;
}>;
export type AcsEntranceLatchMetadata = z.infer<typeof acs_entrance_latch_metadata>;
export type AcsEntrance = z.infer<typeof acs_entrance>;

import { z } from 'zod';
export declare const acs_credential_external_type: z.ZodEnum<["pti_card", "brivo_credential", "hid_credential", "visionline_card"]>;
export declare const acs_credential_access_method_type: z.ZodEnum<["code", "card", "mobile_key"]>;
export type AcsCredentialExternalType = z.infer<typeof acs_credential_external_type>;
export declare const acs_credential_visionline_metadata: z.ZodObject<{
    joiner_acs_credential_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    guest_acs_entrance_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    common_acs_entrance_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    joiner_acs_credential_ids?: string[] | undefined;
    guest_acs_entrance_ids?: string[] | undefined;
    common_acs_entrance_ids?: string[] | undefined;
}, {
    joiner_acs_credential_ids?: string[] | undefined;
    guest_acs_entrance_ids?: string[] | undefined;
    common_acs_entrance_ids?: string[] | undefined;
}>;
export type AcsCredentialVisionlineMetadata = z.infer<typeof acs_credential_visionline_metadata>;
export declare const acs_credential: z.ZodObject<{
    acs_credential_id: z.ZodString;
    acs_user_id: z.ZodOptional<z.ZodString>;
    acs_credential_pool_id: z.ZodOptional<z.ZodString>;
    acs_system_id: z.ZodString;
    parent_acs_credential_id: z.ZodOptional<z.ZodString>;
    display_name: z.ZodString;
    code: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    access_method: z.ZodEnum<["code", "card", "mobile_key"]>;
    external_type: z.ZodOptional<z.ZodEnum<["pti_card", "brivo_credential", "hid_credential", "visionline_card"]>>;
    external_type_display_name: z.ZodOptional<z.ZodString>;
    created_at: z.ZodString;
    workspace_id: z.ZodString;
    starts_at: z.ZodOptional<z.ZodString>;
    ends_at: z.ZodOptional<z.ZodString>;
    errors: z.ZodArray<z.ZodObject<{
        error_code: z.ZodString;
        message: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: string;
    }, {
        message: string;
        error_code: string;
    }>, "many">;
    warnings: z.ZodArray<z.ZodObject<{
        warning_code: z.ZodString;
        message: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: string;
    }, {
        message: string;
        warning_code: string;
    }>, "many">;
    is_multi_phone_sync_credential: z.ZodOptional<z.ZodBoolean>;
    visionline_metadata: z.ZodOptional<z.ZodObject<{
        joiner_acs_credential_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        guest_acs_entrance_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        common_acs_entrance_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        joiner_acs_credential_ids?: string[] | undefined;
        guest_acs_entrance_ids?: string[] | undefined;
        common_acs_entrance_ids?: string[] | undefined;
    }, {
        joiner_acs_credential_ids?: string[] | undefined;
        guest_acs_entrance_ids?: string[] | undefined;
        common_acs_entrance_ids?: string[] | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    created_at: string;
    errors: {
        message: string;
        error_code: string;
    }[];
    warnings: {
        message: string;
        warning_code: string;
    }[];
    acs_system_id: string;
    workspace_id: string;
    acs_credential_id: string;
    display_name: string;
    access_method: "code" | "card" | "mobile_key";
    acs_user_id?: string | undefined;
    acs_credential_pool_id?: string | undefined;
    parent_acs_credential_id?: string | undefined;
    code?: string | null | undefined;
    external_type?: "pti_card" | "brivo_credential" | "hid_credential" | "visionline_card" | undefined;
    external_type_display_name?: string | undefined;
    starts_at?: string | undefined;
    ends_at?: string | undefined;
    is_multi_phone_sync_credential?: boolean | undefined;
    visionline_metadata?: {
        joiner_acs_credential_ids?: string[] | undefined;
        guest_acs_entrance_ids?: string[] | undefined;
        common_acs_entrance_ids?: string[] | undefined;
    } | undefined;
}, {
    created_at: string;
    errors: {
        message: string;
        error_code: string;
    }[];
    warnings: {
        message: string;
        warning_code: string;
    }[];
    acs_system_id: string;
    workspace_id: string;
    acs_credential_id: string;
    display_name: string;
    access_method: "code" | "card" | "mobile_key";
    acs_user_id?: string | undefined;
    acs_credential_pool_id?: string | undefined;
    parent_acs_credential_id?: string | undefined;
    code?: string | null | undefined;
    external_type?: "pti_card" | "brivo_credential" | "hid_credential" | "visionline_card" | undefined;
    external_type_display_name?: string | undefined;
    starts_at?: string | undefined;
    ends_at?: string | undefined;
    is_multi_phone_sync_credential?: boolean | undefined;
    visionline_metadata?: {
        joiner_acs_credential_ids?: string[] | undefined;
        guest_acs_entrance_ids?: string[] | undefined;
        common_acs_entrance_ids?: string[] | undefined;
    } | undefined;
}>;
export type AcsCredential = z.output<typeof acs_credential>;

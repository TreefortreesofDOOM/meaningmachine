import { z } from 'zod';
export declare const managed_access_code: z.ZodObject<{
    common_code_key: z.ZodNullable<z.ZodString>;
    is_scheduled_on_device: z.ZodOptional<z.ZodBoolean>;
    type: z.ZodEnum<["time_bound", "ongoing"]>;
    is_waiting_for_code_assignment: z.ZodOptional<z.ZodBoolean>;
    access_code_id: z.ZodString;
    device_id: z.ZodString;
    name: z.ZodNullable<z.ZodString>;
    code: z.ZodNullable<z.ZodString>;
    created_at: z.ZodString;
    errors: z.ZodAny;
    warnings: z.ZodAny;
    is_managed: z.ZodLiteral<true>;
    starts_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ends_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    status: z.ZodEnum<["setting", "set", "unset", "removing", "unknown"]>;
    is_backup_access_code_available: z.ZodBoolean;
    is_backup: z.ZodOptional<z.ZodBoolean>;
    pulled_backup_access_code_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    is_external_modification_allowed: z.ZodBoolean;
    is_one_time_use: z.ZodBoolean;
    is_offline_access_code: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    type: "time_bound" | "ongoing";
    code: string | null;
    name: string | null;
    status: "set" | "unknown" | "setting" | "unset" | "removing";
    common_code_key: string | null;
    access_code_id: string;
    device_id: string;
    created_at: string;
    is_managed: true;
    is_backup_access_code_available: boolean;
    is_external_modification_allowed: boolean;
    is_one_time_use: boolean;
    is_offline_access_code: boolean;
    is_scheduled_on_device?: boolean | undefined;
    is_waiting_for_code_assignment?: boolean | undefined;
    errors?: any;
    warnings?: any;
    starts_at?: string | null | undefined;
    ends_at?: string | null | undefined;
    is_backup?: boolean | undefined;
    pulled_backup_access_code_id?: string | null | undefined;
}, {
    type: "time_bound" | "ongoing";
    code: string | null;
    name: string | null;
    status: "set" | "unknown" | "setting" | "unset" | "removing";
    common_code_key: string | null;
    access_code_id: string;
    device_id: string;
    created_at: string;
    is_managed: true;
    is_backup_access_code_available: boolean;
    is_external_modification_allowed: boolean;
    is_one_time_use: boolean;
    is_offline_access_code: boolean;
    is_scheduled_on_device?: boolean | undefined;
    is_waiting_for_code_assignment?: boolean | undefined;
    errors?: any;
    warnings?: any;
    starts_at?: string | null | undefined;
    ends_at?: string | null | undefined;
    is_backup?: boolean | undefined;
    pulled_backup_access_code_id?: string | null | undefined;
}>;
export type ManagedAccessCode = z.infer<typeof managed_access_code>;

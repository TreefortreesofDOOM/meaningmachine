import { z } from 'zod';
export declare const unmanaged_access_code: z.ZodObject<{
    type: z.ZodEnum<["time_bound", "ongoing"]>;
    code: z.ZodNullable<z.ZodString>;
    name: z.ZodNullable<z.ZodString>;
    access_code_id: z.ZodString;
    device_id: z.ZodString;
    created_at: z.ZodString;
    errors: z.ZodAny;
    warnings: z.ZodAny;
    starts_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ends_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    is_managed: z.ZodLiteral<false>;
    status: z.ZodEnum<["set"]>;
}, "strip", z.ZodTypeAny, {
    type: "time_bound" | "ongoing";
    code: string | null;
    name: string | null;
    status: "set";
    access_code_id: string;
    device_id: string;
    created_at: string;
    is_managed: false;
    errors?: any;
    warnings?: any;
    starts_at?: string | null | undefined;
    ends_at?: string | null | undefined;
}, {
    type: "time_bound" | "ongoing";
    code: string | null;
    name: string | null;
    status: "set";
    access_code_id: string;
    device_id: string;
    created_at: string;
    is_managed: false;
    errors?: any;
    warnings?: any;
    starts_at?: string | null | undefined;
    ends_at?: string | null | undefined;
}>;
export type UnmanagedAccessCode = z.infer<typeof unmanaged_access_code>;

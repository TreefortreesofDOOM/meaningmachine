import { z } from 'zod';
export declare const connect_webview: z.ZodObject<{
    connect_webview_id: z.ZodString;
    connected_account_id: z.ZodOptional<z.ZodString>;
    url: z.ZodString;
    workspace_id: z.ZodString;
    device_selection_mode: z.ZodEnum<["none", "single", "multiple"]>;
    accepted_providers: z.ZodArray<z.ZodString, "many">;
    accepted_devices: z.ZodArray<z.ZodString, "many">;
    any_provider_allowed: z.ZodBoolean;
    any_device_allowed: z.ZodBoolean;
    created_at: z.ZodString;
    login_successful: z.ZodBoolean;
    status: z.ZodEnum<["pending", "failed", "authorized"]>;
    custom_redirect_url: z.ZodNullable<z.ZodString>;
    custom_redirect_failure_url: z.ZodNullable<z.ZodString>;
    custom_metadata: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>;
    automatically_manage_new_devices: z.ZodBoolean;
    wait_for_device_creation: z.ZodBoolean;
    authorized_at: z.ZodNullable<z.ZodString>;
    selected_provider: z.ZodNullable<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    url: string;
    status: "failed" | "pending" | "authorized";
    created_at: string;
    workspace_id: string;
    connect_webview_id: string;
    device_selection_mode: "none" | "multiple" | "single";
    accepted_providers: string[];
    accepted_devices: string[];
    any_provider_allowed: boolean;
    any_device_allowed: boolean;
    login_successful: boolean;
    custom_redirect_url: string | null;
    custom_redirect_failure_url: string | null;
    custom_metadata: Record<string, string | boolean>;
    automatically_manage_new_devices: boolean;
    wait_for_device_creation: boolean;
    authorized_at: string | null;
    selected_provider: string | null;
    connected_account_id?: string | undefined;
}, {
    url: string;
    status: "failed" | "pending" | "authorized";
    created_at: string;
    workspace_id: string;
    connect_webview_id: string;
    device_selection_mode: "none" | "multiple" | "single";
    accepted_providers: string[];
    accepted_devices: string[];
    any_provider_allowed: boolean;
    any_device_allowed: boolean;
    login_successful: boolean;
    custom_redirect_url: string | null;
    custom_redirect_failure_url: string | null;
    custom_metadata: Record<string, string | boolean>;
    automatically_manage_new_devices: boolean;
    wait_for_device_creation: boolean;
    authorized_at: string | null;
    selected_provider: string | null;
    connected_account_id?: string | undefined;
}>;
export type ConnectWebview = z.infer<typeof connect_webview>;

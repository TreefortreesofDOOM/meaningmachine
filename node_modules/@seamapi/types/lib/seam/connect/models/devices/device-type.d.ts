import { z } from 'zod';
/** Locks */
export declare const LOCK_DEVICE_TYPE: {
    readonly AKUVOX_LOCK: "akuvox_lock";
    readonly AUGUST_LOCK: "august_lock";
    readonly BRIVO_ACCESS_POINT: "brivo_access_point";
    readonly BUTTERFLYMX_PANEL: "butterflymx_panel";
    readonly AVIGILON_ALTA_ENTRY: "avigilon_alta_entry";
    readonly DOORKING_LOCK: "doorking_lock";
    readonly GENIE_DOOR: "genie_door";
    readonly IGLOO_LOCK: "igloo_lock";
    readonly LINEAR_LOCK: "linear_lock";
    readonly LOCKLY_LOCK: "lockly_lock";
    readonly KWIKSET_LOCK: "kwikset_lock";
    readonly NUKI_LOCK: "nuki_lock";
    readonly SALTO_LOCK: "salto_lock";
    readonly SCHLAGE_LOCK: "schlage_lock";
    readonly SEAM_RELAY: "seam_relay";
    readonly SMARTTHINGS_LOCK: "smartthings_lock";
    readonly WYZE_LOCK: "wyze_lock";
    readonly YALE_LOCK: "yale_lock";
    readonly TWO_N_INTERCOM: "two_n_intercom";
    readonly CONTROLBYWEB_DEVICE: "controlbyweb_device";
    readonly TTLOCK_LOCK: "ttlock_lock";
    readonly IGLOOHOME_LOCK: "igloohome_lock";
    readonly HUBITAT_LOCK: "hubitat_lock";
    readonly FOUR_SUITES_DOOR: "four_suites_door";
    readonly DORMAKABA_ORACODE_DOOR: "dormakaba_oracode_door";
    readonly TEDEE_LOCK: "tedee_lock";
};
type LockDeviceTypeFromMapping = (typeof LOCK_DEVICE_TYPE)[keyof typeof LOCK_DEVICE_TYPE];
export declare const LOCK_DEVICE_TYPE_LIST: LockDeviceTypeFromMapping[];
export declare const lock_device_type: z.ZodEnum<[LockDeviceTypeFromMapping]>;
export type LockDeviceType = z.infer<typeof lock_device_type>;
/** Noise Sensors */
export declare const NOISE_SENSOR_DEVICE_TYPE: {
    readonly NOISEAWARE_ACTIVITY_ZONE: "noiseaware_activity_zone";
    readonly MINUT_SENSOR: "minut_sensor";
};
type NoiseSensorDeviceTypeFromMapping = (typeof NOISE_SENSOR_DEVICE_TYPE)[keyof typeof NOISE_SENSOR_DEVICE_TYPE];
export declare const NOISE_SENSOR_DEVICE_TYPE_LIST: NoiseSensorDeviceTypeFromMapping[];
export declare const noise_sensor_device_type: z.ZodEnum<[NoiseSensorDeviceTypeFromMapping]>;
export type NoiseSensorDeviceType = z.infer<typeof noise_sensor_device_type>;
/** Thermostats */
export declare const THERMOSTAT_DEVICE_TYPE: {
    readonly ECOBEE_THERMOSTAT: "ecobee_thermostat";
    readonly NEST_THERMOSTAT: "nest_thermostat";
    readonly HONEYWELL_RESIDEO_THERMOSTAT: "honeywell_resideo_thermostat";
};
type ThermostatDeviceTypeFromMapping = (typeof THERMOSTAT_DEVICE_TYPE)[keyof typeof THERMOSTAT_DEVICE_TYPE];
export declare const THERMOSTAT_DEVICE_TYPE_LIST: ThermostatDeviceTypeFromMapping[];
export declare const thermostat_device_type: z.ZodEnum<[ThermostatDeviceTypeFromMapping]>;
export type ThermostatDeviceType = z.infer<typeof thermostat_device_type>;
/** Phones */
export declare const PHONE_DEVICE_TYPE: {
    readonly IOS_PHONE: "ios_phone";
    readonly ANDROID_PHONE: "android_phone";
};
type PhoneDeviceTypeFromMapping = (typeof PHONE_DEVICE_TYPE)[keyof typeof PHONE_DEVICE_TYPE];
export declare const PHONE_DEVICE_TYPE_LIST: PhoneDeviceTypeFromMapping[];
export declare const phone_device_type: z.ZodEnum<[PhoneDeviceTypeFromMapping]>;
export type PhoneDeviceType = z.infer<typeof phone_device_type>;
export declare const any_device_type: z.ZodUnion<[z.ZodEnum<[LockDeviceTypeFromMapping]>, z.ZodEnum<[NoiseSensorDeviceTypeFromMapping]>, z.ZodEnum<[ThermostatDeviceTypeFromMapping]>, z.ZodEnum<[PhoneDeviceTypeFromMapping]>]>;
export type AnyDeviceType = z.infer<typeof any_device_type>;
export {};

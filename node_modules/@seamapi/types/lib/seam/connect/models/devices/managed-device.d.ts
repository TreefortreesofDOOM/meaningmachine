import type { SetRequired, Simplify } from 'type-fest';
import { z } from 'zod';
import { device_metadata } from './device-metadata.js';
export declare const device_capability_flags: z.ZodObject<{
    can_remotely_unlock: z.ZodOptional<z.ZodBoolean>;
    can_remotely_lock: z.ZodOptional<z.ZodBoolean>;
    can_program_offline_access_codes: z.ZodOptional<z.ZodBoolean>;
    can_program_online_access_codes: z.ZodOptional<z.ZodBoolean>;
    can_simulate_removal: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    can_remotely_unlock?: boolean | undefined;
    can_remotely_lock?: boolean | undefined;
    can_program_offline_access_codes?: boolean | undefined;
    can_program_online_access_codes?: boolean | undefined;
    can_simulate_removal?: boolean | undefined;
}, {
    can_remotely_unlock?: boolean | undefined;
    can_remotely_lock?: boolean | undefined;
    can_program_offline_access_codes?: boolean | undefined;
    can_program_online_access_codes?: boolean | undefined;
    can_simulate_removal?: boolean | undefined;
}>;
export declare const battery_status: z.ZodEnum<["critical", "low", "good", "full"]>;
export type BatteryStatus = z.infer<typeof battery_status>;
export declare const common_device_properties: z.ZodObject<{
    online: z.ZodBoolean;
    name: z.ZodString;
    accessory_keypad: z.ZodOptional<z.ZodObject<{
        is_connected: z.ZodBoolean;
        battery: z.ZodOptional<z.ZodObject<{
            level: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            level: number;
        }, {
            level: number;
        }>>;
    }, "strip", z.ZodTypeAny, {
        is_connected: boolean;
        battery?: {
            level: number;
        } | undefined;
    }, {
        is_connected: boolean;
        battery?: {
            level: number;
        } | undefined;
    }>>;
    appearance: z.ZodObject<{
        name: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
    }, {
        name: string;
    }>;
    model: z.ZodObject<{
        can_connect_accessory_keypad: z.ZodOptional<z.ZodBoolean>;
        display_name: z.ZodString;
        manufacturer_display_name: z.ZodString;
        has_built_in_keypad: z.ZodOptional<z.ZodBoolean>;
        offline_access_codes_supported: z.ZodOptional<z.ZodBoolean>;
        online_access_codes_supported: z.ZodOptional<z.ZodBoolean>;
        accessory_keypad_supported: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        display_name: string;
        manufacturer_display_name: string;
        can_connect_accessory_keypad?: boolean | undefined;
        has_built_in_keypad?: boolean | undefined;
        offline_access_codes_supported?: boolean | undefined;
        online_access_codes_supported?: boolean | undefined;
        accessory_keypad_supported?: boolean | undefined;
    }, {
        display_name: string;
        manufacturer_display_name: string;
        can_connect_accessory_keypad?: boolean | undefined;
        has_built_in_keypad?: boolean | undefined;
        offline_access_codes_supported?: boolean | undefined;
        online_access_codes_supported?: boolean | undefined;
        accessory_keypad_supported?: boolean | undefined;
    }>;
    has_direct_power: z.ZodOptional<z.ZodBoolean>;
    battery_level: z.ZodOptional<z.ZodNumber>;
    battery: z.ZodOptional<z.ZodObject<{
        level: z.ZodNumber;
        status: z.ZodEnum<["critical", "low", "good", "full"]>;
    }, "strip", z.ZodTypeAny, {
        status: "low" | "full" | "critical" | "good";
        level: number;
    }, {
        status: "low" | "full" | "critical" | "good";
        level: number;
    }>>;
    manufacturer: z.ZodOptional<z.ZodString>;
    image_url: z.ZodOptional<z.ZodString>;
    image_alt_text: z.ZodOptional<z.ZodString>;
    serial_number: z.ZodOptional<z.ZodString>;
    online_access_codes_enabled: z.ZodOptional<z.ZodBoolean>;
    offline_access_codes_enabled: z.ZodOptional<z.ZodBoolean>;
    supports_accessory_keypad: z.ZodOptional<z.ZodBoolean>;
    supports_offline_access_codes: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    name: string;
    appearance: {
        name: string;
    };
    online: boolean;
    model: {
        display_name: string;
        manufacturer_display_name: string;
        can_connect_accessory_keypad?: boolean | undefined;
        has_built_in_keypad?: boolean | undefined;
        offline_access_codes_supported?: boolean | undefined;
        online_access_codes_supported?: boolean | undefined;
        accessory_keypad_supported?: boolean | undefined;
    };
    accessory_keypad?: {
        is_connected: boolean;
        battery?: {
            level: number;
        } | undefined;
    } | undefined;
    has_direct_power?: boolean | undefined;
    battery_level?: number | undefined;
    battery?: {
        status: "low" | "full" | "critical" | "good";
        level: number;
    } | undefined;
    manufacturer?: string | undefined;
    image_url?: string | undefined;
    image_alt_text?: string | undefined;
    serial_number?: string | undefined;
    online_access_codes_enabled?: boolean | undefined;
    offline_access_codes_enabled?: boolean | undefined;
    supports_accessory_keypad?: boolean | undefined;
    supports_offline_access_codes?: boolean | undefined;
}, {
    name: string;
    appearance: {
        name: string;
    };
    online: boolean;
    model: {
        display_name: string;
        manufacturer_display_name: string;
        can_connect_accessory_keypad?: boolean | undefined;
        has_built_in_keypad?: boolean | undefined;
        offline_access_codes_supported?: boolean | undefined;
        online_access_codes_supported?: boolean | undefined;
        accessory_keypad_supported?: boolean | undefined;
    };
    accessory_keypad?: {
        is_connected: boolean;
        battery?: {
            level: number;
        } | undefined;
    } | undefined;
    has_direct_power?: boolean | undefined;
    battery_level?: number | undefined;
    battery?: {
        status: "low" | "full" | "critical" | "good";
        level: number;
    } | undefined;
    manufacturer?: string | undefined;
    image_url?: string | undefined;
    image_alt_text?: string | undefined;
    serial_number?: string | undefined;
    online_access_codes_enabled?: boolean | undefined;
    offline_access_codes_enabled?: boolean | undefined;
    supports_accessory_keypad?: boolean | undefined;
    supports_offline_access_codes?: boolean | undefined;
}>;
export declare const managed_device: z.ZodObject<{
    location: z.ZodNullable<z.ZodObject<{
        location_name: z.ZodOptional<z.ZodString>;
        timezone: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        location_name?: string | undefined;
        timezone?: string | undefined;
    }, {
        location_name?: string | undefined;
        timezone?: string | undefined;
    }>>;
    device_id: z.ZodString;
    created_at: z.ZodString;
    errors: z.ZodArray<z.ZodObject<{
        error_code: z.ZodString;
        message: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        message: string;
        error_code: string;
    }, {
        message: string;
        error_code: string;
    }>, "many">;
    warnings: z.ZodArray<z.ZodObject<{
        warning_code: z.ZodString;
        message: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        message: string;
        warning_code: string;
    }, {
        message: string;
        warning_code: string;
    }>, "many">;
    is_managed: z.ZodLiteral<true>;
    workspace_id: z.ZodString;
    display_name: z.ZodString;
    connected_account_id: z.ZodString;
    custom_metadata: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean]>>;
    device_type: z.ZodUnion<[z.ZodEnum<["akuvox_lock" | "august_lock" | "brivo_access_point" | "butterflymx_panel" | "avigilon_alta_entry" | "doorking_lock" | "genie_door" | "igloo_lock" | "linear_lock" | "lockly_lock" | "kwikset_lock" | "nuki_lock" | "salto_lock" | "schlage_lock" | "seam_relay" | "smartthings_lock" | "wyze_lock" | "yale_lock" | "two_n_intercom" | "controlbyweb_device" | "ttlock_lock" | "igloohome_lock" | "hubitat_lock" | "four_suites_door" | "dormakaba_oracode_door" | "tedee_lock"]>, z.ZodEnum<["noiseaware_activity_zone" | "minut_sensor"]>, z.ZodEnum<["ecobee_thermostat" | "nest_thermostat" | "honeywell_resideo_thermostat"]>, z.ZodEnum<["ios_phone" | "android_phone"]>]>;
    nickname: z.ZodOptional<z.ZodString>;
    capabilities_supported: z.ZodArray<z.ZodEnum<["access_code", "lock", "noise_detection", "thermostat", "battery", "phone"]>, "many">;
    properties: z.ZodIntersection<z.ZodIntersection<z.ZodIntersection<z.ZodObject<{
        online: z.ZodBoolean;
        name: z.ZodString;
        accessory_keypad: z.ZodOptional<z.ZodObject<{
            is_connected: z.ZodBoolean;
            battery: z.ZodOptional<z.ZodObject<{
                level: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                level: number;
            }, {
                level: number;
            }>>;
        }, "strip", z.ZodTypeAny, {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        }, {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        }>>;
        appearance: z.ZodObject<{
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>;
        model: z.ZodObject<{
            can_connect_accessory_keypad: z.ZodOptional<z.ZodBoolean>;
            display_name: z.ZodString;
            manufacturer_display_name: z.ZodString;
            has_built_in_keypad: z.ZodOptional<z.ZodBoolean>;
            offline_access_codes_supported: z.ZodOptional<z.ZodBoolean>;
            online_access_codes_supported: z.ZodOptional<z.ZodBoolean>;
            accessory_keypad_supported: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        }, {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        }>;
        has_direct_power: z.ZodOptional<z.ZodBoolean>;
        battery_level: z.ZodOptional<z.ZodNumber>;
        battery: z.ZodOptional<z.ZodObject<{
            level: z.ZodNumber;
            status: z.ZodEnum<["critical", "low", "good", "full"]>;
        }, "strip", z.ZodTypeAny, {
            status: "low" | "full" | "critical" | "good";
            level: number;
        }, {
            status: "low" | "full" | "critical" | "good";
            level: number;
        }>>;
        manufacturer: z.ZodOptional<z.ZodString>;
        image_url: z.ZodOptional<z.ZodString>;
        image_alt_text: z.ZodOptional<z.ZodString>;
        serial_number: z.ZodOptional<z.ZodString>;
        online_access_codes_enabled: z.ZodOptional<z.ZodBoolean>;
        offline_access_codes_enabled: z.ZodOptional<z.ZodBoolean>;
        supports_accessory_keypad: z.ZodOptional<z.ZodBoolean>;
        supports_offline_access_codes: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        appearance: {
            name: string;
        };
        online: boolean;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        has_direct_power?: boolean | undefined;
        battery_level?: number | undefined;
        battery?: {
            status: "low" | "full" | "critical" | "good";
            level: number;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        serial_number?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
        supports_accessory_keypad?: boolean | undefined;
        supports_offline_access_codes?: boolean | undefined;
    }, {
        name: string;
        appearance: {
            name: string;
        };
        online: boolean;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        has_direct_power?: boolean | undefined;
        battery_level?: number | undefined;
        battery?: {
            status: "low" | "full" | "critical" | "good";
            level: number;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        serial_number?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
        supports_accessory_keypad?: boolean | undefined;
        supports_offline_access_codes?: boolean | undefined;
    }>, z.ZodObject<{
        assa_abloy_credential_service_metadata: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            has_active_endpoint: z.ZodBoolean;
            endpoints: z.ZodArray<z.ZodObject<{
                endpoint_id: z.ZodString;
                is_active: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                endpoint_id: string;
                is_active: boolean;
            }, {
                endpoint_id: string;
                is_active: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        }, {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        }>>>;
    }, "strip", z.ZodTypeAny, {
        assa_abloy_credential_service_metadata?: {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        } | undefined;
    }, {
        assa_abloy_credential_service_metadata?: {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        } | undefined;
    }>>, z.ZodObject<{
        august_metadata: z.ZodOptional<z.ZodObject<{
            lock_id: z.ZodString;
            lock_name: z.ZodString;
            house_name: z.ZodString;
            has_keypad: z.ZodBoolean;
            keypad_battery_level: z.ZodOptional<z.ZodString>;
            model: z.ZodOptional<z.ZodString>;
            house_id: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        }, {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        }>>;
        avigilon_alta_metadata: z.ZodOptional<z.ZodObject<{
            entry_name: z.ZodString;
            org_name: z.ZodString;
            zone_id: z.ZodNumber;
            zone_name: z.ZodString;
            site_id: z.ZodNumber;
            site_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            site_id: number;
            site_name: string;
        }, {
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            site_id: number;
            site_name: string;
        }>>;
        schlage_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            access_code_length: z.ZodNullable<z.ZodNumber>;
            model: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            access_code_length: number | null;
            model?: string | undefined;
        }, {
            device_id: string;
            device_name: string;
            access_code_length: number | null;
            model?: string | undefined;
        }>>;
        smartthings_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
            location_id: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        }, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        }>>;
        lockly_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        }, {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        }>>;
        nuki_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            keypad_battery_critical: z.ZodOptional<z.ZodBoolean>;
            keypad_paired: z.ZodOptional<z.ZodBoolean>;
            keypad_2_paired: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        }, {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        }>>;
        kwikset_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            model_number: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            model_number: string;
        }, {
            device_id: string;
            device_name: string;
            model_number: string;
        }>>;
        salto_metadata: z.ZodOptional<z.ZodObject<{
            lock_id: z.ZodString;
            customer_reference: z.ZodString;
            lock_type: z.ZodString;
            battery_level: z.ZodString;
            locked_state: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        }, {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        }>>;
        genie_metadata: z.ZodOptional<z.ZodObject<{
            device_name: z.ZodString;
            door_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            door_name: string;
            device_name: string;
        }, {
            door_name: string;
            device_name: string;
        }>>;
        brivo_metadata: z.ZodOptional<z.ZodObject<{
            device_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_name: string;
        }, {
            device_name: string;
        }>>;
        igloo_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            bridge_id: z.ZodString;
            model: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        }, {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        }>>;
        noiseaware_metadata: z.ZodOptional<z.ZodObject<{
            device_model: z.ZodEnum<["indoor", "outdoor"]>;
            noise_level_nrs: z.ZodNumber;
            noise_level_decibel: z.ZodNumber;
            device_name: z.ZodString;
            device_id: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        }, {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        }>>;
        minut_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            latest_sensor_values: z.ZodObject<{
                temperature: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    time: string;
                    value: number;
                }, {
                    time: string;
                    value: number;
                }>;
                sound: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    time: string;
                    value: number;
                }, {
                    time: string;
                    value: number;
                }>;
                humidity: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    time: string;
                    value: number;
                }, {
                    time: string;
                    value: number;
                }>;
                pressure: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    time: string;
                    value: number;
                }, {
                    time: string;
                    value: number;
                }>;
                accelerometer_z: z.ZodObject<{
                    time: z.ZodString;
                    value: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    time: string;
                    value: number;
                }, {
                    time: string;
                    value: number;
                }>;
            }, "strip", z.ZodTypeAny, {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            }, {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            }>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            };
        }, {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            };
        }>>;
        four_suites_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodNumber;
            device_name: z.ZodString;
            reclose_delay_in_seconds: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        }, {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        }>>;
        two_n_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodNumber;
            device_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: number;
            device_name: string;
        }, {
            device_id: number;
            device_name: string;
        }>>;
        controlbyweb_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            relay_name: z.ZodNullable<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        }, {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        }>>;
        ttlock_metadata: z.ZodOptional<z.ZodObject<{
            lock_id: z.ZodNumber;
            lock_alias: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            lock_id: number;
            lock_alias: string;
        }, {
            lock_id: number;
            lock_alias: string;
        }>>;
        seam_bridge_metadata: z.ZodOptional<z.ZodObject<{
            unlock_method: z.ZodOptional<z.ZodEnum<["bridge", "doorking"]>>;
            device_num: z.ZodNumber;
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        }, {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        }>>;
        igloohome_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            bridge_id: z.ZodOptional<z.ZodString>;
            bridge_name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
        }, {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
        }>>;
        nest_metadata: z.ZodOptional<z.ZodObject<{
            nest_device_id: z.ZodString;
            device_name: z.ZodString;
            custom_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_name: string;
            nest_device_id: string;
            custom_name: string;
        }, {
            device_name: string;
            nest_device_id: string;
            custom_name: string;
        }>>;
        ecobee_metadata: z.ZodOptional<z.ZodObject<{
            ecobee_device_id: z.ZodString;
            device_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_name: string;
            ecobee_device_id: string;
        }, {
            device_name: string;
            ecobee_device_id: string;
        }>>;
        honeywell_resideo_metadata: z.ZodOptional<z.ZodObject<{
            honeywell_resideo_device_id: z.ZodString;
            device_name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_name: string;
            honeywell_resideo_device_id: string;
        }, {
            device_name: string;
            honeywell_resideo_device_id: string;
        }>>;
        hubitat_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            device_label: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            device_label: string;
        }, {
            device_id: string;
            device_name: string;
            device_label: string;
        }>>;
        dormakaba_oracode_metadata: z.ZodOptional<z.ZodObject<{
            door_id: z.ZodNumber;
            door_name: z.ZodString;
            device_id: z.ZodOptional<z.ZodNumber>;
            site_id: z.ZodNumber;
            site_name: z.ZodString;
            iana_timezone: z.ZodOptional<z.ZodString>;
            predefined_time_slots: z.ZodOptional<z.ZodArray<z.ZodObject<{
                name: z.ZodString;
                prefix: z.ZodNumber;
                check_in_time: z.ZodString;
                check_out_time: z.ZodString;
                is_24_hour: z.ZodBoolean;
                is_biweekly_mode: z.ZodBoolean;
                is_one_shot: z.ZodBoolean;
                is_master: z.ZodBoolean;
                ext_dormakaba_oracode_user_level_prefix: z.ZodNumber;
                dormakaba_oracode_user_level_id: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }, {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }>, "many">>;
        }, "strip", z.ZodTypeAny, {
            door_name: string;
            site_id: number;
            site_name: string;
            door_id: number;
            device_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        }, {
            door_name: string;
            site_id: number;
            site_name: string;
            door_id: number;
            device_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        }>>;
        wyze_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodString;
            device_name: z.ZodString;
            product_name: z.ZodString;
            product_type: z.ZodString;
            product_model: z.ZodString;
            device_info_model: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
        }, {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
        }>>;
        tedee_metadata: z.ZodOptional<z.ZodObject<{
            device_id: z.ZodNumber;
            serial_number: z.ZodString;
            device_name: z.ZodString;
            device_model: z.ZodString;
            bridge_id: z.ZodNumber;
            bridge_name: z.ZodString;
            keypad_id: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        }, {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        august_metadata?: {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        } | undefined;
        avigilon_alta_metadata?: {
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            site_id: number;
            site_name: string;
        } | undefined;
        schlage_metadata?: {
            device_id: string;
            device_name: string;
            access_code_length: number | null;
            model?: string | undefined;
        } | undefined;
        smartthings_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        } | undefined;
        lockly_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        nuki_metadata?: {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        } | undefined;
        kwikset_metadata?: {
            device_id: string;
            device_name: string;
            model_number: string;
        } | undefined;
        salto_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        genie_metadata?: {
            door_name: string;
            device_name: string;
        } | undefined;
        brivo_metadata?: {
            device_name: string;
        } | undefined;
        igloo_metadata?: {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        } | undefined;
        noiseaware_metadata?: {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        } | undefined;
        minut_metadata?: {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            };
        } | undefined;
        four_suites_metadata?: {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        } | undefined;
        two_n_metadata?: {
            device_id: number;
            device_name: string;
        } | undefined;
        controlbyweb_metadata?: {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        } | undefined;
        ttlock_metadata?: {
            lock_id: number;
            lock_alias: string;
        } | undefined;
        seam_bridge_metadata?: {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        } | undefined;
        igloohome_metadata?: {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
        } | undefined;
        nest_metadata?: {
            device_name: string;
            nest_device_id: string;
            custom_name: string;
        } | undefined;
        ecobee_metadata?: {
            device_name: string;
            ecobee_device_id: string;
        } | undefined;
        honeywell_resideo_metadata?: {
            device_name: string;
            honeywell_resideo_device_id: string;
        } | undefined;
        hubitat_metadata?: {
            device_id: string;
            device_name: string;
            device_label: string;
        } | undefined;
        dormakaba_oracode_metadata?: {
            door_name: string;
            site_id: number;
            site_name: string;
            door_id: number;
            device_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        } | undefined;
        wyze_metadata?: {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
        } | undefined;
        tedee_metadata?: {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        } | undefined;
    }, {
        august_metadata?: {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        } | undefined;
        avigilon_alta_metadata?: {
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            site_id: number;
            site_name: string;
        } | undefined;
        schlage_metadata?: {
            device_id: string;
            device_name: string;
            access_code_length: number | null;
            model?: string | undefined;
        } | undefined;
        smartthings_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        } | undefined;
        lockly_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        nuki_metadata?: {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        } | undefined;
        kwikset_metadata?: {
            device_id: string;
            device_name: string;
            model_number: string;
        } | undefined;
        salto_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        genie_metadata?: {
            door_name: string;
            device_name: string;
        } | undefined;
        brivo_metadata?: {
            device_name: string;
        } | undefined;
        igloo_metadata?: {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        } | undefined;
        noiseaware_metadata?: {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        } | undefined;
        minut_metadata?: {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            };
        } | undefined;
        four_suites_metadata?: {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        } | undefined;
        two_n_metadata?: {
            device_id: number;
            device_name: string;
        } | undefined;
        controlbyweb_metadata?: {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        } | undefined;
        ttlock_metadata?: {
            lock_id: number;
            lock_alias: string;
        } | undefined;
        seam_bridge_metadata?: {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        } | undefined;
        igloohome_metadata?: {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
        } | undefined;
        nest_metadata?: {
            device_name: string;
            nest_device_id: string;
            custom_name: string;
        } | undefined;
        ecobee_metadata?: {
            device_name: string;
            ecobee_device_id: string;
        } | undefined;
        honeywell_resideo_metadata?: {
            device_name: string;
            honeywell_resideo_device_id: string;
        } | undefined;
        hubitat_metadata?: {
            device_id: string;
            device_name: string;
            device_label: string;
        } | undefined;
        dormakaba_oracode_metadata?: {
            door_name: string;
            site_id: number;
            site_name: string;
            door_id: number;
            device_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        } | undefined;
        wyze_metadata?: {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
        } | undefined;
        tedee_metadata?: {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        } | undefined;
    }>>, z.ZodIntersection<z.ZodObject<{
        _experimental_supported_code_from_access_codes_lengths: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>>;
        code_constraints: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            constraint_type: z.ZodEnum<["no_zeros", "cannot_start_with_12", "no_triple_consecutive_ints", "cannot_specify_pin_code", "pin_code_matches_existing_set", "start_date_in_future", "no_ascending_or_descending_sequence", "at_least_three_unique_digits"]>;
        }, "strip", z.ZodTypeAny, {
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits";
        }, {
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits";
        }>, z.ZodObject<{
            constraint_type: z.ZodLiteral<"name_length">;
            min_length: z.ZodOptional<z.ZodNumber>;
            max_length: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            constraint_type: "name_length";
            min_length?: number | undefined;
            max_length?: number | undefined;
        }, {
            constraint_type: "name_length";
            min_length?: number | undefined;
            max_length?: number | undefined;
        }>]>, "many">>>;
        supported_code_lengths: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>>;
        max_active_codes_supported: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
        supports_backup_access_code_pool: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
        has_native_entry_events: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
        locked: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
        keypad_battery: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            level: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            level: number;
        }, {
            level: number;
        }>>>;
        door_open: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
    }, "strip", z.ZodTypeAny, {
        _experimental_supported_code_from_access_codes_lengths?: number[] | undefined;
        code_constraints?: ({
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits";
        } | {
            constraint_type: "name_length";
            min_length?: number | undefined;
            max_length?: number | undefined;
        })[] | undefined;
        supported_code_lengths?: number[] | undefined;
        max_active_codes_supported?: number | undefined;
        supports_backup_access_code_pool?: boolean | undefined;
        has_native_entry_events?: boolean | undefined;
        locked?: boolean | undefined;
        keypad_battery?: {
            level: number;
        } | undefined;
        door_open?: boolean | undefined;
    }, {
        _experimental_supported_code_from_access_codes_lengths?: number[] | undefined;
        code_constraints?: ({
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits";
        } | {
            constraint_type: "name_length";
            min_length?: number | undefined;
            max_length?: number | undefined;
        })[] | undefined;
        supported_code_lengths?: number[] | undefined;
        max_active_codes_supported?: number | undefined;
        supports_backup_access_code_pool?: boolean | undefined;
        has_native_entry_events?: boolean | undefined;
        locked?: boolean | undefined;
        keypad_battery?: {
            level: number;
        } | undefined;
        door_open?: boolean | undefined;
    }>, z.ZodUnion<[z.ZodObject<{
        temperature_fahrenheit: z.ZodOptional<z.ZodNumber>;
        temperature_celsius: z.ZodOptional<z.ZodNumber>;
        relative_humidity: z.ZodOptional<z.ZodNumber>;
        can_enable_automatic_heating: z.ZodOptional<z.ZodBoolean>;
        can_enable_automatic_cooling: z.ZodOptional<z.ZodBoolean>;
        available_hvac_mode_settings: z.ZodOptional<z.ZodArray<z.ZodEnum<["off", "heat", "cool", "heat_cool"]>, "many">>;
        is_heating: z.ZodOptional<z.ZodBoolean>;
        is_cooling: z.ZodOptional<z.ZodBoolean>;
        is_fan_running: z.ZodOptional<z.ZodBoolean>;
        fan_mode_setting: z.ZodOptional<z.ZodEnum<["auto", "on"]>>;
        is_temporary_manual_override_active: z.ZodOptional<z.ZodBoolean>;
        current_climate_setting: z.ZodOptional<z.ZodObject<{
            automatic_heating_enabled: z.ZodBoolean;
            automatic_cooling_enabled: z.ZodBoolean;
            hvac_mode_setting: z.ZodEnum<["off", "heat", "cool", "heat_cool"]>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            manual_override_allowed: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }>>;
        default_climate_setting: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            automatic_heating_enabled: z.ZodBoolean;
            automatic_cooling_enabled: z.ZodBoolean;
            hvac_mode_setting: z.ZodEnum<["off", "heat", "cool", "heat_cool"]>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            manual_override_allowed: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }>>>;
        is_climate_setting_schedule_active: z.ZodOptional<z.ZodBoolean>;
        active_climate_setting_schedule: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            name: z.ZodOptional<z.ZodString>;
            device_id: z.ZodString;
            created_at: z.ZodString;
            errors: z.ZodAny;
            climate_setting_schedule_id: z.ZodString;
            schedule_type: z.ZodLiteral<"time_bound">;
            schedule_starts_at: z.ZodString;
            schedule_ends_at: z.ZodString;
            automatic_heating_enabled: z.ZodOptional<z.ZodBoolean>;
            automatic_cooling_enabled: z.ZodOptional<z.ZodBoolean>;
            hvac_mode_setting: z.ZodOptional<z.ZodEnum<["off", "heat", "cool", "heat_cool"]>>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            manual_override_allowed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        }, {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        }>>>;
        min_cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        min_cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        max_cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        max_cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        min_heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        min_heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        max_heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        max_heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        is_cooling_available: z.ZodOptional<z.ZodLiteral<true>>;
        is_heating_available: z.ZodOptional<z.ZodLiteral<true>>;
        min_heating_cooling_delta_celsius: z.ZodOptional<z.ZodNumber>;
        min_heating_cooling_delta_fahrenheit: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
        is_heating_available?: true | undefined;
        min_heating_cooling_delta_celsius?: number | undefined;
        min_heating_cooling_delta_fahrenheit?: number | undefined;
    }, {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
        is_heating_available?: true | undefined;
        min_heating_cooling_delta_celsius?: number | undefined;
        min_heating_cooling_delta_fahrenheit?: number | undefined;
    }>, z.ZodObject<{
        temperature_fahrenheit: z.ZodOptional<z.ZodNumber>;
        temperature_celsius: z.ZodOptional<z.ZodNumber>;
        relative_humidity: z.ZodOptional<z.ZodNumber>;
        can_enable_automatic_heating: z.ZodOptional<z.ZodBoolean>;
        can_enable_automatic_cooling: z.ZodOptional<z.ZodBoolean>;
        available_hvac_mode_settings: z.ZodOptional<z.ZodArray<z.ZodEnum<["off", "heat", "cool", "heat_cool"]>, "many">>;
        is_cooling_available: z.ZodOptional<z.ZodLiteral<false>>;
        is_heating: z.ZodOptional<z.ZodBoolean>;
        is_cooling: z.ZodOptional<z.ZodBoolean>;
        is_fan_running: z.ZodOptional<z.ZodBoolean>;
        fan_mode_setting: z.ZodOptional<z.ZodEnum<["auto", "on"]>>;
        is_temporary_manual_override_active: z.ZodOptional<z.ZodBoolean>;
        current_climate_setting: z.ZodOptional<z.ZodObject<{
            automatic_heating_enabled: z.ZodBoolean;
            automatic_cooling_enabled: z.ZodBoolean;
            hvac_mode_setting: z.ZodEnum<["off", "heat", "cool", "heat_cool"]>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            manual_override_allowed: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }>>;
        default_climate_setting: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            automatic_heating_enabled: z.ZodBoolean;
            automatic_cooling_enabled: z.ZodBoolean;
            hvac_mode_setting: z.ZodEnum<["off", "heat", "cool", "heat_cool"]>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            manual_override_allowed: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }>>>;
        is_climate_setting_schedule_active: z.ZodOptional<z.ZodBoolean>;
        active_climate_setting_schedule: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            name: z.ZodOptional<z.ZodString>;
            device_id: z.ZodString;
            created_at: z.ZodString;
            errors: z.ZodAny;
            climate_setting_schedule_id: z.ZodString;
            schedule_type: z.ZodLiteral<"time_bound">;
            schedule_starts_at: z.ZodString;
            schedule_ends_at: z.ZodString;
            automatic_heating_enabled: z.ZodOptional<z.ZodBoolean>;
            automatic_cooling_enabled: z.ZodOptional<z.ZodBoolean>;
            hvac_mode_setting: z.ZodOptional<z.ZodEnum<["off", "heat", "cool", "heat_cool"]>>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            manual_override_allowed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        }, {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        }>>>;
        min_heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        min_heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        max_heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        max_heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        is_heating_available: z.ZodOptional<z.ZodLiteral<true>>;
    }, "strip", z.ZodTypeAny, {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_cooling_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_heating_available?: true | undefined;
    }, {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_cooling_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_heating_available?: true | undefined;
    }>, z.ZodObject<{
        temperature_fahrenheit: z.ZodOptional<z.ZodNumber>;
        temperature_celsius: z.ZodOptional<z.ZodNumber>;
        relative_humidity: z.ZodOptional<z.ZodNumber>;
        can_enable_automatic_heating: z.ZodOptional<z.ZodBoolean>;
        can_enable_automatic_cooling: z.ZodOptional<z.ZodBoolean>;
        available_hvac_mode_settings: z.ZodOptional<z.ZodArray<z.ZodEnum<["off", "heat", "cool", "heat_cool"]>, "many">>;
        is_heating_available: z.ZodOptional<z.ZodLiteral<false>>;
        is_heating: z.ZodOptional<z.ZodBoolean>;
        is_cooling: z.ZodOptional<z.ZodBoolean>;
        is_fan_running: z.ZodOptional<z.ZodBoolean>;
        fan_mode_setting: z.ZodOptional<z.ZodEnum<["auto", "on"]>>;
        is_temporary_manual_override_active: z.ZodOptional<z.ZodBoolean>;
        current_climate_setting: z.ZodOptional<z.ZodObject<{
            automatic_heating_enabled: z.ZodBoolean;
            automatic_cooling_enabled: z.ZodBoolean;
            hvac_mode_setting: z.ZodEnum<["off", "heat", "cool", "heat_cool"]>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            manual_override_allowed: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }>>;
        default_climate_setting: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            automatic_heating_enabled: z.ZodBoolean;
            automatic_cooling_enabled: z.ZodBoolean;
            hvac_mode_setting: z.ZodEnum<["off", "heat", "cool", "heat_cool"]>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            heating_set_point_celsius: z.ZodOptional<z.ZodNumber>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
            manual_override_allowed: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }, {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        }>>>;
        is_climate_setting_schedule_active: z.ZodOptional<z.ZodBoolean>;
        active_climate_setting_schedule: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            name: z.ZodOptional<z.ZodString>;
            device_id: z.ZodString;
            created_at: z.ZodString;
            errors: z.ZodAny;
            climate_setting_schedule_id: z.ZodString;
            schedule_type: z.ZodLiteral<"time_bound">;
            schedule_starts_at: z.ZodString;
            schedule_ends_at: z.ZodString;
            automatic_heating_enabled: z.ZodOptional<z.ZodBoolean>;
            automatic_cooling_enabled: z.ZodOptional<z.ZodBoolean>;
            hvac_mode_setting: z.ZodOptional<z.ZodEnum<["off", "heat", "cool", "heat_cool"]>>;
            cooling_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_celsius: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            cooling_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            heating_set_point_fahrenheit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            manual_override_allowed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        }, {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        }>>>;
        min_cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        min_cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        max_cooling_set_point_celsius: z.ZodOptional<z.ZodNumber>;
        max_cooling_set_point_fahrenheit: z.ZodOptional<z.ZodNumber>;
        is_cooling_available: z.ZodOptional<z.ZodLiteral<true>>;
    }, "strip", z.ZodTypeAny, {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
    }, {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
    }>]>>>;
    can_remotely_unlock: z.ZodOptional<z.ZodBoolean>;
    can_remotely_lock: z.ZodOptional<z.ZodBoolean>;
    can_program_offline_access_codes: z.ZodOptional<z.ZodBoolean>;
    can_program_online_access_codes: z.ZodOptional<z.ZodBoolean>;
    can_simulate_removal: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    location: {
        location_name?: string | undefined;
        timezone?: string | undefined;
    } | null;
    device_id: string;
    created_at: string;
    errors: {
        message: string;
        error_code: string;
    }[];
    warnings: {
        message: string;
        warning_code: string;
    }[];
    is_managed: true;
    workspace_id: string;
    display_name: string;
    connected_account_id: string;
    custom_metadata: Record<string, string | boolean>;
    device_type: "akuvox_lock" | "august_lock" | "brivo_access_point" | "butterflymx_panel" | "avigilon_alta_entry" | "doorking_lock" | "genie_door" | "igloo_lock" | "linear_lock" | "lockly_lock" | "kwikset_lock" | "nuki_lock" | "salto_lock" | "schlage_lock" | "seam_relay" | "smartthings_lock" | "wyze_lock" | "yale_lock" | "two_n_intercom" | "controlbyweb_device" | "ttlock_lock" | "igloohome_lock" | "hubitat_lock" | "four_suites_door" | "dormakaba_oracode_door" | "tedee_lock" | "noiseaware_activity_zone" | "minut_sensor" | "ecobee_thermostat" | "nest_thermostat" | "honeywell_resideo_thermostat" | "ios_phone" | "android_phone";
    capabilities_supported: ("access_code" | "lock" | "noise_detection" | "thermostat" | "battery" | "phone")[];
    properties: ({
        name: string;
        appearance: {
            name: string;
        };
        online: boolean;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        has_direct_power?: boolean | undefined;
        battery_level?: number | undefined;
        battery?: {
            status: "low" | "full" | "critical" | "good";
            level: number;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        serial_number?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
        supports_accessory_keypad?: boolean | undefined;
        supports_offline_access_codes?: boolean | undefined;
    } & {
        assa_abloy_credential_service_metadata?: {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        } | undefined;
    } & {
        august_metadata?: {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        } | undefined;
        avigilon_alta_metadata?: {
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            site_id: number;
            site_name: string;
        } | undefined;
        schlage_metadata?: {
            device_id: string;
            device_name: string;
            access_code_length: number | null;
            model?: string | undefined;
        } | undefined;
        smartthings_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        } | undefined;
        lockly_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        nuki_metadata?: {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        } | undefined;
        kwikset_metadata?: {
            device_id: string;
            device_name: string;
            model_number: string;
        } | undefined;
        salto_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        genie_metadata?: {
            door_name: string;
            device_name: string;
        } | undefined;
        brivo_metadata?: {
            device_name: string;
        } | undefined;
        igloo_metadata?: {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        } | undefined;
        noiseaware_metadata?: {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        } | undefined;
        minut_metadata?: {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            };
        } | undefined;
        four_suites_metadata?: {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        } | undefined;
        two_n_metadata?: {
            device_id: number;
            device_name: string;
        } | undefined;
        controlbyweb_metadata?: {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        } | undefined;
        ttlock_metadata?: {
            lock_id: number;
            lock_alias: string;
        } | undefined;
        seam_bridge_metadata?: {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        } | undefined;
        igloohome_metadata?: {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
        } | undefined;
        nest_metadata?: {
            device_name: string;
            nest_device_id: string;
            custom_name: string;
        } | undefined;
        ecobee_metadata?: {
            device_name: string;
            ecobee_device_id: string;
        } | undefined;
        honeywell_resideo_metadata?: {
            device_name: string;
            honeywell_resideo_device_id: string;
        } | undefined;
        hubitat_metadata?: {
            device_id: string;
            device_name: string;
            device_label: string;
        } | undefined;
        dormakaba_oracode_metadata?: {
            door_name: string;
            site_id: number;
            site_name: string;
            door_id: number;
            device_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        } | undefined;
        wyze_metadata?: {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
        } | undefined;
        tedee_metadata?: {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        } | undefined;
    } & ({
        _experimental_supported_code_from_access_codes_lengths?: number[] | undefined;
        code_constraints?: ({
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits";
        } | {
            constraint_type: "name_length";
            min_length?: number | undefined;
            max_length?: number | undefined;
        })[] | undefined;
        supported_code_lengths?: number[] | undefined;
        max_active_codes_supported?: number | undefined;
        supports_backup_access_code_pool?: boolean | undefined;
        has_native_entry_events?: boolean | undefined;
        locked?: boolean | undefined;
        keypad_battery?: {
            level: number;
        } | undefined;
        door_open?: boolean | undefined;
    } & ({
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
        is_heating_available?: true | undefined;
        min_heating_cooling_delta_celsius?: number | undefined;
        min_heating_cooling_delta_fahrenheit?: number | undefined;
    } | {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_cooling_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_heating_available?: true | undefined;
    } | {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
    }))) & (({
        name: string;
        appearance: {
            name: string;
        };
        online: boolean;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        has_direct_power?: boolean | undefined;
        battery_level?: number | undefined;
        battery?: {
            status: "low" | "full" | "critical" | "good";
            level: number;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        serial_number?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
        supports_accessory_keypad?: boolean | undefined;
        supports_offline_access_codes?: boolean | undefined;
    } & {
        assa_abloy_credential_service_metadata?: {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        } | undefined;
    } & {
        august_metadata?: {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        } | undefined;
        avigilon_alta_metadata?: {
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            site_id: number;
            site_name: string;
        } | undefined;
        schlage_metadata?: {
            device_id: string;
            device_name: string;
            access_code_length: number | null;
            model?: string | undefined;
        } | undefined;
        smartthings_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        } | undefined;
        lockly_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        nuki_metadata?: {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        } | undefined;
        kwikset_metadata?: {
            device_id: string;
            device_name: string;
            model_number: string;
        } | undefined;
        salto_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        genie_metadata?: {
            door_name: string;
            device_name: string;
        } | undefined;
        brivo_metadata?: {
            device_name: string;
        } | undefined;
        igloo_metadata?: {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        } | undefined;
        noiseaware_metadata?: {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        } | undefined;
        minut_metadata?: {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            };
        } | undefined;
        four_suites_metadata?: {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        } | undefined;
        two_n_metadata?: {
            device_id: number;
            device_name: string;
        } | undefined;
        controlbyweb_metadata?: {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        } | undefined;
        ttlock_metadata?: {
            lock_id: number;
            lock_alias: string;
        } | undefined;
        seam_bridge_metadata?: {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        } | undefined;
        igloohome_metadata?: {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
        } | undefined;
        nest_metadata?: {
            device_name: string;
            nest_device_id: string;
            custom_name: string;
        } | undefined;
        ecobee_metadata?: {
            device_name: string;
            ecobee_device_id: string;
        } | undefined;
        honeywell_resideo_metadata?: {
            device_name: string;
            honeywell_resideo_device_id: string;
        } | undefined;
        hubitat_metadata?: {
            device_id: string;
            device_name: string;
            device_label: string;
        } | undefined;
        dormakaba_oracode_metadata?: {
            door_name: string;
            site_id: number;
            site_name: string;
            door_id: number;
            device_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        } | undefined;
        wyze_metadata?: {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
        } | undefined;
        tedee_metadata?: {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        } | undefined;
    } & ({
        _experimental_supported_code_from_access_codes_lengths?: number[] | undefined;
        code_constraints?: ({
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits";
        } | {
            constraint_type: "name_length";
            min_length?: number | undefined;
            max_length?: number | undefined;
        })[] | undefined;
        supported_code_lengths?: number[] | undefined;
        max_active_codes_supported?: number | undefined;
        supports_backup_access_code_pool?: boolean | undefined;
        has_native_entry_events?: boolean | undefined;
        locked?: boolean | undefined;
        keypad_battery?: {
            level: number;
        } | undefined;
        door_open?: boolean | undefined;
    } & ({
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
        is_heating_available?: true | undefined;
        min_heating_cooling_delta_celsius?: number | undefined;
        min_heating_cooling_delta_fahrenheit?: number | undefined;
    } | {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_cooling_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_heating_available?: true | undefined;
    } | {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
    }))) | undefined);
    nickname?: string | undefined;
    can_remotely_unlock?: boolean | undefined;
    can_remotely_lock?: boolean | undefined;
    can_program_offline_access_codes?: boolean | undefined;
    can_program_online_access_codes?: boolean | undefined;
    can_simulate_removal?: boolean | undefined;
}, {
    location: {
        location_name?: string | undefined;
        timezone?: string | undefined;
    } | null;
    device_id: string;
    created_at: string;
    errors: {
        message: string;
        error_code: string;
    }[];
    warnings: {
        message: string;
        warning_code: string;
    }[];
    is_managed: true;
    workspace_id: string;
    display_name: string;
    connected_account_id: string;
    custom_metadata: Record<string, string | boolean>;
    device_type: "akuvox_lock" | "august_lock" | "brivo_access_point" | "butterflymx_panel" | "avigilon_alta_entry" | "doorking_lock" | "genie_door" | "igloo_lock" | "linear_lock" | "lockly_lock" | "kwikset_lock" | "nuki_lock" | "salto_lock" | "schlage_lock" | "seam_relay" | "smartthings_lock" | "wyze_lock" | "yale_lock" | "two_n_intercom" | "controlbyweb_device" | "ttlock_lock" | "igloohome_lock" | "hubitat_lock" | "four_suites_door" | "dormakaba_oracode_door" | "tedee_lock" | "noiseaware_activity_zone" | "minut_sensor" | "ecobee_thermostat" | "nest_thermostat" | "honeywell_resideo_thermostat" | "ios_phone" | "android_phone";
    capabilities_supported: ("access_code" | "lock" | "noise_detection" | "thermostat" | "battery" | "phone")[];
    properties: ({
        name: string;
        appearance: {
            name: string;
        };
        online: boolean;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        has_direct_power?: boolean | undefined;
        battery_level?: number | undefined;
        battery?: {
            status: "low" | "full" | "critical" | "good";
            level: number;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        serial_number?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
        supports_accessory_keypad?: boolean | undefined;
        supports_offline_access_codes?: boolean | undefined;
    } & {
        assa_abloy_credential_service_metadata?: {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        } | undefined;
    } & {
        august_metadata?: {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        } | undefined;
        avigilon_alta_metadata?: {
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            site_id: number;
            site_name: string;
        } | undefined;
        schlage_metadata?: {
            device_id: string;
            device_name: string;
            access_code_length: number | null;
            model?: string | undefined;
        } | undefined;
        smartthings_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        } | undefined;
        lockly_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        nuki_metadata?: {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        } | undefined;
        kwikset_metadata?: {
            device_id: string;
            device_name: string;
            model_number: string;
        } | undefined;
        salto_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        genie_metadata?: {
            door_name: string;
            device_name: string;
        } | undefined;
        brivo_metadata?: {
            device_name: string;
        } | undefined;
        igloo_metadata?: {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        } | undefined;
        noiseaware_metadata?: {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        } | undefined;
        minut_metadata?: {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            };
        } | undefined;
        four_suites_metadata?: {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        } | undefined;
        two_n_metadata?: {
            device_id: number;
            device_name: string;
        } | undefined;
        controlbyweb_metadata?: {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        } | undefined;
        ttlock_metadata?: {
            lock_id: number;
            lock_alias: string;
        } | undefined;
        seam_bridge_metadata?: {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        } | undefined;
        igloohome_metadata?: {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
        } | undefined;
        nest_metadata?: {
            device_name: string;
            nest_device_id: string;
            custom_name: string;
        } | undefined;
        ecobee_metadata?: {
            device_name: string;
            ecobee_device_id: string;
        } | undefined;
        honeywell_resideo_metadata?: {
            device_name: string;
            honeywell_resideo_device_id: string;
        } | undefined;
        hubitat_metadata?: {
            device_id: string;
            device_name: string;
            device_label: string;
        } | undefined;
        dormakaba_oracode_metadata?: {
            door_name: string;
            site_id: number;
            site_name: string;
            door_id: number;
            device_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        } | undefined;
        wyze_metadata?: {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
        } | undefined;
        tedee_metadata?: {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        } | undefined;
    } & ({
        _experimental_supported_code_from_access_codes_lengths?: number[] | undefined;
        code_constraints?: ({
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits";
        } | {
            constraint_type: "name_length";
            min_length?: number | undefined;
            max_length?: number | undefined;
        })[] | undefined;
        supported_code_lengths?: number[] | undefined;
        max_active_codes_supported?: number | undefined;
        supports_backup_access_code_pool?: boolean | undefined;
        has_native_entry_events?: boolean | undefined;
        locked?: boolean | undefined;
        keypad_battery?: {
            level: number;
        } | undefined;
        door_open?: boolean | undefined;
    } & ({
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
        is_heating_available?: true | undefined;
        min_heating_cooling_delta_celsius?: number | undefined;
        min_heating_cooling_delta_fahrenheit?: number | undefined;
    } | {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_cooling_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_heating_available?: true | undefined;
    } | {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
    }))) & (({
        name: string;
        appearance: {
            name: string;
        };
        online: boolean;
        model: {
            display_name: string;
            manufacturer_display_name: string;
            can_connect_accessory_keypad?: boolean | undefined;
            has_built_in_keypad?: boolean | undefined;
            offline_access_codes_supported?: boolean | undefined;
            online_access_codes_supported?: boolean | undefined;
            accessory_keypad_supported?: boolean | undefined;
        };
        accessory_keypad?: {
            is_connected: boolean;
            battery?: {
                level: number;
            } | undefined;
        } | undefined;
        has_direct_power?: boolean | undefined;
        battery_level?: number | undefined;
        battery?: {
            status: "low" | "full" | "critical" | "good";
            level: number;
        } | undefined;
        manufacturer?: string | undefined;
        image_url?: string | undefined;
        image_alt_text?: string | undefined;
        serial_number?: string | undefined;
        online_access_codes_enabled?: boolean | undefined;
        offline_access_codes_enabled?: boolean | undefined;
        supports_accessory_keypad?: boolean | undefined;
        supports_offline_access_codes?: boolean | undefined;
    } & {
        assa_abloy_credential_service_metadata?: {
            has_active_endpoint: boolean;
            endpoints: {
                endpoint_id: string;
                is_active: boolean;
            }[];
        } | undefined;
    } & {
        august_metadata?: {
            lock_id: string;
            lock_name: string;
            house_name: string;
            has_keypad: boolean;
            keypad_battery_level?: string | undefined;
            model?: string | undefined;
            house_id?: string | undefined;
        } | undefined;
        avigilon_alta_metadata?: {
            entry_name: string;
            org_name: string;
            zone_id: number;
            zone_name: string;
            site_id: number;
            site_name: string;
        } | undefined;
        schlage_metadata?: {
            device_id: string;
            device_name: string;
            access_code_length: number | null;
            model?: string | undefined;
        } | undefined;
        smartthings_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
            location_id?: string | undefined;
        } | undefined;
        lockly_metadata?: {
            device_id: string;
            device_name: string;
            model?: string | undefined;
        } | undefined;
        nuki_metadata?: {
            device_id: string;
            device_name: string;
            keypad_battery_critical?: boolean | undefined;
            keypad_paired?: boolean | undefined;
            keypad_2_paired?: boolean | undefined;
        } | undefined;
        kwikset_metadata?: {
            device_id: string;
            device_name: string;
            model_number: string;
        } | undefined;
        salto_metadata?: {
            lock_id: string;
            customer_reference: string;
            lock_type: string;
            battery_level: string;
            locked_state: string;
            model?: string | undefined;
        } | undefined;
        genie_metadata?: {
            door_name: string;
            device_name: string;
        } | undefined;
        brivo_metadata?: {
            device_name: string;
        } | undefined;
        igloo_metadata?: {
            device_id: string;
            bridge_id: string;
            model?: string | undefined;
        } | undefined;
        noiseaware_metadata?: {
            device_id: string;
            device_name: string;
            device_model: "indoor" | "outdoor";
            noise_level_nrs: number;
            noise_level_decibel: number;
        } | undefined;
        minut_metadata?: {
            device_id: string;
            device_name: string;
            latest_sensor_values: {
                pressure: {
                    time: string;
                    value: number;
                };
                temperature: {
                    time: string;
                    value: number;
                };
                sound: {
                    time: string;
                    value: number;
                };
                humidity: {
                    time: string;
                    value: number;
                };
                accelerometer_z: {
                    time: string;
                    value: number;
                };
            };
        } | undefined;
        four_suites_metadata?: {
            device_id: number;
            device_name: string;
            reclose_delay_in_seconds: number;
        } | undefined;
        two_n_metadata?: {
            device_id: number;
            device_name: string;
        } | undefined;
        controlbyweb_metadata?: {
            device_id: string;
            device_name: string;
            relay_name: string | null;
        } | undefined;
        ttlock_metadata?: {
            lock_id: number;
            lock_alias: string;
        } | undefined;
        seam_bridge_metadata?: {
            name: string;
            device_num: number;
            unlock_method?: "bridge" | "doorking" | undefined;
        } | undefined;
        igloohome_metadata?: {
            device_id: string;
            device_name: string;
            bridge_id?: string | undefined;
            bridge_name?: string | undefined;
        } | undefined;
        nest_metadata?: {
            device_name: string;
            nest_device_id: string;
            custom_name: string;
        } | undefined;
        ecobee_metadata?: {
            device_name: string;
            ecobee_device_id: string;
        } | undefined;
        honeywell_resideo_metadata?: {
            device_name: string;
            honeywell_resideo_device_id: string;
        } | undefined;
        hubitat_metadata?: {
            device_id: string;
            device_name: string;
            device_label: string;
        } | undefined;
        dormakaba_oracode_metadata?: {
            door_name: string;
            site_id: number;
            site_name: string;
            door_id: number;
            device_id?: number | undefined;
            iana_timezone?: string | undefined;
            predefined_time_slots?: {
                name: string;
                prefix: number;
                check_in_time: string;
                check_out_time: string;
                is_24_hour: boolean;
                is_biweekly_mode: boolean;
                is_one_shot: boolean;
                is_master: boolean;
                ext_dormakaba_oracode_user_level_prefix: number;
                dormakaba_oracode_user_level_id: string;
            }[] | undefined;
        } | undefined;
        wyze_metadata?: {
            device_id: string;
            device_name: string;
            product_name: string;
            product_type: string;
            product_model: string;
            device_info_model: string;
        } | undefined;
        tedee_metadata?: {
            device_id: number;
            device_name: string;
            bridge_id: number;
            device_model: string;
            bridge_name: string;
            serial_number: string;
            keypad_id?: number | undefined;
        } | undefined;
    } & ({
        _experimental_supported_code_from_access_codes_lengths?: number[] | undefined;
        code_constraints?: ({
            constraint_type: "no_zeros" | "cannot_start_with_12" | "no_triple_consecutive_ints" | "cannot_specify_pin_code" | "pin_code_matches_existing_set" | "start_date_in_future" | "no_ascending_or_descending_sequence" | "at_least_three_unique_digits";
        } | {
            constraint_type: "name_length";
            min_length?: number | undefined;
            max_length?: number | undefined;
        })[] | undefined;
        supported_code_lengths?: number[] | undefined;
        max_active_codes_supported?: number | undefined;
        supports_backup_access_code_pool?: boolean | undefined;
        has_native_entry_events?: boolean | undefined;
        locked?: boolean | undefined;
        keypad_battery?: {
            level: number;
        } | undefined;
        door_open?: boolean | undefined;
    } & ({
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
        is_heating_available?: true | undefined;
        min_heating_cooling_delta_celsius?: number | undefined;
        min_heating_cooling_delta_fahrenheit?: number | undefined;
    } | {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_cooling_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_heating_set_point_celsius?: number | undefined;
        min_heating_set_point_fahrenheit?: number | undefined;
        max_heating_set_point_celsius?: number | undefined;
        max_heating_set_point_fahrenheit?: number | undefined;
        is_heating_available?: true | undefined;
    } | {
        temperature_fahrenheit?: number | undefined;
        temperature_celsius?: number | undefined;
        relative_humidity?: number | undefined;
        can_enable_automatic_heating?: boolean | undefined;
        can_enable_automatic_cooling?: boolean | undefined;
        available_hvac_mode_settings?: ("off" | "heat" | "cool" | "heat_cool")[] | undefined;
        is_heating_available?: false | undefined;
        is_heating?: boolean | undefined;
        is_cooling?: boolean | undefined;
        is_fan_running?: boolean | undefined;
        fan_mode_setting?: "auto" | "on" | undefined;
        is_temporary_manual_override_active?: boolean | undefined;
        current_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        default_climate_setting?: {
            automatic_heating_enabled: boolean;
            automatic_cooling_enabled: boolean;
            hvac_mode_setting: "off" | "heat" | "cool" | "heat_cool";
            manual_override_allowed: boolean;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
        } | undefined;
        is_climate_setting_schedule_active?: boolean | undefined;
        active_climate_setting_schedule?: {
            device_id: string;
            created_at: string;
            climate_setting_schedule_id: string;
            schedule_type: "time_bound";
            schedule_starts_at: string;
            schedule_ends_at: string;
            name?: string | undefined;
            errors?: any;
            automatic_heating_enabled?: boolean | undefined;
            automatic_cooling_enabled?: boolean | undefined;
            hvac_mode_setting?: "off" | "heat" | "cool" | "heat_cool" | undefined;
            cooling_set_point_celsius?: number | undefined;
            heating_set_point_celsius?: number | undefined;
            cooling_set_point_fahrenheit?: number | undefined;
            heating_set_point_fahrenheit?: number | undefined;
            manual_override_allowed?: boolean | undefined;
        } | undefined;
        min_cooling_set_point_celsius?: number | undefined;
        min_cooling_set_point_fahrenheit?: number | undefined;
        max_cooling_set_point_celsius?: number | undefined;
        max_cooling_set_point_fahrenheit?: number | undefined;
        is_cooling_available?: true | undefined;
    }))) | undefined);
    nickname?: string | undefined;
    can_remotely_unlock?: boolean | undefined;
    can_remotely_lock?: boolean | undefined;
    can_program_offline_access_codes?: boolean | undefined;
    can_program_online_access_codes?: boolean | undefined;
    can_simulate_removal?: boolean | undefined;
}>;
export type ManagedDevice = z.infer<typeof managed_device>;
export type ManagedDeviceWithBackendMetadata<MetadataKey extends keyof z.infer<typeof device_metadata>> = Simplify<ManagedDevice & {
    properties: SetRequired<ManagedDevice['properties'], MetadataKey>;
}>;

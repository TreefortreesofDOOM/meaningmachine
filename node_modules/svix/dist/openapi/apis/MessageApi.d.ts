import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext } from '../http/http';
import { ListResponseMessageOut } from '../models/ListResponseMessageOut';
import { MessageAttemptOut } from '../models/MessageAttemptOut';
import { MessageIn } from '../models/MessageIn';
import { MessageOut } from '../models/MessageOut';
import { MessageRawPayloadOut } from '../models/MessageRawPayloadOut';
import { MessageStreamOut } from '../models/MessageStreamOut';
export declare class MessageApiRequestFactory extends BaseAPIRequestFactory {
    createMessageAttemptForEndpoint(appId: string, endpointId: string, messageIn: MessageIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1MessageCreate(appId: string, messageIn: MessageIn, withContent?: boolean, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1MessageExpungeContent(appId: string, msgId: string, _options?: Configuration): Promise<RequestContext>;
    v1MessageGet(appId: string, msgId: string, withContent?: boolean, _options?: Configuration): Promise<RequestContext>;
    v1MessageGetRawPayload(appId: string, msgId: string, _options?: Configuration): Promise<RequestContext>;
    v1MessageList(appId: string, limit?: number, iterator?: string, channel?: string, before?: Date, after?: Date, withContent?: boolean, tag?: string, eventTypes?: Array<string>, _options?: Configuration): Promise<RequestContext>;
    v1MessageStream(appId: string, limit?: number, iterator?: string, eventTypes?: Array<string>, channels?: Array<string>, _options?: Configuration): Promise<RequestContext>;
}
export declare class MessageApiResponseProcessor {
    createMessageAttemptForEndpoint(response: ResponseContext): Promise<MessageAttemptOut>;
    v1MessageCreate(response: ResponseContext): Promise<MessageOut>;
    v1MessageExpungeContent(response: ResponseContext): Promise<void>;
    v1MessageGet(response: ResponseContext): Promise<MessageOut>;
    v1MessageGetRawPayload(response: ResponseContext): Promise<MessageRawPayloadOut>;
    v1MessageList(response: ResponseContext): Promise<ListResponseMessageOut>;
    v1MessageStream(response: ResponseContext): Promise<MessageStreamOut>;
}
